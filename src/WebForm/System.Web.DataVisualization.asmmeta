#include "versions.h"
#include "ndp40.versions.h"

.assembly extern System
{
	.publickeytoken = SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_ASSEMBLY_VERSION_IL
}
.assembly extern System.Data
{
	.publickeytoken = SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_DATA_ASSEMBLY_VERSION_IL
}
.assembly extern System.Drawing
{
	.publickeytoken = SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_DRAWING_ASSEMBLY_VERSION_IL
}
.assembly extern System.Web
{
	.publickeytoken = SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_WEB_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml
{
	.publickeytoken = SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_40_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_40_ASSEMBLY_VERSION_IL
}
.assembly System.Web.DataVisualization
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.CompilerServices.InternalsVisibleToAttribute::.ctor(string) = { string('System.Web.DataVisualization.Design, PublicKey=0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9') }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { property enum [mscorlib]System.Security.PartialTrustVisibilityLevel PartialTrustVisibilityLevel = int32(1) }
	.custom instance void [mscorlib]System.Security.SecurityRulesAttribute::.ctor(valuetype [mscorlib]System.Security.SecurityRuleSet) = { uint8(2) property bool SkipVerificationInFullTrust = bool(true) }
	.publickey = SYSTEM_WEB_DATAVISUALIZATION_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver SYSTEM_WEB_DATAVISUALIZATION_ASSEMBLY_VERSION_IL
}
.class private abstract sealed AssemblyRef
	extends [mscorlib]System.Object
{
	.field static assembly literal string ASPBrowserCapsFactory = "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f"
	.field static assembly literal string ASPBrowserCapsPublicKey = "b7bd7678b977bd8f"
	.field static assembly literal string EcmaPublicKey = "b77a5c561934e089"
	.field static assembly literal string EcmaPublicKeyFull = "00000000000000000400000000000000"
	.field static assembly literal string EcmaPublicKeyToken = "b77a5c561934e089"
	.field static assembly literal string MicrosoftJScript = "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftPublicKey = "b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftPublicKeyFull = "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
	.field static assembly literal string MicrosoftPublicKeyToken = "b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftVSDesigner = "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftVSDesignerMobile = "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftVisualStudio = "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftVisualStudioWeb = "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftVisualStudioWindowsForms = "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string MicrosoftWebDesign = "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string Mscorlib = "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string PlatformPublicKey = "b77a5c561934e089"
	.field static assembly literal string PlatformPublicKeyFull = "00000000000000000400000000000000"
	.field static assembly literal string PlatformPublicKeyToken = "b77a5c561934e089"
	.field static assembly literal string SharedLibPublicKey = "31bf3856ad364e35"
	.field static assembly literal string SharedLibPublicKeyFull = "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"
	.field static assembly literal string SharedLibPublicKeyToken = "31bf3856ad364e35"
	.field static assembly literal string SilverlightPlatformPublicKey = "7cec85d7bea7798e"
	.field static assembly literal string SilverlightPlatformPublicKeyFull = "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB"
	.field static assembly literal string SilverlightPlatformPublicKeyToken = "7cec85d7bea7798e"
	.field static assembly literal string SilverlightPublicKey = "31bf3856ad364e35"
	.field static assembly literal string SilverlightPublicKeyFull = "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"
	.field static assembly literal string SilverlightPublicKeyToken = "31bf3856ad364e35"
	.field static assembly literal string System = "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemComponentModelDataAnnotations = "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemConfiguration = "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemConfigurationInstall = "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemCore = "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemData = "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemDataOracleClient = "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemDeployment = "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemDesign = "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemDirectoryServices = "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemDrawing = "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemDrawingDesign = "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemEnterpriseServices = "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemManagement = "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemMessaging = "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemNetHttp = "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemNetHttpWebRequest = "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemNumerics = "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemRuntimeRemoting = "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemRuntimeSerializationFormattersSoap = "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemRuntimeWindowsRuntime = "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemRuntimeWindowsRuntimeUIXaml = "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemSecurity = "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemServiceModelWeb = "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemServiceProcess = "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemThreadingTasksDataflow = "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemWeb = "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemWebAbstractions = "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebDynamicData = "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebDynamicDataDesign = "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebEntityDesign = "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemWebExtensions = "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebExtensionsDesign = "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebMobile = "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemWebRegularExpressions = "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemWebRouting = "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
	.field static assembly literal string SystemWebServices = "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string SystemWindowsForms = "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string SystemXml = "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	.field static assembly literal string VJSharpCodeProvider = "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
	.field static assembly literal string WindowsBase = "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
}
.class private abstract sealed FXAssembly
	extends [mscorlib]System.Object
{
	.field static assembly literal string Version = "4.0.0.0"
}
.class private abstract sealed ThisAssembly
	extends [mscorlib]System.Object
{
	.field static assembly literal string BuildRevisionStr = "0"
	.field static assembly literal string Copyright = bytearray(A9 00 20 00 4D 00 69 00 63 00 72 00 6F 00 73 00 6F 00 66 00 74 00 20 00 43 00 6F 00 72 00 70 00 6F 00 72 00 61 00 74 00 69 00 6F 00 6E 00 2E 00 20 00 20 00 41 00 6C 00 6C 00 20 00 72 00 69 00 67 00 68 00 74 00 73 00 20 00 72 00 65 00 73 00 65 00 72 00 76 00 65 00 64 00 2E 00)
	.field static assembly literal int32 DailyBuildNumber = int32(0x0000766F)
	.field static assembly literal string DailyBuildNumberStr = "30319"
	.field static assembly literal string DefaultAlias = "System.Web.DataVisualization.dll"
	.field static assembly literal string Description = "System.Web.DataVisualization.dll"
	.field static assembly literal string InformationalVersion = "4.0.30319.0"
	.field static assembly literal string Title = "System.Web.DataVisualization.dll"
	.field static assembly literal string Version = "4.0.0.0"
}
.namespace 'System.Web.UI.DataVisualization.Charting'
{
	.class private AnchorPointValueConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract Annotation
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_AnnotationType()
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ClipToChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ClipToChartArea(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle' get_SmartLabelStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SmartLabelStyle(class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' get_AnnotationGroup()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsSizeAlwaysRelative()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsSizeAlwaysRelative(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_X()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_X(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Y()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Y(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Width()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Width(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Height()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Height(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Right()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Right(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Bottom()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Bottom(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsSelected()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsSelected(bool 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_AxisXName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AxisXName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_AxisYName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AxisYName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_YAxisName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_YAxisName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisX()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AxisX(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisY()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AxisY(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_AnchorDataPointName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorDataPointName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' get_AnchorDataPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorDataPoint(class 'System.Web.UI.DataVisualization.Charting.DataPoint' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_AnchorX()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorX(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_AnchorY()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorY(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_AnchorOffsetX()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorOffsetX(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_AnchorOffsetY()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorOffsetY(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_AnchorAlignment()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
		}
		.method assembly virtual hidebysig newslot strict 
			instance void PaintSelectionHandles(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraphics, valuetype [System.Drawing]System.Drawing.RectangleF rect, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ResizeToContent()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetContentPosition()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void GetRelativePosition([out] valuetype [System.Drawing]System.Drawing.PointF& location, [out] valuetype [System.Drawing]System.Drawing.SizeF& size, [out] valuetype [System.Drawing]System.Drawing.PointF& anchorLocation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetPositionRelative(valuetype [System.Drawing]System.Drawing.RectangleF position, valuetype [System.Drawing]System.Drawing.PointF anchorPoint, bool userInput)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AdjustLocationSize(valuetype [System.Drawing]System.Drawing.SizeF movingDistance, valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' resizeMode)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AdjustLocationSize(valuetype [System.Drawing]System.Drawing.SizeF movingDistance, valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' resizeMode, bool pixelCoord)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AdjustLocationSize(valuetype [System.Drawing]System.Drawing.SizeF movingDistance, valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' resizeMode, bool pixelCoord, bool userInput)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance bool IsAnchorDrawn()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' GetDataPointByName(string dataPointName)
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetDataPointName(class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SendToBack()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void BringToFront()
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddSmartLabelMarkerPositions(class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method public hidebysig 
			instance void SetAnchor(class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint)
		{
			ret
		}
		.method public hidebysig 
			instance void SetAnchor(class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint1, class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint2)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetCurrentRelativePosition()
		{
			ret
		}
		.method assembly hidebysig 
			instance string ReplaceKeywords(string strOriginal)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsAnchorVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' GetGraphics()
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetAxes(class 'System.Web.UI.DataVisualization.Charting.Axis'& vertAxis, class 'System.Web.UI.DataVisualization.Charting.Axis'& horizAxis)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field static assembly float64 WidthHightLimit
		.field assembly valuetype [System.Drawing]System.Drawing.ContentAlignment anchorAlignment
		.field assembly float64 anchorOffsetX
		.field assembly float64 anchorOffsetY
		.field assembly class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' annotationGroup
		.field assembly valuetype [System.Drawing]System.Drawing.PointF currentAnchorLocationRel
		.field assembly int32 currentPathPointIndex
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF currentPositionRel
		.field assembly valuetype [System.Drawing]System.Drawing.Color lineColor
		.field static assembly literal int32 selectionMarkerSize = int32(0x00000006)
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF[] selectionRects
		.field assembly class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath startMovePathRel
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF startMovePositionRel
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('MiddleCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment AnchorAlignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('BottomCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' AnchorDataPoint()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorDataPoint()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorDataPoint(class 'System.Web.UI.DataVisualization.Charting.DataPoint')
		}
		.property instance string AnchorDataPointName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorDataPointName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorDataPointName(string)
		}
		.property instance float64 AnchorOffsetX()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorOffsetX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorOffsetX(float64)
		}
		.property instance float64 AnchorOffsetY()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorOffsetY()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorOffsetY(float64)
		}
		.property instance float64 AnchorX()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorX(float64)
		}
		.property instance float64 AnchorY()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnchorY()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AnchorY(float64)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' AnnotationGroup()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnnotationGroup()
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AnnotationType()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisX()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AxisX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AxisX(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance string AxisXName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AxisXName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AxisXName(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisY()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AxisY()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AxisY(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance string AxisYName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_AxisYName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_AxisYName(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Annotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Annotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance float64 Bottom()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Bottom()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Bottom(float64)
		}
		.property instance string ClipToChartArea()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_ClipToChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_ClipToChartArea(string)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Annotation'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance float64 Height()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Height()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Height(float64)
		}
		.property instance bool IsSelected()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Annotation'::get_IsSelected()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_IsSelected(bool)
		}
		.property instance bool IsSizeAlwaysRelative()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Annotation'::get_IsSizeAlwaysRelative()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_IsSizeAlwaysRelative(bool)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Annotation'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Annotation'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_LineWidth(int32)
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_MapAreaAttributes(string)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_PostBackValue(string)
		}
		.property instance float64 Right()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Right()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Right(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_SelectionPointsStyle()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128,0,0,0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Annotation'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Annotation'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_ShadowOffset(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle' SmartLabelStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_SmartLabelStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_SmartLabelStyle(class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.TextStyle) string('Default') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.Annotation'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Url(string)
		}
		.property instance bool Visible()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Visible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Visible(bool)
		}
		.property instance float64 Width()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Width()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Width(float64)
		}
		.property instance float64 X()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_X()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_X(float64)
		}
		.property instance float64 Y()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Annotation'::get_Y()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_Y(float64)
		}
		.property instance string YAxisName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Annotation'::get_YAxisName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Annotation'::set_YAxisName(string)
		}
	}
	.class private AnnotationAxisValueConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public AnnotationCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Annotation'>
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' get_AnnotationGroup()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_AnnotationGroup(class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Initialize(class 'System.Web.UI.DataVisualization.Charting.Annotation' item)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Deinitialize(class 'System.Web.UI.DataVisualization.Charting.Annotation' item)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Annotation' FindByName(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, bool drawAnnotationOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChartAreaNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' AnnotationGroup()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup' 'System.Web.UI.DataVisualization.Charting.AnnotationCollection'::get_AnnotationGroup()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationCollection'::set_AnnotationGroup(class 'System.Web.UI.DataVisualization.Charting.AnnotationGroup')
		}
	}
	.class public AnnotationGroup
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ClipToChartArea()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ClipToChartArea(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSizeAlwaysRelative()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_IsSizeAlwaysRelative(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSelected()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_IsSelected(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' get_Annotations()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' annotations
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('MiddleCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_AnnotationType()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' Annotations()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_Annotations()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string ClipToChartArea()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_ClipToChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_ClipToChartArea(string)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance bool IsSelected()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_IsSelected()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_IsSelected(bool)
		}
		.property instance bool IsSizeAlwaysRelative()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_IsSizeAlwaysRelative()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_IsSizeAlwaysRelative(bool)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_LineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_SelectionPointsStyle()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128,0,0,0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_ShadowOffset(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
		.property instance bool Visible()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::get_Visible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationGroup'::set_Visible(bool)
		}
	}
	.class public AnnotationPathPoint
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 x, float32 y)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 x, float32 y, uint8 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_X()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_X(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Y()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Y(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint8 get_PointType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointType(uint8 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('PathPoint') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::get_Name()
		}
		.property instance uint8 PointType()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([mscorlib]System.Byte) string('1') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance uint8 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::get_PointType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::set_PointType(uint8)
		}
		.property instance float32 X()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::get_X()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::set_X(float32)
		}
		.property instance float32 Y()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::get_Y()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'::set_Y(float32)
		}
	}
	.class public AnnotationPathPointCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.AnnotationPathPoint'>
	{
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation' annotation)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Invalidate()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation' annotation
	}
	.class private AnnotationSmartLabel
		extends 'System.Web.UI.DataVisualization.Charting.SmartLabel'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance bool IsSmartLabelCollide(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, valuetype [System.Drawing]System.Drawing.PointF markerPosition, class [System.Drawing]System.Drawing.StringFormat format, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment, bool checkCalloutLineOverlapping)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void AddMarkersPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void DrawCallout(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF labelPosition, valuetype [System.Drawing]System.Drawing.SizeF labelSize, class [System.Drawing]System.Drawing.StringFormat format, valuetype [System.Drawing]System.Drawing.PointF markerPosition, valuetype [System.Drawing]System.Drawing.SizeF markerSize, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment)
		{
			ret
		}
	}
	.class public AnnotationSmartLabelStyle
		extends 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object chartElement)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' get_CalloutStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_CalloutLineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutLineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_CalloutLineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutLineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_CalloutBackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutBackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_CalloutLineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutLineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_CalloutLineAnchorCapStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_CalloutLineAnchorCapStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color CalloutBackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Transparent') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutBackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutBackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' CalloutLineAnchorCapStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutLineAnchorCapStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutLineAnchorCapStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color CalloutLineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutLineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutLineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' CalloutLineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutLineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutLineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 CalloutLineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutLineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutLineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' CalloutStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3A 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 61 62 65 6C 43 61 6C 6C 6F 75 74 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::get_CalloutStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabelStyle'::set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle')
		}
	}
	.class public AnovaResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance float64 get_SumOfSquaresBetweenGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SumOfSquaresWithinGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SumOfSquaresTotal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_DegreeOfFreedomBetweenGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_DegreeOfFreedomWithinGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_DegreeOfFreedomTotal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_MeanSquareVarianceBetweenGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_MeanSquareVarianceWithinGroups()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FRatio()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FCriticalValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly float64 degreeOfFreedomBetweenGroups
		.field assembly float64 degreeOfFreedomTotal
		.field assembly float64 degreeOfFreedomWithinGroups
		.field assembly float64 fCriticalValue
		.field assembly float64 fRatio
		.field assembly float64 meanSquareVarianceBetweenGroups
		.field assembly float64 meanSquareVarianceWithinGroups
		.field assembly float64 sumOfSquaresBetweenGroups
		.field assembly float64 sumOfSquaresTotal
		.field assembly float64 sumOfSquaresWithinGroups
		.property instance float64 DegreeOfFreedomBetweenGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_DegreeOfFreedomBetweenGroups()
		}
		.property instance float64 DegreeOfFreedomTotal()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_DegreeOfFreedomTotal()
		}
		.property instance float64 DegreeOfFreedomWithinGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_DegreeOfFreedomWithinGroups()
		}
		.property instance float64 FCriticalValue()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_FCriticalValue()
		}
		.property instance float64 FRatio()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_FRatio()
		}
		.property instance float64 MeanSquareVarianceBetweenGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_MeanSquareVarianceBetweenGroups()
		}
		.property instance float64 MeanSquareVarianceWithinGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_MeanSquareVarianceWithinGroups()
		}
		.property instance float64 SumOfSquaresBetweenGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_SumOfSquaresBetweenGroups()
		}
		.property instance float64 SumOfSquaresTotal()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_SumOfSquaresTotal()
		}
		.property instance float64 SumOfSquaresWithinGroups()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AnovaResult'::get_SumOfSquaresWithinGroups()
		}
	}
	.class public sealed AntiAliasingStyles
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' All = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' Graphics = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' Text = int32(0x00000001)
	}
	.class public sealed AreaAlignmentOrientations
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' All = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' Horizontal = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' Vertical = int32(0x00000001)
	}
	.class public sealed AreaAlignmentStyles
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' All = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' AxesView = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' PlotPosition = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' Position = int32(0x00000001)
	}
	.class public ArrowAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' get_ArrowStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ArrowStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_ArrowSize()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ArrowSize(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_AnchorAlignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment AnchorAlignment()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('TopLeft') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::get_AnchorAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::get_AnnotationType()
		}
		.property instance int32 ArrowSize()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(5) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::get_ArrowSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::set_ArrowSize(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' ArrowStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 33 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 72 72 6F 77 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::get_ArrowStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::set_ArrowStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.ArrowAnnotation'::get_SelectionPointsStyle()
		}
	}
	.class private sealed ArrowOrientation
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation' Bottom = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation' Left = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation' Right = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation' Top = int32(0x00000002)
	}
	.class public sealed ArrowStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' DoubleArrow = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' Simple = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ArrowStyle' Tailed = int32(0x00000002)
	}
	.class private AxesArrayConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Axis
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartArea' chartArea, valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisTypeName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(class 'System.Web.UI.DataVisualization.Charting.ChartArea' chartArea, valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisTypeName)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetName(valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisName)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' get_ChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' get_TextOrientation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance string get_SubAxisName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInterlaced()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsInterlaced(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_InterlacedColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InterlacedColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' get_AxisName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' get_ArrowStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ArrowStyle(valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Grid' get_MajorGrid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MajorGrid(class 'System.Web.UI.DataVisualization.Charting.Grid' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Grid' get_MinorGrid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinorGrid(class 'System.Web.UI.DataVisualization.Charting.Grid' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.TickMark' get_MajorTickMark()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MajorTickMark(class 'System.Web.UI.DataVisualization.Charting.TickMark' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.TickMark' get_MinorTickMark()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinorTickMark(class 'System.Web.UI.DataVisualization.Charting.TickMark' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLabelAutoFit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsLabelAutoFit(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LabelAutoFitMinFontSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelAutoFitMinFontSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LabelAutoFitMaxFontSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelAutoFitMaxFontSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' get_LabelAutoFitStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelAutoFitStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsMarksNextToAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsMarksNextToAxis(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_TitleForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_TitleAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_TitleFont()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleFont(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.StripLinesCollection' get_StripLines()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_MaximumAutoSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumAutoSize(float32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Interval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Interval(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffset(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void PrePaint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintOnSegmentedScalePassOne(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintOnSegmentedScalePassTwo(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawRadialLine(object obj, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, float64 position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawCircularLine(object obj, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, float32 position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawAxisLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool backElements)
		{
			ret
		}
		.method assembly hidebysig 
			instance float32 GetMarksZPosition([out] bool& axisOnEdge)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintGrids(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintGrids(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, [out] object& obj)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintStrips(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool drawLinesOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintStrips(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool selectionMode, int32 x, int32 y, [out] object& obj, bool drawLinesOnly)
		{
			ret
		}
		.method public hidebysig 
			instance void RoundAxisValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ReCalc(class 'System.Web.UI.DataVisualization.Charting.ElementPosition' position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void StoreAxisValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAxisValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAutoValues()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void Resize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, class 'System.Web.UI.DataVisualization.Charting.ElementPosition' chartAreaPosition, valuetype [System.Drawing]System.Drawing.RectangleF plotArea, float32 axesNumber, bool autoPlotPosition)
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetCircularAxisLabelsAutoFitFont(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class [mscorlib]System.Collections.ArrayList axisList, valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' labelsStyle, valuetype [System.Drawing]System.Drawing.RectangleF plotAreaRectAbs, valuetype [System.Drawing]System.Drawing.RectangleF areaRectAbs, float32 labelsSizeEstimate)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool CheckCircularLabelsFit(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class [mscorlib]System.Collections.ArrayList axisList, valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' labelsStyle, valuetype [System.Drawing]System.Drawing.RectangleF plotAreaRectAbs, valuetype [System.Drawing]System.Drawing.RectangleF areaRectAbs, float32 labelsSizeEstimate)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AdjustLabelFontAtSecondPass(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, bool autoPlotPosition)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetLogValue(float64 yValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance float32 GetGroupLablesToatalSize()
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 GetGroupLabelLevelCount()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' GetSubAxis(string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool GetIsMarksNextToAxis()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' GetAxisIntervalType()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' GetAxisValuesType()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetArrowSize([out] valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation'& arrowOrientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance float32 GetPixelInterval(float64 realInterval)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsAxisOnAreaEdge()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetAxisPosition()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance float64 GetAxisPosition(bool ignoreCrossing)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetAxisProjectionAngle()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LabelStyle' get_LabelStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelStyle(class 'System.Web.UI.DataVisualization.Charting.LabelStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabelsCollection' get_CustomLabels()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsCustomGridLines()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsCustomTickMarks()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' GetAxisType()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.ArrayList GetAxisSeries()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' GetOtherTypeAxis()
		{
			ret
		}
		.method assembly hidebysig 
			instance void PostFillLabels()
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillLabels(bool removeFirstRow)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' get_AxisPosition()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void set_AxisPosition(valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' get_IntervalAutoMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalAutoMode(valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReversed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsReversed(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsStartedFromZero()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsStartedFromZero(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMarginVisible()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsMarginVisible(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_InternalIntervalType()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_InternalIntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SetInterval(float64 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetIntervalAndType(float64 newInterval, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' newIntervalType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Maximum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Maximum(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Minimum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Minimum(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_Crossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Crossing(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLogarithmic()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsLogarithmic(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_LogarithmBase()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LogarithmBase(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle' get_ScaleBreakStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ScaleBreakStyle(class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection' get_ScaleSegments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleView' get_ScaleView()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScaleView(class 'System.Web.UI.DataVisualization.Charting.AxisScaleView' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance float64 get_ViewMinimum()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance float64 get_ViewMaximum()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_AutoMaximum()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_AutoMinimum()
		{
			ret
		}
		.method public hidebysig 
			instance float64 GetPosition(float64 axisValue)
		{
			ret
		}
		.method public hidebysig 
			instance float64 ValueToPosition(float64 axisValue)
		{
			ret
		}
		.method public hidebysig 
			instance float64 ValueToPixelPosition(float64 axisValue)
		{
			ret
		}
		.method public hidebysig 
			instance float64 PositionToValue(float64 position)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 PositionToValue(float64 position, bool validateInput)
		{
			ret
		}
		.method public hidebysig 
			instance float64 PixelPositionToValue(float64 position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAxisPosition()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetTempAxisOffset()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetTempAxisOffset()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 RoundedValues(float64 inter, bool shouldStartFromZero, bool autoMax, bool autoMin, float64& min, float64& max)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 CalcInterval(float64 diff)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 CalcInterval(float64 min, float64 max, bool 'date', [out] valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType'& 'type', valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' valuesType)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' GetDateTimeType()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAutoMinimum(float64 min)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAutoMaximum(float64 max)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' GetOppositeAxis()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetLinearPosition(float64 axisValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EstimateAxis()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 EstimateAxis(float64& minimumValue, float64& maximumValue, bool autoMaximum, bool autoMinimum)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 EstimateNumberAxis(float64& minimumValue, float64& maximumValue, bool shouldStartFromZero, int32 preferredNumberOfIntervals, bool autoMaximum, bool autoMinimum)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ElementPosition' PlotAreaPosition
		.field assembly bool autoEnabled
		.field assembly int32 autoLabelAngle
		.field assembly class [System.Drawing]System.Drawing.Font autoLabelFont
		.field assembly int32 autoLabelOffset
		.field assembly class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle' axisScaleBreakStyle
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisType
		.field assembly float64 crossing
		.field static assembly literal float32 elementSpacing = float32(0x3F800000)
		.field assembly bool enabled
		.field assembly float32[] groupingLabelSizes
		.field assembly float64 interval
		.field assembly float64 interval3DCorrection
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType
		.field assembly bool isReversed
		.field assembly bool isStartedFromZero
		.field assembly int32 labelAutoFitMaxFontSize
		.field assembly int32 labelAutoFitMinFontSize
		.field assembly float32 labelFarOffset
		.field assembly float32 labelNearOffset
		.field assembly float32 labelSize
		.field assembly class 'System.Web.UI.DataVisualization.Charting.LabelStyle' labelStyle
		.field assembly float64 logarithmBase
		.field assembly bool logarithmicConvertedToLinear
		.field assembly float64 logarithmicMaximum
		.field assembly float64 logarithmicMinimum
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Grid' majorGrid
		.field assembly class 'System.Web.UI.DataVisualization.Charting.TickMark' majorTickMark
		.field assembly float64 margin
		.field assembly float64 marginTemp
		.field assembly float64 marginView
		.field assembly float32 markSize
		.field assembly float64 maximum
		.field assembly float64 maximumFromData
		.field assembly float64 minimum
		.field assembly float64 minimumFromData
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Grid' minorGrid
		.field assembly class 'System.Web.UI.DataVisualization.Charting.TickMark' minorTickMark
		.field assembly int32 numberOfPointsInAllSeries
		.field assembly bool offsetTempSet
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' oppositeAxis
		.field assembly bool optimizedGetPosition
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF paintAreaPosition
		.field assembly float64 paintAreaPositionBottom
		.field assembly float64 paintAreaPositionRight
		.field assembly float64 paintChartAreaSize
		.field assembly bool paintMode
		.field assembly float64 paintRange
		.field assembly float64 paintViewMax
		.field assembly float64 paintViewMin
		.field assembly int32 prefferedNumberofIntervals
		.field assembly bool refreshMinMaxFromData
		.field assembly bool roundedXValues
		.field assembly class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection' scaleSegments
		.field assembly bool scaleSegmentsUsed
		.field assembly float32 scrollBarSize
		.field assembly bool tempAutoMaximum
		.field assembly bool tempAutoMinimum
		.field assembly float64 tempCrossing
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' tempGridIntervalType
		.field assembly float64 tempLabelInterval
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' tempLabelIntervalType
		.field assembly class 'System.Web.UI.DataVisualization.Charting.CustomLabelsCollection' tempLabels
		.field assembly float64 tempMajorGridInterval
		.field assembly float64 tempMajorTickMarkInterval
		.field assembly float64 tempMaximum
		.field assembly float64 tempMinimum
		.field assembly float64 tempMinorGridInterval
		.field assembly float64 tempMinorTickMarkInterval
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' tempTickMarkIntervalType
		.field assembly float32 titleSize
		.field assembly float32 totlaGroupingLabelsSize
		.field assembly float32 totlaGroupingLabelsSizeAdjustment
		.field assembly float32 unRotatedLabelSize
		.field assembly float64 valueMultiplier
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' ArrowStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 78 69 73 41 72 72 6F 77 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' 'System.Web.UI.DataVisualization.Charting.Axis'::get_ArrowStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_ArrowStyle(valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle')
		}
		.property instance bool AutoMaximum()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_AutoMaximum()
		}
		.property instance bool AutoMinimum()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_AutoMinimum()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' AxisName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' 'System.Web.UI.DataVisualization.Charting.Axis'::get_AxisName()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' AxisPosition()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 35 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 78 69 73 50 6F 73 69 74 69 6F 6E 00 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' 'System.Web.UI.DataVisualization.Charting.Axis'::get_AxisPosition()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_AxisPosition(valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' ChartArea()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'System.Web.UI.DataVisualization.Charting.Axis'::get_ChartArea()
		}
		.property instance float64 Crossing()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_Crossing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Crossing(float64)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CustomLabelsCollection' CustomLabels()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.CustomLabelsCollection' 'System.Web.UI.DataVisualization.Charting.Axis'::get_CustomLabels()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.AxisEnabled) string('Auto') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' 'System.Web.UI.DataVisualization.Charting.Axis'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Enabled(valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color InterlacedColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Axis'::get_InterlacedColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_InterlacedColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' InternalIntervalType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.Axis'::get_InternalIntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_InternalIntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance float64 Interval()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_Interval()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Interval(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' IntervalAutoMode()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 39 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 49 6E 74 65 72 76 61 6C 41 75 74 6F 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' 'System.Web.UI.DataVisualization.Charting.Axis'::get_IntervalAutoMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IntervalAutoMode(valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode')
		}
		.property instance float64 IntervalOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_IntervalOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IntervalOffset(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalOffsetType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.Axis'::get_IntervalOffsetType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.Axis'::get_IntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance bool IsAxisOnAreaEdge()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsAxisOnAreaEdge()
		}
		.property instance bool IsInterlaced()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsInterlaced()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsInterlaced(bool)
		}
		.property instance bool IsLabelAutoFit()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsLabelAutoFit()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsLabelAutoFit(bool)
		}
		.property instance bool IsLogarithmic()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsLogarithmic()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsLogarithmic(bool)
		}
		.property instance bool IsMarginVisible()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsMarginVisible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsMarginVisible(bool)
		}
		.property instance bool IsMarksNextToAxis()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsMarksNextToAxis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsMarksNextToAxis(bool)
		}
		.property instance bool IsReversed()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsReversed()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsReversed(bool)
		}
		.property instance bool IsStartedFromZero()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Axis'::get_IsStartedFromZero()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_IsStartedFromZero(bool)
		}
		.property instance int32 LabelAutoFitMaxFontSize()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(10) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Axis'::get_LabelAutoFitMaxFontSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LabelAutoFitMaxFontSize(int32)
		}
		.property instance int32 LabelAutoFitMinFontSize()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(6) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Axis'::get_LabelAutoFitMinFontSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LabelAutoFitMinFontSize(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' LabelAutoFitStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 61 62 65 6C 41 75 74 6F 46 69 74 53 74 79 6C 65 73 4F 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' 'System.Web.UI.DataVisualization.Charting.Axis'::get_LabelAutoFitStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LabelAutoFitStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LabelStyle' LabelStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.LabelStyle' 'System.Web.UI.DataVisualization.Charting.Axis'::get_LabelStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LabelStyle(class 'System.Web.UI.DataVisualization.Charting.LabelStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Axis'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Axis'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Axis'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LineWidth(int32)
		}
		.property instance float64 LogarithmBase()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 24 40 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_LogarithmBase()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_LogarithmBase(float64)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Grid' MajorGrid()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Grid' 'System.Web.UI.DataVisualization.Charting.Axis'::get_MajorGrid()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MajorGrid(class 'System.Web.UI.DataVisualization.Charting.Grid')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.TickMark' MajorTickMark()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.TickMark' 'System.Web.UI.DataVisualization.Charting.Axis'::get_MajorTickMark()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MajorTickMark(class 'System.Web.UI.DataVisualization.Charting.TickMark')
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MapAreaAttributes(string)
		}
		.property instance float64 Maximum()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_Maximum()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Maximum(float64)
		}
		.property instance float32 MaximumAutoSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 96 42 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Axis'::get_MaximumAutoSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MaximumAutoSize(float32)
		}
		.property instance float64 Minimum()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_Minimum()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Minimum(float64)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Grid' MinorGrid()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Grid' 'System.Web.UI.DataVisualization.Charting.Axis'::get_MinorGrid()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MinorGrid(class 'System.Web.UI.DataVisualization.Charting.Grid')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.TickMark' MinorTickMark()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.TickMark' 'System.Web.UI.DataVisualization.Charting.Axis'::get_MinorTickMark()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_MinorTickMark(class 'System.Web.UI.DataVisualization.Charting.TickMark')
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_PostBackValue(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle' ScaleBreakStyle()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle' 'System.Web.UI.DataVisualization.Charting.Axis'::get_ScaleBreakStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_ScaleBreakStyle(class 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection' ScaleSegments()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection' 'System.Web.UI.DataVisualization.Charting.Axis'::get_ScaleSegments()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleView' ScaleView()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleView' 'System.Web.UI.DataVisualization.Charting.Axis'::get_ScaleView()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_ScaleView(class 'System.Web.UI.DataVisualization.Charting.AxisScaleView')
		}
		.property instance float64 SetInterval()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_SetInterval(float64)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.StripLinesCollection' StripLines()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.StripLinesCollection' 'System.Web.UI.DataVisualization.Charting.Axis'::get_StripLines()
		}
		.property instance string SubAxisName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_SubAxisName()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' TextOrientation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 54 65 78 74 4F 72 69 65 6E 74 61 74 69 6F 6E 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'System.Web.UI.DataVisualization.Charting.Axis'::get_TextOrientation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation')
		}
		.property instance string Title()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_Title()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Title(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment TitleAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.StringAlignment) string('Center') }
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.Axis'::get_TitleAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_TitleAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance class [System.Drawing]System.Drawing.Font TitleFont()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.Axis'::get_TitleFont()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_TitleFont(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color TitleForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Axis'::get_TitleForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_TitleForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Axis'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Axis'::set_Url(string)
		}
		.property instance float64 ViewMaximum()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_ViewMaximum()
		}
		.property instance float64 ViewMinimum()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Axis'::get_ViewMinimum()
		}
	}
	.class public sealed AxisArrowStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' Lines = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' SharpTriangle = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' Triangle = int32(0x00000001)
	}
	.class private AxisCrossingValueConverter
		extends 'System.Web.UI.DataVisualization.Charting.AxisMinMaxValueConverter'
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AxisElementIntervalValueConverter
		extends 'System.Web.UI.DataVisualization.Charting.AxisIntervalValueConverter'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed AxisEnabled
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' False = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisEnabled' True = int32(0x00000001)
	}
	.class private AxisIntervalValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly bool hideNotSet
	}
	.class private AxisLabelDateValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AxisMinMaxAutoValueConverter
		extends 'System.Web.UI.DataVisualization.Charting.AxisMinMaxValueConverter'
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AxisMinMaxValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed AxisName
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' X = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' X2 = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' Y = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' Y2 = int32(0x00000003)
	}
	.class private sealed AxisPosition
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' Bottom = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' Left = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' Right = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisPosition' Top = int32(0x00000002)
	}
	.class public AxisScaleBreakStyle
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' get_StartFromZero()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StartFromZero(valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxNumberOfBreaks()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxNumberOfBreaks(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CollapsibleSpaceThreshold()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CollapsibleSpaceThreshold(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' get_BreakLineStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BreakLineStyle(valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Spacing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Spacing(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsEnabled()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool CanUseAxisScaleBreaks()
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]System.Collections.ArrayList GetAxisSeries(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetAxisSegmentForScaleBreaks(class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection' axisSegments)
		{
			ret
		}
		.method assembly hidebysig 
			instance int32[] GetSeriesDataStatistics(int32 segmentCount, [out] float64& minYValue, [out] float64& maxYValue, [out] float64& segmentSize, [out] float64[]& segmentMaxValue, [out] float64[]& segmentMinValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool GetLargestSequenseOfSegmentsWithNoPoints(int32[] segmentPointNumber, [out] int32& startSegment, [out] int32& numberOfSegments)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axis
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' BreakLineStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 42 72 65 61 6B 4C 69 6E 65 53 74 79 6C 65 03 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_BreakLineStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_BreakLineStyle(valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle')
		}
		.property instance int32 CollapsibleSpaceThreshold()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(25) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_CollapsibleSpaceThreshold()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_CollapsibleSpaceThreshold(int32)
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_Enabled(bool)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_LineWidth(int32)
		}
		.property instance int32 MaxNumberOfBreaks()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(2) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_MaxNumberOfBreaks()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_MaxNumberOfBreaks(int32)
		}
		.property instance float64 Spacing()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 3F 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_Spacing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_Spacing(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' StartFromZero()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 74 61 72 74 46 72 6F 6D 5A 65 72 6F 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::get_StartFromZero()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleBreakStyle'::set_StartFromZero(valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero')
		}
	}
	.class private AxisScaleSegment
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Size(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Spacing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Spacing(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ScaleMaximum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScaleMaximum(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ScaleMinimum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScaleMinimum(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Interval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Interval(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Tag()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Tag(object 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintBreakLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' nextSegment)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetBreakLinePosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' nextSegment)
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetScalePositionAndSize(float64 plotAreaSize, [out] float64& scalePosition, [out] float64& scaleSize)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetTempAxisScaleAndInterval()
		{
			ret
		}
		.method assembly hidebysig 
			instance void RestoreAxisScaleAndInterval()
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axis
		.property instance float64 Interval()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_Interval()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_Interval(float64)
		}
		.property instance float64 IntervalOffset()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_IntervalOffset()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalOffsetType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_IntervalOffsetType()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_IntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance float64 Position()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_Position()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_Position(float64)
		}
		.property instance float64 ScaleMaximum()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_ScaleMaximum()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_ScaleMaximum(float64)
		}
		.property instance float64 ScaleMinimum()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_ScaleMinimum()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_ScaleMinimum(float64)
		}
		.property instance float64 Size()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_Size()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_Size(float64)
		}
		.property instance float64 Spacing()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_Spacing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_Spacing(float64)
		}
		.property instance object Tag()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance object 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::get_Tag()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment'::set_Tag(object)
		}
	}
	.class private AxisScaleSegmentCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' segment)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInsertComplete(int32 index, object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSetComplete(int32 index, object oldValue, object newValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EnforceSegment(class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' segment)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' FindScaleSegmentForAxisValue(float64 axisValue)
		{
			ret
		}
		.field assembly bool AllowOutOfScaleValues
		.property instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' Item(int32)
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AxisScaleSegment' 'System.Web.UI.DataVisualization.Charting.AxisScaleSegmentCollection'::get_Item(int32)
		}
	}
	.class public AxisScaleView
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Size(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_SizeType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SizeType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsZoomed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ViewMinimum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ViewMaximum()
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axis
		.property instance bool IsZoomed()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_IsZoomed()
		}
		.property instance float64 Position()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_Position()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::set_Position(float64)
		}
		.property instance float64 Size()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_Size()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::set_Size(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' SizeType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_SizeType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::set_SizeType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance float64 ViewMaximum()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_ViewMaximum()
		}
		.property instance float64 ViewMinimum()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.AxisScaleView'::get_ViewMinimum()
		}
	}
	.class public sealed AxisType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' Primary = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' Secondary = int32(0x00000001)
	}
	.class private sealed BarDrawingStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' Cylinder = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' Default = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' Emboss = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' LightToDark = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' Wedge = int32(0x00000004)
	}
	.class public Border3DAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' get_BorderSkin()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTextSpacing([out] bool& annotationRelative)
		{
			ret
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Border3DAnnotation'::get_AnnotationType()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' BorderSkin()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'System.Web.UI.DataVisualization.Charting.Border3DAnnotation'::get_BorderSkin()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Border3DAnnotation'::set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin')
		}
	}
	.class public BorderSkin
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_PageColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PageColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' get_SkinStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SkinStyle(valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Gray') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_BorderWidth(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color PageColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('White') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_PageColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_PageColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' SkinStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 42 6F 72 64 65 72 53 6B 69 6E 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' 'System.Web.UI.DataVisualization.Charting.BorderSkin'::get_SkinStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.BorderSkin'::set_SkinStyle(valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle')
		}
	}
	.class public sealed BorderSkinStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' Emboss = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin1 = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin2 = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin3 = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin4 = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin5 = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameThin6 = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle1 = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle2 = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle3 = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle4 = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle5 = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle6 = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle7 = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' FrameTitle8 = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' Raised = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BorderSkinStyle' Sunken = int32(0x00000003)
	}
	.class public sealed BreakLineStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' Ragged = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' Straight = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.BreakLineStyle' Wave = int32(0x00000002)
	}
	.class private sealed COPCoordinates
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' X = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' Y = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' Z = int32(0x00000004)
	}
	.class public CalloutAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.TextAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' get_CalloutStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_CalloutAnchorCap()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutAnchorCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance float64 get_AnchorOffsetX()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AnchorOffsetX(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance float64 get_AnchorOffsetY()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AnchorOffsetY(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_AnchorAlignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTextSpacing([out] bool& annotationRelative)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance bool IsAnchorDrawn()
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.PointF GetIntersectionY(valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, float32 pointY)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.PointF GetIntersectionX(valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, float32 pointX)
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment AnchorAlignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('BottomLeft') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_AnchorAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance float64 AnchorOffsetX()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 08 40 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_AnchorOffsetX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_AnchorOffsetX(float64)
		}
		.property instance float64 AnchorOffsetY()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 08 40 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_AnchorOffsetY()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_AnchorOffsetY(float64)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' CalloutAnchorCap()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_CalloutAnchorCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_CalloutAnchorCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' CalloutStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 35 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 61 6C 6C 6F 75 74 53 74 79 6C 65 03 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_CalloutStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::set_LineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.CalloutAnnotation'::get_SelectionPointsStyle()
		}
	}
	.class public sealed CalloutStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' Borderline = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' Cloud = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' Ellipse = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' Perspective = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' Rectangle = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' RoundedRectangle = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CalloutStyle' SimpleLine = int32(0x00000000)
	}
	.class public Chart
		extends [System.Web]'System.Web.UI.WebControls.DataBoundControl'
		implements [System.Web]'System.Web.UI.IPostBackEventHandler'
	{
		.custom instance void [System]System.ComponentModel.DefaultEventAttribute::.ctor(string) = { string('Load') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CurrentImageLocation()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Render(class [System.Web]'System.Web.UI.HtmlTextWriter' writer)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y, bool ignoreTransparent)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' requestedElement)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult'[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType'[] requestedElement)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartElementOutline' GetChartElementOutline(object chartElement, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType)
		{
			ret
		}
		.method public hidebysig 
			instance void Paint(class [System.Drawing]System.Drawing.Graphics graphics, valuetype [System.Drawing]System.Drawing.Rectangle position)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveImage(string imageFileName, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' format)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveImage(class [mscorlib]'System.IO.Stream' imageStream, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' format)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveImage(class [mscorlib]'System.IO.Stream' imageStream)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveImage(string imageFileName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PrePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PrePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PostPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PostPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_CustomizeMapAreas(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_CustomizeMapAreas(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Customize(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Customize(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_CustomizeLegend(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_CustomizeLegend(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Click(class [System.Web]'System.Web.UI.WebControls.ImageMapEventHandler' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Click(class [System.Web]'System.Web.UI.WebControls.ImageMapEventHandler' 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnClick(class [System.Web]'System.Web.UI.WebControls.ImageMapEventArgs' e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void RaisePostBackEvent(string eventArgument)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPrePaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnPrePaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnPostPaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnPostPaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCustomizeMapAreas(class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnCustomizeMapAreas(class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' areaItems)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCustomize(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCustomizeLegend(class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnCustomize()
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnCustomizeLegend(class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' legendItems, string legendName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void LoadViewState(object savedState)
		{
			ret
		}
		.method family virtual hidebysig 
			instance object SaveViewState()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_EnableViewState()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_EnableViewState(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' get_ViewStateContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ViewStateContent(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ViewStateData()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ViewStateData(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SuppressExceptions(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SuppressExceptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.NamedImagesCollection' get_Images()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Web]'System.Web.UI.WebControls.FontInfo' get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' get_RenderType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RenderType(valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ImageLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageLocation(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' get_RightToLeft()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RightToLeft(valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' get_Series()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' get_Palette()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PaletteCustomColors(valuetype [System.Drawing]System.Drawing.Color[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color[] get_PaletteCustomColors()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetPaletteCustomColors()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializePaletteCustomColors()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_DataSource()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_DataSource(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BuildNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartSerializer' get_Serializer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' get_ImageType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Compression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Compression(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMapAreaAttributesEncoded()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsMapAreaAttributesEncoded(bool 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMapEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsMapEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' get_MapAreas()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' get_AntiAliasing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' get_TextAntiAliasingQuality()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextAntiAliasingQuality(valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSoftShadows()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSoftShadows(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' get_ChartAreas()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' get_Width()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Width(valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' get_Legends()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' get_Titles()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' get_Annotations()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' get_DataManipulator()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' get_Height()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Height(valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' get_BorderWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BorderWidth(valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Web]'System.Web.UI.WebControls.BorderStyle' get_BorderStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BorderStyle(valuetype [System.Web]'System.Web.UI.WebControls.BorderStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderlineColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderlineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderlineWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderlineWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderlineDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderlineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' get_BorderSkin()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AlternateText()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlternateText(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_DescriptionUrl()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void set_DescriptionUrl(string 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetHtmlImageMap(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveXml(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadTemplate(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadTemplate(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig 
			instance void ApplyPaletteColors()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsDesignMode()
		{
			ret
		}
		.method public hidebysig 
			instance void ResetAutoValues()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ValidateDataSource(object dataSource)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PerformDataBinding(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method public hidebysig 
			instance void AlignDataPointsByAxisLabel()
		{
			ret
		}
		.method public hidebysig 
			instance void AlignDataPointsByAxisLabel(string series)
		{
			ret
		}
		.method public hidebysig 
			instance void AlignDataPointsByAxisLabel(string series, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method public hidebysig 
			instance void AlignDataPointsByAxisLabel(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindTable(class [mscorlib]System.Collections.IEnumerable dataSource, string xField)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindTable(class [mscorlib]System.Collections.IEnumerable dataSource)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindCrossTable(class [mscorlib]System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindCrossTable(class [mscorlib]System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method public hidebysig 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_FormatNumber(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void remove_FormatNumber(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnFormatNumber(object caller, class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CallOnFormatNumber(object caller, class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs' e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' get_ImageStorageMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageStorageMode(valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' GetImageStorageMode()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.IPostBackEventHandler.RaisePostBackEvent'(string eventArgument)
		{
			.override [System.Web]'System.Web.UI.IPostBackEventHandler'::RaisePostBackEvent
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig 
			instance void Dispose()
		{
			ret
		}
		.field assembly bool ShowDebugMarkings
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ChartImage' chartPicture
		.field static assembly class [System]System.ComponentModel.ITypeDescriptorContext controlCurrentContext
		.field static assembly string productID
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Selection' selection
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationStatus' serializationStatus
		.field assembly bool serializing
		.field assembly class [System]System.ComponentModel.Design.ServiceContainer serviceContainer
		.field assembly string webFormDocumentURL
		.event [System.Web]'System.Web.UI.WebControls.ImageMapEventHandler' Click
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_Click(class [System.Web]'System.Web.UI.WebControls.ImageMapEventHandler')
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_Click(class [System.Web]'System.Web.UI.WebControls.ImageMapEventHandler')
		}
		.event [mscorlib]System.EventHandler Customize
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_Customize(class [mscorlib]System.EventHandler)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_Customize(class [mscorlib]System.EventHandler)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'> CustomizeLegend
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_CustomizeLegend(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_CustomizeLegend(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'> CustomizeMapAreas
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_CustomizeMapAreas(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_CustomizeMapAreas(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'> FormatNumber
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_FormatNumber(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_FormatNumber(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> PostPaint
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_PostPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_PostPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> PrePaint
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::add_PrePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.Chart'::remove_PrePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
		}
		.property instance string AlternateText()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.LocalizableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_AlternateText()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_AlternateText(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' Annotations()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Annotations()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' AntiAliasing()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.AntiAliasingStyles) string('All') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'System.Web.UI.DataVisualization.Charting.Chart'::get_AntiAliasing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('White') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' BorderSkin()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 42 6F 72 64 65 72 53 6B 69 6E 53 74 79 6C 65 00 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderSkin()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin')
		}
		.property instance valuetype [System.Web]'System.Web.UI.WebControls.BorderStyle' BorderStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Web]'System.Web.UI.WebControls.BorderStyle' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderStyle(valuetype [System.Web]'System.Web.UI.WebControls.BorderStyle')
		}
		.property instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderWidth(valuetype [System.Web]'System.Web.UI.WebControls.Unit')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderlineColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('White') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderlineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderlineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderlineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderlineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderlineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderlineWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Chart'::get_BorderlineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_BorderlineWidth(int32)
		}
		.property instance string BuildNumber()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_BuildNumber()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' ChartAreas()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_ChartAreas()
		}
		.property instance int32 Compression()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Chart'::get_Compression()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_Compression(int32)
		}
		.property instance string CurrentImageLocation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_CurrentImageLocation()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' DataManipulator()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' 'System.Web.UI.DataVisualization.Charting.Chart'::get_DataManipulator()
		}
		.property instance object DataSource()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance object 'System.Web.UI.DataVisualization.Charting.Chart'::get_DataSource()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_DataSource(object)
		}
		.property instance string DescriptionUrl()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.LocalizableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_DescriptionUrl()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_DescriptionUrl(string)
		}
		.property instance bool EnableViewState()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Chart'::get_EnableViewState()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_EnableViewState(bool)
		}
		.property instance class [System.Web]'System.Web.UI.WebControls.FontInfo' Font()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class [System.Web]'System.Web.UI.WebControls.FontInfo' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Font()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Chart'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' Height()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Web]System.Web.UI.WebControls.Unit) string('300') }
			.get instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Height()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_Height(valuetype [System.Web]'System.Web.UI.WebControls.Unit')
		}
		.property instance string ImageLocation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('ChartPic_#SEQ(300,3)') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_ImageLocation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ImageLocation(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' ImageStorageMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 39 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 49 6D 61 67 65 53 74 6F 72 61 67 65 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' 'System.Web.UI.DataVisualization.Charting.Chart'::get_ImageStorageMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ImageStorageMode(valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' ImageType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 54 79 70 65 02 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' 'System.Web.UI.DataVisualization.Charting.Chart'::get_ImageType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ImageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.NamedImagesCollection' Images()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.NamedImagesCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Images()
		}
		.property instance bool IsMapAreaAttributesEncoded()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Chart'::get_IsMapAreaAttributesEncoded()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_IsMapAreaAttributesEncoded(bool)
		}
		.property instance bool IsMapEnabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Chart'::get_IsMapEnabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_IsMapEnabled(bool)
		}
		.property instance bool IsSoftShadows()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Chart'::get_IsSoftShadows()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_IsSoftShadows(bool)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' Legends()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Legends()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' MapAreas()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_MapAreas()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Palette()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3A 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 43 6F 6C 6F 72 50 61 6C 65 74 74 65 0C 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Palette()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color[] PaletteCustomColors()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Color[] 'System.Web.UI.DataVisualization.Charting.Chart'::get_PaletteCustomColors()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_PaletteCustomColors(valuetype [System.Drawing]System.Drawing.Color[])
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' RenderType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 33 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 52 65 6E 64 65 72 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' 'System.Web.UI.DataVisualization.Charting.Chart'::get_RenderType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_RenderType(valuetype 'System.Web.UI.DataVisualization.Charting.RenderType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' RightToLeft()
		{
			.custom instance void [System]System.ComponentModel.CategoryAttribute::.ctor(string) = { string('Appearance') }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 34 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 52 69 67 68 74 54 6F 4C 65 66 74 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' 'System.Web.UI.DataVisualization.Charting.Chart'::get_RightToLeft()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_RightToLeft(valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartSerializer' Serializer()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartSerializer' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Serializer()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' Series()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Series()
		}
		.property instance bool SuppressExceptions()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Chart'::get_SuppressExceptions()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_SuppressExceptions(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' TextAntiAliasingQuality()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality) string('High') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' 'System.Web.UI.DataVisualization.Charting.Chart'::get_TextAntiAliasingQuality()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_TextAntiAliasingQuality(valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' Titles()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Titles()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' ViewStateContent()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.SerializationContents) string('Default') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' 'System.Web.UI.DataVisualization.Charting.Chart'::get_ViewStateContent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ViewStateContent(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents')
		}
		.property instance string ViewStateData()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = { string('ViewStateData has been deprecated. Please investigate Control.ViewState instead.') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Chart'::get_ViewStateData()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_ViewStateData(string)
		}
		.property instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' Width()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Web]System.Web.UI.WebControls.Unit) string('300') }
			.get instance valuetype [System.Web]'System.Web.UI.WebControls.Unit' 'System.Web.UI.DataVisualization.Charting.Chart'::get_Width()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Chart'::set_Width(valuetype [System.Web]'System.Web.UI.WebControls.Unit')
		}
	}
	.class public ChartArea
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
	{
		.class nested assembly ChartTypeAndSeriesInfo
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(string chartType)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series)
			{
				ret
			}
			.field assembly string ChartType
			.field assembly class 'System.Web.UI.DataVisualization.Charting.Series' Series
		}
		.class nested assembly PointsDrawingOrderComparer
			extends [mscorlib]System.Object
			implements [mscorlib]System.Collections.IComparer
		{
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, bool selection, valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' coord)
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance int32 Compare(object o1, object o2)
			{
				ret
			}
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AlignWithChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlignWithChartArea(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' get_AlignmentOrientation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlignmentOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' get_AlignmentStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlignmentStyle(valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis'[] get_Axes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Axes(class 'System.Web.UI.DataVisualization.Charting.Axis'[] 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeAxes()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisY()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AxisY(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisX()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AxisX(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisX2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AxisX2(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_AxisY2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AxisY2(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' get_InnerPlotPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InnerPlotPosition(class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeInnerPlotPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSameFontSizeForAllAxes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSameFontSizeForAllAxes(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Restore3DAnglesAndReverseMode()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Set3DAnglesAndReverseMode()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetTempValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetTempValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMinMaxFromData()
		{
			ret
		}
		.method public hidebysig 
			instance void RecalculateAxesScale()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ReCalcInternal()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAutoValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetBackgroundPosition(bool withScrollBars)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Resize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintCursors(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool cursorOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ICircularChartType' GetCircularChartType()
		{
			ret
		}
		.method assembly hidebysig 
			instance void FitCircularLabels(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, class 'System.Web.UI.DataVisualization.Charting.ElementPosition' chartAreaPosition, valuetype [System.Drawing]System.Drawing.RectangleF& plotArea, float32 xTitleSize, float32 yTitleSize)
		{
			ret
		}
		.method assembly hidebysig 
			instance float32 GetCircularLabelsSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, valuetype [System.Drawing]System.Drawing.RectangleF areaRectAbs, valuetype [System.Drawing]System.Drawing.RectangleF plotAreaRectAbs, valuetype [System.Drawing]System.Drawing.SizeF titleSize)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_CircularUsePolygons()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' GetCircularAxisLabelsStyle()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_CircularSectorsNumber()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.ArrayList GetCircularAxisList()
		{
			ret
		}
		.method assembly hidebysig 
			instance float32 CircularPositionToAngle(float64 position)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle' get_Area3DStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Area3DStyle(class 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_ReverseSeriesOrder()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_StackGroupNames()
		{
			ret
		}
		.method public hidebysig 
			instance void TransformPoints(class 'System.Web.UI.DataVisualization.Charting.Point3D'[] points)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawArea3DScene(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.RectangleF position)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsBottomSceneWallVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsMainSceneWallOnFront()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsSideSceneWallOnLeft()
		{
			ret
		}
		.method public hidebysig 
			instance float32 GetSeriesZPosition(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance float32 GetSeriesDepth(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetSeriesZPositionAndDepth(class 'System.Web.UI.DataVisualization.Charting.Series' series, [out] float32& depth, [out] float32& positionZ)
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 GetNumberOfClusters()
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 GetSeriesClusterIndex(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Estimate3DInterval(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 GetRealYAngle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldDrawOnSurface(valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, bool backLayer, bool onEdge)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool DrawPointsInReverseOrder()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool DrawPointsToCenter(valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates'& coord)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool DrawSeriesToCenter()
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintChartSeries3D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> GetClusterSeriesNames(string seriesName)
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 GetSeriesStackGroupIndex(class 'System.Web.UI.DataVisualization.Charting.Series' series, string& stackGroupName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.ArrayList GetDataPointDrawingOrder(class [mscorlib]'System.Collections.Generic.List`1'<string> seriesNamesList, class 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType' chartType, bool selection, valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' coord, class [mscorlib]System.Collections.IComparer comparer, int32 mainYValueIndex, bool sideBySide)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Point3D' GetCenterOfProjection(valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' coord)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsSubAxesSupported()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> get_Series()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_ChartTypes()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' GetAxis(valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisName, valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' axisType, string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetDefaultAxesValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool SeriesIntegerType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisName, string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool SeriesDateTimeType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axisName, string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetData()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetData(bool initializeAxes, bool checkIndexedAligned)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> GetSeriesFromChartType(string chartType)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class 'System.Web.UI.DataVisualization.Charting.Series'> GetSeries()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> GetXAxesSeries(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'type', string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> GetYAxesSeries(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'type', string subAxisName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Series' GetFirstSeries()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetPointsInterval(bool isLogarithmic, float64 logarithmBase)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetPointsInterval(class [mscorlib]'System.Collections.Generic.List`1'<string> seriesList, bool isLogarithmic, float64 logarithmBase, bool checkSameInterval, [out] bool& sameInterval)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetPointsInterval(class [mscorlib]'System.Collections.Generic.List`1'<string> seriesList, bool isLogarithmic, float64 logarithmicBase, bool checkSameInterval, [out] bool& sameInterval, [out] class 'System.Web.UI.DataVisualization.Charting.Series'& series)
		{
			ret
		}
		.field assembly int32 IterationCounter
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ElementPosition' PlotAreaPosition
		.field assembly bool alignmentInProcess
		.field assembly float32 areaSceneDepth
		.field assembly valuetype [System.Drawing]System.Drawing.SizeF areaSceneWallWidth
		.field assembly float32 axesAutoFontSize
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axisX
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axisX2
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axisY
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Axis' axisY2
		.field assembly bool chartAreaIsCurcular
		.field assembly class [mscorlib]System.Collections.ArrayList chartTypes
		.field assembly valuetype [System.Drawing]System.Drawing.PointF circularCenter
		.field assembly bool diffIntervalAlignmentChecked
		.field assembly bool hundredPercent
		.field assembly bool hundredPercentNegative
		.field assembly float64 intervalData
		.field assembly float64 intervalLogData
		.field assembly bool intervalSameSize
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF lastAreaPosition
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix3D
		.field assembly bool oldReverseX
		.field assembly bool oldReverseY
		.field assembly int32 oldYAngle
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF originalAreaPosition
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF originalInnerPlotPosition
		.field assembly bool requireAxes
		.field assembly bool secondYScale
		.field assembly class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]'System.Collections.Generic.List`1'<string>> seriesClusters
		.field assembly class 'System.Web.UI.DataVisualization.Charting.SmartLabel' smartLabels
		.field assembly bool stacked
		.field assembly bool switchValueAxes
		.property instance string AlignWithChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AlignWithChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AlignWithChartArea(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' AlignmentOrientation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 42 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 72 65 61 41 6C 69 67 6E 6D 65 6E 74 4F 72 69 65 6E 74 61 74 69 6F 6E 73 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AlignmentOrientation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AlignmentOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' AlignmentStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3C 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 72 65 61 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 73 07 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AlignmentStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AlignmentStyle(valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle' Area3DStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Area3DStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_Area3DStyle(class 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis'[] Axes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis'[] 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Axes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_Axes(class 'System.Web.UI.DataVisualization.Charting.Axis'[])
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisX()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AxisX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AxisX(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisX2()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AxisX2()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AxisX2(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisY()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AxisY()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AxisY(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' AxisY2()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_AxisY2()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_AxisY2(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_BorderWidth(int32)
		}
		.property instance class [mscorlib]System.Collections.ArrayList ChartTypes()
		{
			.get instance class [mscorlib]System.Collections.ArrayList 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_ChartTypes()
		}
		.property instance int32 CircularSectorsNumber()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_CircularSectorsNumber()
		}
		.property instance bool CircularUsePolygons()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_CircularUsePolygons()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' InnerPlotPosition()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_InnerPlotPosition()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_InnerPlotPosition(class 'System.Web.UI.DataVisualization.Charting.ElementPosition')
		}
		.property instance bool IsSameFontSizeForAllAxes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_IsSameFontSizeForAllAxes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_IsSameFontSizeForAllAxes(bool)
		}
		.property instance bool IsSubAxesSupported()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_IsSubAxesSupported()
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_Name(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' Position()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Position()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition')
		}
		.property instance bool ReverseSeriesOrder()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_ReverseSeriesOrder()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<string> Series()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<string> 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Series()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128,0,0,0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_ShadowOffset(int32)
		}
		.property instance class [mscorlib]System.Collections.ArrayList StackGroupNames()
		{
			.get instance class [mscorlib]System.Collections.ArrayList 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_StackGroupNames()
		}
		.property instance bool Visible()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea'::get_Visible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea'::set_Visible(bool)
		}
	}
	.class public ChartArea3DStyle
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartArea' chartArea)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(class 'System.Web.UI.DataVisualization.Charting.ChartArea' chartArea)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enable3D()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enable3D(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRightAngleAxes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsRightAngleAxes(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsClustered()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsClustered(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' get_LightStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LightStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Perspective()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Perspective(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Inclination()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Inclination(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Rotation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Rotation(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_WallWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WallWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PointDepth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointDepth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PointGapDepth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointGapDepth(int32 'value')
		{
			ret
		}
		.property instance bool Enable3D()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_Enable3D()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_Enable3D(bool)
		}
		.property instance int32 Inclination()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(30) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_Inclination()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_Inclination(int32)
		}
		.property instance bool IsClustered()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_IsClustered()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_IsClustered(bool)
		}
		.property instance bool IsRightAngleAxes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_IsRightAngleAxes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_IsRightAngleAxes(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' LightStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LightStyle) string('Simplistic') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_LightStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_LightStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle')
		}
		.property instance int32 Perspective()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_Perspective()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_Perspective(int32)
		}
		.property instance int32 PointDepth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(100) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_PointDepth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_PointDepth(int32)
		}
		.property instance int32 PointGapDepth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(100) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_PointGapDepth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_PointGapDepth(int32)
		}
		.property instance int32 Rotation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(30) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_Rotation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_Rotation(int32)
		}
		.property instance int32 WallWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(7) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::get_WallWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartArea3DStyle'::set_WallWidth(int32)
		}
	}
	.class public ChartAreaCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.ChartArea'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartPicture' chartPicture)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_DefaultNameReference()
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' Add(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChartAreaNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
		.property instance string DefaultNameReference()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection'::get_DefaultNameReference()
		}
	}
	.class public sealed ChartColorPalette
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Berry = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Bright = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' BrightPastel = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Chocolate = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' EarthTones = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Excel = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Fire = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Grayscale = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Light = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Pastel = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' SeaGreen = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' SemiTransparent = int32(0x00000007)
	}
	.class public sealed ChartDashStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' Dash = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' DashDot = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' DashDotDot = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' Dot = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' NotSet = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' Solid = int32(0x00000005)
	}
	.class private ChartDataSourceConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract ChartElement
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.IChartElement', [mscorlib]System.IDisposable
	{
		.method public final virtual hidebysig newslot specialname 
			instance object get_Tag()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Tag(object 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' get_Parent()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' get_Chart()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void Invalidate()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.IChartElement.get_Parent'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Parent
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartElement.set_Parent'(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::set_Parent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartElement.Invalidate'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::Invalidate
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.IChartElement.get_Common'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Common
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance string ToStringInternal()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance bool EqualsInternal(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Chart' Chart()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Chart' 'System.Web.UI.DataVisualization.Charting.ChartElement'::get_Chart()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartElement'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElement'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' Parent()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.ChartElement'::get_Parent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElement'::set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.IChartElement.Common'()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartElement'::'System.Web.UI.DataVisualization.Charting.IChartElement.get_Common'()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.IChartElement.Parent'()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.ChartElement'::'System.Web.UI.DataVisualization.Charting.IChartElement.get_Parent'()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElement'::'System.Web.UI.DataVisualization.Charting.IChartElement.set_Parent'(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
		.property instance object Tag()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance object 'System.Web.UI.DataVisualization.Charting.ChartElement'::get_Tag()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElement'::set_Tag(object)
		}
	}
	.class public abstract 'ChartElementCollection`1'<('System.Web.UI.DataVisualization.Charting.ChartElement') 'T'>
		extends class [mscorlib]'System.Collections.ObjectModel.Collection`1'<!0>
		implements 'System.Web.UI.DataVisualization.Charting.IChartElement', [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' get_Parent()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' get_Chart()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<!0> get_ItemList()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsSuspended()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invalidate()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SuspendUpdates()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ResumeUpdates()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearItems()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void Deinitialize(!0 item)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void Initialize(!0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveItem(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertItem(int32 index, !0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetItem(int32 index, !0 item)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.IChartElement.get_Parent'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Parent
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartElement.set_Parent'(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::set_Parent
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartElement.Invalidate'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::Invalidate
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.IChartElement.get_Common'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Common
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly int32 _suspendUpdates
		.property instance class 'System.Web.UI.DataVisualization.Charting.Chart' Chart()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Chart' 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::get_Chart()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::get_Common()
		}
		.property instance bool IsSuspended()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::get_IsSuspended()
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<!0> ItemList()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<!0> 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::get_ItemList()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' Parent()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::get_Parent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.IChartElement.Common'()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::'System.Web.UI.DataVisualization.Charting.IChartElement.get_Common'()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.IChartElement.Parent'()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::'System.Web.UI.DataVisualization.Charting.IChartElement.get_Parent'()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'::'System.Web.UI.DataVisualization.Charting.IChartElement.set_Parent'(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
	}
	.class public ChartElementOutline
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Drawing]System.Drawing.PointF> get_Markers()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Markers(class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Drawing]System.Drawing.PointF> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath get_OutlinePath()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_OutlinePath(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Drawing]System.Drawing.PointF> Markers()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Drawing]System.Drawing.PointF> 'System.Web.UI.DataVisualization.Charting.ChartElementOutline'::get_Markers()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElementOutline'::set_Markers(class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Drawing]System.Drawing.PointF>)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath OutlinePath()
		{
			.get instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'System.Web.UI.DataVisualization.Charting.ChartElementOutline'::get_OutlinePath()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartElementOutline'::set_OutlinePath(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath)
		}
	}
	.class public sealed ChartElementType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Annotation = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Axis = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' AxisLabelImage = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' AxisLabels = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' AxisTitle = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' DataPoint = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' DataPointLabel = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Gridlines = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' LegendArea = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' LegendHeader = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' LegendItem = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' LegendTitle = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Nothing = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' PlottingArea = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' StripLines = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' TickMarks = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Title = int32(0x00000001)
	}
	.class public ChartGraphics
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method assembly hidebysig 
			instance void DrawLineRel(valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, valuetype [System.Drawing]System.Drawing.PointF firstPointF, valuetype [System.Drawing]System.Drawing.PointF secondPointF)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLineAbs(valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLineRel(valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLineAbs(valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush GetHatchBrush(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' hatchStyle, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color foreColor)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush GetTextureBrush(string name, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' mode, valuetype [System.Drawing]System.Drawing.Color backColor)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush GetGradientBrush(valuetype [System.Drawing]System.Drawing.RectangleF rectangle, valuetype [System.Drawing]System.Drawing.Color firstColor, valuetype [System.Drawing]System.Drawing.Color secondColor, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush GetPieGradientBrush(valuetype [System.Drawing]System.Drawing.RectangleF rectangle, valuetype [System.Drawing]System.Drawing.Color firstColor, valuetype [System.Drawing]System.Drawing.Color secondColor)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Drawing2D.DashStyle GetPenStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF[] CreateStarPolygon(valuetype [System.Drawing]System.Drawing.RectangleF rect, int32 numberOfCorners)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawMarkerRel(valuetype [System.Drawing]System.Drawing.PointF point, valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle, int32 markerSize, valuetype [System.Drawing]System.Drawing.Color markerColor, valuetype [System.Drawing]System.Drawing.Color markerBorderColor, int32 markerBorderSize, string markerImage, valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor, int32 shadowSize, valuetype [System.Drawing]System.Drawing.Color shadowColor, valuetype [System.Drawing]System.Drawing.RectangleF imageScaleRect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawMarkerAbs(valuetype [System.Drawing]System.Drawing.PointF point, valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle, int32 markerSize, valuetype [System.Drawing]System.Drawing.Color markerColor, valuetype [System.Drawing]System.Drawing.Color markerBorderColor, int32 markerBorderSize, string markerImage, valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor, int32 shadowSize, valuetype [System.Drawing]System.Drawing.Color shadowColor, valuetype [System.Drawing]System.Drawing.RectangleF imageScaleRect, bool forceAntiAlias)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' textOrientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureStringRel(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' textOrientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawString(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect, class [System.Drawing]System.Drawing.StringFormat format, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' textOrientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringRel(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF position, class [System.Drawing]System.Drawing.StringFormat format, int32 angle, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' textOrientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringRel(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF position, class [System.Drawing]System.Drawing.StringFormat format, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' textOrientation)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetStackedText(string text)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPointLabelStringRel(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF position, class [System.Drawing]System.Drawing.StringFormat format, int32 angle, valuetype [System.Drawing]System.Drawing.RectangleF backPosition, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPointLabelStringRel(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF position, class [System.Drawing]System.Drawing.StringFormat format, int32 angle, valuetype [System.Drawing]System.Drawing.RectangleF backPosition, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringRel(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF position, class [System.Drawing]System.Drawing.StringFormat format, int32 angle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringAbs(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF absPosition, class [System.Drawing]System.Drawing.StringFormat format, int32 angle)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath GetTranformedTextRectPath(valuetype [System.Drawing]System.Drawing.PointF center, valuetype [System.Drawing]System.Drawing.SizeF size, int32 angle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLabelStringRel(class 'System.Web.UI.DataVisualization.Charting.Axis' axis, int32 labelRowIndex, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' labelMark, valuetype [System.Drawing]System.Drawing.Color markColor, string text, string image, valuetype [System.Drawing]System.Drawing.Color imageTransparentColor, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF position, class [System.Drawing]System.Drawing.StringFormat format, int32 angle, valuetype [System.Drawing]System.Drawing.RectangleF boundaryRect, class 'System.Web.UI.DataVisualization.Charting.CustomLabel' label, bool truncatedLeft, bool truncatedRight)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureStringRel(string text, class [System.Drawing]System.Drawing.Font font)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureStringRel(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Size MeasureStringAbs(string text, class [System.Drawing]System.Drawing.Font font)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Size MeasureStringAbs(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringRel(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF layoutRectangle, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawStringRel(string text, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF layoutRectangle, class [System.Drawing]System.Drawing.StringFormat format, int32 angle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawRectangleBarStyle(valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' barDrawingStyle, bool isVertical, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleRel(valuetype [System.Drawing]System.Drawing.RectangleF rectF, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment, valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' barDrawingStyle, bool isVertical)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleRel(valuetype [System.Drawing]System.Drawing.RectangleF rectF, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleRel(valuetype [System.Drawing]System.Drawing.RectangleF rectF, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment, bool circular, int32 circularSectorsCount, bool circle3D)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleRel(valuetype [System.Drawing]System.Drawing.RectangleF rectF, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment, bool circular, int32 circularSectorsCount, bool circle3D, valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' barDrawingStyle, bool isVertical)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleShadowAbs(valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color shadowColor, float32 shadowOffset, valuetype [System.Drawing]System.Drawing.Color backColor)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleShadowAbs(valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color shadowColor, float32 shadowOffset, valuetype [System.Drawing]System.Drawing.Color backColor, bool circular, int32 circularSectorsCount)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath GetPolygonCirclePath(valuetype [System.Drawing]System.Drawing.RectangleF position, int32 polygonSectorsNumber)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawCircleAbs(class [System.Drawing]System.Drawing.Pen pen, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF position, int32 polygonSectorsNumber, bool circle3D)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush GetSector3DBrush(class [System.Drawing]System.Drawing.Brush brush, float32 curentSector, float32 sectorSize)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Color GetBrightGradientColor(valuetype [System.Drawing]System.Drawing.Color beginColor, float64 position)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangleAbs(valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPathAbs(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment, int32 shadowOffset, valuetype [System.Drawing]System.Drawing.Color shadowColor)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPathAbs(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype [System.Drawing]System.Drawing.Drawing2D.PenAlignment penAlignment)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Brush CreateBrush(valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetRelativeRectangle(valuetype [System.Drawing]System.Drawing.RectangleF rectangle)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF GetRelativePoint(valuetype [System.Drawing]System.Drawing.PointF point)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetRelativeSize(valuetype [System.Drawing]System.Drawing.SizeF size)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF GetAbsolutePoint(valuetype [System.Drawing]System.Drawing.PointF point)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetAbsoluteRectangle(valuetype [System.Drawing]System.Drawing.RectangleF rectangle)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetAbsoluteSize(valuetype [System.Drawing]System.Drawing.SizeF size)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath CreateRoundedRectPath(valuetype [System.Drawing]System.Drawing.RectangleF rect, float32[] cornerRadius)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawRoundedRectShadowAbs(valuetype [System.Drawing]System.Drawing.RectangleF rect, float32[] cornerRadius, float32 radius, valuetype [System.Drawing]System.Drawing.Color centerColor, valuetype [System.Drawing]System.Drawing.Color surroundColor, float32 shadowScale)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Draw3DBorderRel(class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Draw3DBorderAbs(class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF absRect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype 'System.Web.UI.DataVisualization.Charting.PieDrawingStyle' GetPieDrawingStyle(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPieRel(valuetype [System.Drawing]System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, bool shadow, bool doughnut, float32 doughnutRadius, valuetype 'System.Web.UI.DataVisualization.Charting.PieDrawingStyle' pieDrawingStyle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawArrowRel(valuetype [System.Drawing]System.Drawing.PointF position, valuetype 'System.Web.UI.DataVisualization.Charting.ArrowOrientation' orientation, valuetype 'System.Web.UI.DataVisualization.Charting.AxisArrowStyle' 'type', valuetype [System.Drawing]System.Drawing.Color color, int32 lineWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' lineDashStyle, float64 shift, float64 size)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' GetBarDrawingStyle(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF Round(valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public hidebysig 
			instance float64 GetPositionFromAxis(string chartAreaName, valuetype 'System.Web.UI.DataVisualization.Charting.AxisName' axis, float64 axisValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetPictureSize(int32 width, int32 height)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' get_AntiAliasing()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Pen get_Pen()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetClip(valuetype [System.Drawing]System.Drawing.RectangleF region)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.Color GetGradientColor(valuetype [System.Drawing]System.Drawing.Color beginColor, valuetype [System.Drawing]System.Drawing.Color endColor, float64 relativePosition)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsRightToLeft()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Draw3DGridLine(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, valuetype [System.Drawing]System.Drawing.PointF point1, valuetype [System.Drawing]System.Drawing.PointF point2, bool horizontal, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, object obj)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Draw3DLine(class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype [System.Drawing]System.Drawing.Color color, int32 width, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' style, class 'System.Web.UI.DataVisualization.Charting.Point3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.Point3D' secondPoint, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, object obj, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPieSides(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 inclination, float32 startAngle, float32 sweepAngle, valuetype [System.Drawing]System.Drawing.PointF[] points, class [System.Drawing]System.Drawing.SolidBrush brush, class [System.Drawing]System.Drawing.Pen pen, bool doughnut)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPieCurve(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF topFirstRectPoint, valuetype [System.Drawing]System.Drawing.PointF topSecondRectPoint, valuetype [System.Drawing]System.Drawing.PointF bottomFirstRectPoint, valuetype [System.Drawing]System.Drawing.PointF bottomSecondRectPoint, valuetype [System.Drawing]System.Drawing.PointF topFirstPoint, valuetype [System.Drawing]System.Drawing.PointF topSecondPoint, valuetype [System.Drawing]System.Drawing.PointF bottomFirstPoint, valuetype [System.Drawing]System.Drawing.PointF bottomSecondPoint, float32 startAngle, float32 sweepAngle, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPieSlice(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class [System.Drawing]System.Drawing.SolidBrush brush, class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF firstRectPoint, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondRectPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, valuetype [System.Drawing]System.Drawing.PointF center, float32 startAngle, float32 sweepAngle, bool fill, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillDoughnutSlice(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class [System.Drawing]System.Drawing.SolidBrush brush, class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF firstRectPoint, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondRectPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, valuetype [System.Drawing]System.Drawing.PointF threePoint, valuetype [System.Drawing]System.Drawing.PointF fourPoint, float32 startAngle, float32 sweepAngle, bool fill, float32 doughnutRadius, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DPolygon(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, float32 positionZ, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' thirdPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' fourthPoint, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' lineSegmentType, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' thinBorders)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath GetSplineFlattenPath(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 positionZ, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, class [mscorlib]System.Collections.ArrayList points, float32 tension, bool flatten, bool translateCoordinates, int32 yValueIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSplineSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, float32 positionZ, float32 depth, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, bool forceThinBorder, bool forceThickBorder, bool reversedSeriesOrder, bool multiSeries, int32 yValueIndex, bool clipInsideArea)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, float32 positionZ, float32 depth, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' lineSegmentType, bool forceThinBorder, bool forceThickBorder, bool reversedSeriesOrder, bool multiSeries, int32 yValueIndex, bool clipInsideArea)
		{
			ret
		}
		.method assembly static hidebysig 
			int32 ShouldDrawLineChartSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, bool reversedSeriesOrder, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' boundaryRectVisibleSurfaces, valuetype [System.Drawing]System.Drawing.Color color, class [mscorlib]System.Collections.ArrayList points, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool multiSeries, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType'& lineSegmentType)
		{
			ret
		}
		.method assembly static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' FindPointByIndex(class [mscorlib]System.Collections.ArrayList points, int32 index, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' neighborDataPoint, int32& neighborPointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Fill3DRectangle(valuetype [System.Drawing]System.Drawing.RectangleF position, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Fill3DRectangle(valuetype [System.Drawing]System.Drawing.RectangleF position, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, valuetype [System.Drawing]System.Drawing.Color backColor, float32 topRightDarkening, float32 bottomLeftDarkening, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, valuetype 'System.Web.UI.DataVisualization.Charting.BarDrawingStyle' barDrawingStyle, bool veticalOrientation, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath DrawMarker3D(class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, float32 positionZ, valuetype [System.Drawing]System.Drawing.PointF point, valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle, int32 markerSize, valuetype [System.Drawing]System.Drawing.Color markerColor, valuetype [System.Drawing]System.Drawing.Color markerBorderColor, int32 markerBorderSize, string markerImage, valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor, int32 shadowSize, valuetype [System.Drawing]System.Drawing.Color shadowColor, valuetype [System.Drawing]System.Drawing.RectangleF imageScaleRect, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' GetVisibleSurfaces(valuetype [System.Drawing]System.Drawing.RectangleF position, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' GetVisibleSurfacesWithPerspective(valuetype [System.Drawing]System.Drawing.RectangleF position, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' GetVisibleSurfacesWithPerspective(class 'System.Web.UI.DataVisualization.Charting.Point3D'[] cubePoints)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsSurfaceVisible(class 'System.Web.UI.DataVisualization.Charting.Point3D' first, class 'System.Web.UI.DataVisualization.Charting.Point3D' second, class 'System.Web.UI.DataVisualization.Charting.Point3D' tree)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.PointF GetLinesIntersection(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Fill3DRectangleAsCylinder(valuetype [System.Drawing]System.Drawing.RectangleF position, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, valuetype [System.Drawing]System.Drawing.Color backColor, float32 topRightDarkening, float32 bottomLeftDarkening, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle, bool veticalOrientation, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddEllipseSegment(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath resultPath, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath ellipseFlattenPath, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath oppositeEllipseFlattenPath, bool veticalOrientation, float32 cylinderAngle, [out] valuetype [System.Drawing]System.Drawing.PointF& leftSideLinePoint, [out] valuetype [System.Drawing]System.Drawing.PointF& rightSideLinePoint)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF pt1, valuetype [System.Drawing]System.Drawing.PointF pt2)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttr)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawCurve(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPolygon(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF layoutRectangle, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF point, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttrs)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPath(class [System.Drawing]System.Drawing.Pen pen, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawPie(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLines(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillEllipse(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPath(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRegion(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Region region)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPolygon(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method assembly hidebysig 
			instance void FillPie(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void StartHotRegion(string url, string title)
		{
			ret
		}
		.method assembly hidebysig 
			instance void StartHotRegion(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method assembly hidebysig 
			instance void StartHotRegion(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, bool labelRegion)
		{
			ret
		}
		.method assembly hidebysig 
			instance void EndHotRegion()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsState Save()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Restore(class [System.Drawing]System.Drawing.Drawing2D.GraphicsState gstate)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetClip()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetClipAbs(valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method assembly hidebysig 
			instance void TranslateTransform(float32 dx, float32 dy)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine' get_RenderingObject()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderingType' get_ActiveRenderingType()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint get_TextRenderingHint()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.Matrix get_Transform()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode get_SmoothingMode()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Region get_Clip()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Clip(class [System.Drawing]System.Drawing.Region 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsClipEmpty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Graphics get_Graphics()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Graphics(class [System.Drawing]System.Drawing.Graphics 'value')
		{
			ret
		}
		.field assembly bool IsMetafile
		.field assembly bool IsTextClipped
		.field assembly class [System.Drawing]System.Drawing.Pen frontLinePen
		.field assembly valuetype [System.Drawing]System.Drawing.PointF frontLinePoint1
		.field assembly valuetype [System.Drawing]System.Drawing.PointF frontLinePoint2
		.field assembly bool softShadows
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderingType' ActiveRenderingType()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.RenderingType' 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_ActiveRenderingType()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' AntiAliasing()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_AntiAliasing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles')
		}
		.property instance class [System.Drawing]System.Drawing.Region Clip()
		{
			.get instance class [System.Drawing]System.Drawing.Region 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_Clip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_Clip(class [System.Drawing]System.Drawing.Region)
		}
		.property instance class [System.Drawing]System.Drawing.Graphics Graphics()
		{
			.get instance class [System.Drawing]System.Drawing.Graphics 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_Graphics()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_Graphics(class [System.Drawing]System.Drawing.Graphics)
		}
		.property instance bool IsClipEmpty()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_IsClipEmpty()
		}
		.property instance bool IsRightToLeft()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_IsRightToLeft()
		}
		.property instance class [System.Drawing]System.Drawing.Pen Pen()
		{
			.get instance class [System.Drawing]System.Drawing.Pen 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_Pen()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine' RenderingObject()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine' 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_RenderingObject()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode SmoothingMode()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_SmoothingMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint TextRenderingHint()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_TextRenderingHint()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.Matrix Transform()
		{
			.get instance class [System.Drawing]System.Drawing.Drawing2D.Matrix 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::get_Transform()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartGraphics'::set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix)
		}
	}
	.class public sealed ChartHatchStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackwardDiagonal = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Cross = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DarkDownwardDiagonal = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DarkHorizontal = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DarkUpwardDiagonal = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DarkVertical = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DashedDownwardDiagonal = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DashedHorizontal = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DashedUpwardDiagonal = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DashedVertical = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DiagonalBrick = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DiagonalCross = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Divot = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DottedDiamond = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' DottedGrid = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' ForwardDiagonal = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Horizontal = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' HorizontalBrick = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LargeCheckerBoard = int32(0x00000013)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LargeConfetti = int32(0x00000014)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LargeGrid = int32(0x00000015)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LightDownwardDiagonal = int32(0x00000016)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LightHorizontal = int32(0x00000017)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LightUpwardDiagonal = int32(0x00000018)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' LightVertical = int32(0x00000019)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' NarrowHorizontal = int32(0x0000001A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' NarrowVertical = int32(0x0000001B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' OutlinedDiamond = int32(0x0000001C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent05 = int32(0x0000001D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent10 = int32(0x0000001E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent20 = int32(0x0000001F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent25 = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent30 = int32(0x00000021)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent40 = int32(0x00000022)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent50 = int32(0x00000023)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent60 = int32(0x00000024)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent70 = int32(0x00000025)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent75 = int32(0x00000026)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent80 = int32(0x00000027)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Percent90 = int32(0x00000028)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Plaid = int32(0x00000029)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Shingle = int32(0x0000002A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' SmallCheckerBoard = int32(0x0000002B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' SmallConfetti = int32(0x0000002C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' SmallGrid = int32(0x0000002D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' SolidDiamond = int32(0x0000002E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Sphere = int32(0x0000002F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Trellis = int32(0x00000030)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Vertical = int32(0x00000031)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Wave = int32(0x00000032)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' Weave = int32(0x00000033)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' WideDownwardDiagonal = int32(0x00000034)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' WideUpwardDiagonal = int32(0x00000035)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' ZigZag = int32(0x00000036)
	}
	.class private ChartHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			float64 AlignIntervalStart(float64 start, float64 intervalSize, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			float64 AlignIntervalStart(float64 start, float64 intervalSize, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type', class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 AlignIntervalStart(float64 start, float64 intervalSize, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type', class 'System.Web.UI.DataVisualization.Charting.Series' series, bool majorInterval)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 GetIntervalSize(float64 current, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type')
		{
			ret
		}
		.method assembly static hidebysig 
			float64 GetIntervalSize(float64 current, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type', class 'System.Web.UI.DataVisualization.Charting.Series' series, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType, bool forceIntIndex)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 GetIntervalSize(float64 current, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'type', class 'System.Web.UI.DataVisualization.Charting.Series' series, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType, bool forceIntIndex, bool forceAbsInterval)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IndexedSeries(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IndexedSeries(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			bool SeriesXValuesZeros(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.field static assembly literal int32 MaxNumOfGridlines = int32(0x00002710)
	}
	.class public ChartHttpHandler
		extends [System.Web]'System.Web.UI.Page'
		implements [System.Web]System.Web.SessionState.IRequiresSessionState, [System.Web]System.Web.IHttpHandler
	{
		.method assembly static hidebysig specialname 
			string get_CurrentGuidKey()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			void set_CurrentGuidKey(string 'value')
		{
			ret
		}
		.method assembly static hidebysig 
			void EnsureInstalled()
		{
			ret
		}
		.method assembly static hidebysig 
			string GetChartImageUrl(class [mscorlib]'System.IO.MemoryStream' 'stream', string imageExt)
		{
			ret
		}
		.method public static hidebysig specialname 
			class 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings' get_Settings()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Web.IHttpHandler.get_IsReusable()
		{
			.override [System.Web]System.Web.IHttpHandler::get_IsReusable
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Web.IHttpHandler.ProcessRequest(class [System.Web]System.Web.HttpContext context)
		{
			.override [System.Web]System.Web.IHttpHandler::ProcessRequest
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static assembly literal string ChartHttpHandlerAppSection = "ChartImageHandler"
		.field static assembly literal string ChartHttpHandlerName = "ChartImg.axd"
		.field static assembly string ContextGuidKey
		.field static assembly literal string DefaultConfigSettings = "storage=file;timeout=20;dir=c:\\TempImageFiles\\;"
		.field static assembly literal string WebDevServerUseConfigSettings = "WebDevServerUseConfigSettings"
		.property string CurrentGuidKey()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandler'::get_CurrentGuidKey()
			.set void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandler'::set_CurrentGuidKey(string)
		}
		.property class 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings' Settings()
		{
			.get class 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings' 'System.Web.UI.DataVisualization.Charting.ChartHttpHandler'::get_Settings()
		}
		.property instance bool System.Web.IHttpHandler.IsReusable()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartHttpHandler'::System.Web.IHttpHandler.get_IsReusable()
		}
	}
	.class public ChartHttpHandlerSettings
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' get_StorageType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StorageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_Timeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Timeout(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Url()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Directory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Directory(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FolderName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FolderName(string 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void ValidateUri(string key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CustomHandlerName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomHandlerName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_HandlerType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_PrivateImages()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(string name)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(string parameters)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler' GetHandler()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Inspect()
		{
			ret
		}
		.method assembly hidebysig 
			instance void PrepareDesignTime()
		{
			ret
		}
		.method assembly hidebysig 
			instance string ReadSessionKey()
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetPrivacyKey([out] valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType'& keyType)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_PrivacyKey()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_DeleteAfterServicing()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' get_ImageOwnerKey()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ImageOwnerKey(valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.property instance string CustomHandlerName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_CustomHandlerName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_CustomHandlerName(string)
		}
		.property instance bool DeleteAfterServicing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_DeleteAfterServicing()
		}
		.property instance string Directory()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_Directory()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_Directory(string)
		}
		.property instance string FolderName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_FolderName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_FolderName(string)
		}
		.property instance class [mscorlib]System.Type HandlerType()
		{
			.get instance class [mscorlib]System.Type 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_HandlerType()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' ImageOwnerKey()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_ImageOwnerKey()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_ImageOwnerKey(valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType')
		}
		.property instance string Item(string)
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_Item(string)
		}
		.property instance string PrivacyKey()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_PrivacyKey()
		}
		.property instance bool PrivateImages()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_PrivateImages()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' StorageType()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_StorageType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_StorageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType')
		}
		.property instance valuetype [mscorlib]System.TimeSpan Timeout()
		{
			.get instance valuetype [mscorlib]System.TimeSpan 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_Timeout()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_Timeout(valuetype [mscorlib]System.TimeSpan)
		}
		.property instance string Url()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerSettings'::set_Url(string)
		}
	}
	.class public sealed ChartHttpHandlerStorageType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' File = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' InProcess = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType' Session = int32(0x00000002)
	}
	.class private ChartImage
		extends 'System.Web.UI.DataVisualization.Charting.ChartPicture'
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_DataSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DataSource(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' get_ImageType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Compression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Compression(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void SaveIntoMetafile(class [mscorlib]'System.IO.Stream' imageStream, valuetype [System.Drawing]System.Drawing.Imaging.EmfType emfType)
		{
			.custom instance void [mscorlib]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Bitmap GetImage()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Bitmap GetImage(float32 resolution)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsValidDataSource(object dataSource)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]System.Collections.ArrayList GetDataSourceMemberNames(object dataSource, bool usedForYValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DataBind()
		{
			ret
		}
		.method assembly hidebysig 
			instance void DataBind(class [mscorlib]System.Collections.IEnumerable dataSource, class [mscorlib]System.Collections.ArrayList seriesList)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AlignDataPointsByAxisLabel(bool sortAxisLabels, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AlignDataPointsByAxisLabel(class [mscorlib]System.Collections.ArrayList seriesList, bool sortAxisLabels, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DataBindCrossTab(class [mscorlib]System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, bool sort, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortingOrder)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DataBindTable(class [mscorlib]System.Collections.IEnumerable dataSource, string xField)
		{
			ret
		}
		.field assembly bool boundToDataSource
		.property instance int32 Compression()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartImage'::get_Compression()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartImage'::set_Compression(int32)
		}
		.property instance object DataSource()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance object 'System.Web.UI.DataVisualization.Charting.ChartImage'::get_DataSource()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartImage'::set_DataSource(object)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' ImageType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 54 79 70 65 02 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' 'System.Web.UI.DataVisualization.Charting.ChartImage'::get_ImageType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartImage'::set_ImageType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType')
		}
	}
	.class public sealed ChartImageAlignmentStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' Bottom = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BottomLeft = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BottomRight = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' Center = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' Left = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' Right = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' Top = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' TopLeft = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' TopRight = int32(0x00000002)
	}
	.class public sealed ChartImageFormat
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Bmp = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Emf = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' EmfDual = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' EmfPlus = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Gif = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Jpeg = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Png = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageFormat' Tiff = int32(0x00000003)
	}
	.class public sealed ChartImageType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' Bmp = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' Emf = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' Jpeg = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageType' Png = int32(0x00000002)
	}
	.class public sealed ChartImageWrapMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' Scaled = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' Tile = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' TileFlipX = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' TileFlipXY = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' TileFlipY = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' Unscaled = int32(0x00000064)
	}
	.class public abstract ChartNamedElement
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent, string name)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string ToStringInternal()
		{
			ret
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'::set_Name(string)
		}
	}
	.class public abstract 'ChartNamedElementCollection`1'<('System.Web.UI.DataVisualization.Charting.ChartNamedElement') 'T'>
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<!0>
		implements 'System.Web.UI.DataVisualization.Charting.INameController'
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method family virtual hidebysig newslot specialname 
			instance string get_NamePrefix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, !0 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_NameReferenceChanged(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_NameReferenceChanged(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_NameReferenceChanging(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_NameReferenceChanging(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsUniqueName(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string NextUniqueName()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void VerifyNameReference(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsNameReferenceValid(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance !0 FindByName(string name)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertItem(int32 index, !0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetItem(int32 index, !0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveItem(int32 index)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void FixNameReferences(!0 item)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Web.UI.DataVisualization.Charting.INameController.IsUniqueName'(string name)
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::IsUniqueName
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool 'System.Web.UI.DataVisualization.Charting.INameController.get_IsColectionEditing'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::get_IsColectionEditing
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void 'System.Web.UI.DataVisualization.Charting.INameController.set_IsColectionEditing'(bool 'value')
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::set_IsColectionEditing
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.INameController.OnNameReferenceChanging'(class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::OnNameReferenceChanging
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.INameController.OnNameReferenceChanged'(class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::OnNameReferenceChanged
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.INameController.DoSnapshot'(bool save, class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> changingCallback, class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> changedCallback)
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::DoSnapshot
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.IList 'System.Web.UI.DataVisualization.Charting.INameController.get_Snapshot'()
		{
			.override 'System.Web.UI.DataVisualization.Charting.INameController'::get_Snapshot
			ret
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> NameReferenceChanged
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::add_NameReferenceChanged(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::remove_NameReferenceChanged(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> NameReferenceChanging
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::add_NameReferenceChanging(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::remove_NameReferenceChanging(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'>)
		}
		.property instance !0 Item(string)
		{
			.get instance !0 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::get_Item(string)
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::set_Item(string, !0)
		}
		.property instance string NamePrefix()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::get_NamePrefix()
		}
		.property instance bool 'System.Web.UI.DataVisualization.Charting.INameController.IsColectionEditing'()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::'System.Web.UI.DataVisualization.Charting.INameController.get_IsColectionEditing'()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::'System.Web.UI.DataVisualization.Charting.INameController.set_IsColectionEditing'(bool)
		}
		.property instance class [mscorlib]System.Collections.IList 'System.Web.UI.DataVisualization.Charting.INameController.Snapshot'()
		{
			.get instance class [mscorlib]System.Collections.IList 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'::'System.Web.UI.DataVisualization.Charting.INameController.get_Snapshot'()
		}
	}
	.class public ChartPaintEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance object get_ChartElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_ChartGraphics()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_CommonElements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' get_Chart()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(object chartElement, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ElementPosition' position)
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Chart' Chart()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Chart' 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'::get_Chart()
		}
		.property instance object ChartElement()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'::get_ChartElement()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' ChartGraphics()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'::get_ChartGraphics()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' CommonElements()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'::get_CommonElements()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' Position()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'::get_Position()
		}
	}
	.class private ChartPicture
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
		implements [mscorlib]System.IServiceProvider
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_ChartGraph()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ChartGraph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_BeforePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_BeforePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void add_AfterPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void remove_AfterPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method assembly hidebysig 
			instance void PaintOffScreen()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint GetTextRenderingHint()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool GetBorderSkinVisibility()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class [System.Drawing]System.Drawing.Graphics graph, bool paintTopLevelElementOnly)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnBeforePaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnAfterPaint(class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs' e)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Invalidate()
		{
			ret
		}
		.method public hidebysig 
			instance void Resize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph)
		{
			ret
		}
		.method public hidebysig 
			instance void Resize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, bool calcAreaPositionOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMinMaxFromData()
		{
			ret
		}
		.method public hidebysig 
			instance void Recalculate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' get_RightToLeft()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RightToLeft(valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SuppressExceptions(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_SuppressExceptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' get_BorderSkin()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMapEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsMapEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' get_MapAreas()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' get_ChartAreas()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' get_Legends()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' get_Titles()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' get_Annotations()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Width()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Width(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' get_DataManipulator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Height()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Height(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSoftShadows()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSoftShadows(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' get_AntiAliasing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' get_TextAntiAliasingQuality()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextAntiAliasingQuality(valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.FontCache' get_FontCache()
		{
			ret
		}
		.method assembly hidebysig 
			instance void AlignChartAreas(valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance void AlignChartAreasAxesView(class 'System.Web.UI.DataVisualization.Charting.ChartArea' changedArea, valuetype 'System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations' orientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InspectChartDimensions(int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadTemplate(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadTemplate(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method assembly hidebysig 
			instance void WriteChartMapTag(class [System.Web]'System.Web.UI.HtmlTextWriter' output, string mapName)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Title' GetDefaultTitle(bool create)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.AnnotationSmartLabel' annotationSmartLabel
		.field static assembly literal float32 elementSpacing = float32(0x40400000)
		.field assembly class 'System.Web.UI.DataVisualization.Charting.HotRegionsList' hotRegionsList
		.field assembly bool isPrinting
		.field assembly bool isSelectionMode
		.field static assembly literal float32 maxTitleSize = float32(0x41700000)
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> AfterPaint
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::add_AfterPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::remove_AfterPaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
		}
		.event class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'> BeforePaint
		{
			.addon instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::add_BeforePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
			.removeon instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::remove_BeforePaint(class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs'>)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' Annotations()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationCollection' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_Annotations()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' AntiAliasing()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.AntiAliasingStyles) string('All') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_AntiAliasing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_AntiAliasing(valuetype 'System.Web.UI.DataVisualization.Charting.AntiAliasingStyles')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('White') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('White') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' BorderSkin()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 42 6F 72 64 65 72 53 6B 69 6E 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance class 'System.Web.UI.DataVisualization.Charting.BorderSkin' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BorderSkin()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BorderSkin(class 'System.Web.UI.DataVisualization.Charting.BorderSkin')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_BorderWidth(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' ChartAreas()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartAreaCollection' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_ChartAreas()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' ChartGraph()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_ChartGraph()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_ChartGraph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' DataManipulator()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_DataManipulator()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.FontCache' FontCache()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.FontCache' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_FontCache()
		}
		.property instance int32 Height()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(300) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_Height()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_Height(int32)
		}
		.property instance bool IsMapEnabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_IsMapEnabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_IsMapEnabled(bool)
		}
		.property instance bool IsSoftShadows()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_IsSoftShadows()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_IsSoftShadows(bool)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' Legends()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendCollection' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_Legends()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' MapAreas()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_MapAreas()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' RightToLeft()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 34 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 52 69 67 68 74 54 6F 4C 65 66 74 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_RightToLeft()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_RightToLeft(valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft')
		}
		.property instance bool SuppressExceptions()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_SuppressExceptions()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_SuppressExceptions(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' TextAntiAliasingQuality()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality) string('High') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_TextAntiAliasingQuality()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_TextAntiAliasingQuality(valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' Titles()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.TitleCollection' 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_Titles()
		}
		.property instance int32 Width()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(300) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartPicture'::get_Width()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartPicture'::set_Width(int32)
		}
	}
	.class public ChartSerializer
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method assembly hidebysig 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' get_Content()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Content(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' get_Format()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Format(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsResetWhenLoading()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsResetWhenLoading(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsUnknownAttributeIgnored()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsUnknownAttributeIgnored(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsTemplateMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsTemplateMode(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SerializableContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SerializableContent(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_NonSerializableContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NonSerializableContent(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Reset()
		{
			ret
		}
		.method public hidebysig 
			instance void Save(string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void Save(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig 
			instance void Save(class [System.Xml]System.Xml.XmlWriter writer)
		{
			ret
		}
		.method public hidebysig 
			instance void Save(class [mscorlib]'System.IO.TextWriter' writer)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig 
			instance void Load(class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(class [mscorlib]'System.IO.TextReader' reader)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetSerializableContent()
		{
			ret
		}
		.method family hidebysig 
			instance string GetContentString(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' content, bool 'serializable')
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' GetChartObject()
		{
			ret
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' Content()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.SerializationContents) string('Default') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_Content()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_Content(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' Format()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.SerializationFormat) string('Xml') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_Format()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_Format(valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat')
		}
		.property instance bool IsResetWhenLoading()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_IsResetWhenLoading()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_IsResetWhenLoading(bool)
		}
		.property instance bool IsTemplateMode()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_IsTemplateMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_IsTemplateMode(bool)
		}
		.property instance bool IsUnknownAttributeIgnored()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_IsUnknownAttributeIgnored()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_IsUnknownAttributeIgnored(bool)
		}
		.property instance string NonSerializableContent()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_NonSerializableContent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_NonSerializableContent(string)
		}
		.property instance string SerializableContent()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::get_SerializableContent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartSerializer'::set_SerializableContent(string)
		}
	}
	.class private ChartTypeConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ChartValueType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Date = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' DateTime = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' DateTimeOffset = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Double = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Int32 = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Int64 = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Single = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' String = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' Time = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' UInt32 = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' UInt64 = int32(0x00000006)
	}
	.class private sealed CircularAxisLabelsStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' Circular = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' Horizontal = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CircularAxisLabelsStyle' Radial = int32(0x00000003)
	}
	.class private CircularChartAreaAxis
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(float32 axisPosition)
		{
			ret
		}
		.field assembly float32 AxisPosition
		.field assembly string Title
		.field assembly valuetype [System.Drawing]System.Drawing.Color TitleForeColor
	}
	.class private ColorArrayConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ColorArrayToString(valuetype [System.Drawing]System.Drawing.Color[] colors)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [System.Drawing]System.Drawing.Color[] StringToColorArray(string colorNames)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed CommonCustomProperties
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' AxisLabel = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackGradientStyle = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackHatchStyle = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackImage = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackImageAlignment = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackImageTransparentColor = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackImageWrapMode = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BackSecondaryColor = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BorderColor = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BorderDashStyle = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' BorderWidth = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' Color = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' Font = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' IsValueShownAsLabel = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' IsVisibleInLegend = int32(0x00000027)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' Label = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelAngle = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelBackColor = int32(0x0000002F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelBorderColor = int32(0x0000002C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelBorderDashStyle = int32(0x0000002D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelBorderWidth = int32(0x0000002E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelForeColor = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelFormat = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelMapAreaAttributes = int32(0x0000002A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelMapAreaType = int32(0x0000001E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelPostBackValue = int32(0x0000002B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelToolTip = int32(0x00000029)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LabelUrl = int32(0x00000028)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendMapAreaAttributes = int32(0x00000025)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendMapAreaType = int32(0x0000001D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendPostBackValue = int32(0x00000026)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendText = int32(0x00000024)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendToolTip = int32(0x00000023)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' LegendUrl = int32(0x00000022)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MapAreaAttributes = int32(0x0000001A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MapAreaType = int32(0x0000001C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerBorderColor = int32(0x00000018)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerBorderWidth = int32(0x00000019)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerColor = int32(0x00000017)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerImage = int32(0x00000015)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerImageTransparentColor = int32(0x00000016)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerSize = int32(0x00000014)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' MarkerStyle = int32(0x00000013)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' PointName = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' PostBackValue = int32(0x0000001B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' Tag = int32(0x00000021)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' ToolTip = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' Url = int32(0x0000001F)
	}
	.class private CommonElements
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' get_DataManager()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ProcessModePaint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ProcessModeRegions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.HotRegionsList' get_HotRegionsList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' get_DataManipulator()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Utilities.ImageLoader' get_ImageLoader()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' get_Chart()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' get_ChartTypeRegistry()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Borders3D.BorderTypeRegistry' get_BorderTypeRegistry()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaRegistry' get_FormulaRegistry()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartImage' get_ChartPicture()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_Width()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Width(int32 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_Height()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Height(int32 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 ParseDouble(string stringToParse)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 ParseDouble(string stringToParse, bool throwException)
		{
			ret
		}
		.method assembly static hidebysig 
			float32 ParseFloat(string stringToParse)
		{
			ret
		}
		.field assembly class [System]System.ComponentModel.Design.IServiceContainer container
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph
		.field assembly bool processModePaint
		.field assembly bool processModeRegions
		.property instance class 'System.Web.UI.DataVisualization.Charting.Borders3D.BorderTypeRegistry' BorderTypeRegistry()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Borders3D.BorderTypeRegistry' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_BorderTypeRegistry()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Chart' Chart()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Chart' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_Chart()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartImage' ChartPicture()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartImage' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_ChartPicture()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' ChartTypeRegistry()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_ChartTypeRegistry()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' DataManager()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_DataManager()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' DataManipulator()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataManipulator' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_DataManipulator()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaRegistry' FormulaRegistry()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaRegistry' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_FormulaRegistry()
		}
		.property instance int32 Height()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_Height()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CommonElements'::set_Height(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.HotRegionsList' HotRegionsList()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.HotRegionsList' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_HotRegionsList()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Utilities.ImageLoader' ImageLoader()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Utilities.ImageLoader' 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_ImageLoader()
		}
		.property instance bool ProcessModePaint()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_ProcessModePaint()
		}
		.property instance bool ProcessModeRegions()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_ProcessModeRegions()
		}
		.property instance int32 Width()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.CommonElements'::get_Width()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CommonElements'::set_Width(int32)
		}
	}
	.class public sealed CompareMethod
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' EqualTo = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' LessThan = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' LessThanOrEqualTo = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' MoreThan = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' MoreThanOrEqualTo = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' NotEqualTo = int32(0x00000005)
	}
	.class private abstract sealed Constants
		extends [mscorlib]System.Object
	{
		.field static public literal string AutoValue = "Auto"
		.field static public literal string MaxValue = "Max"
		.field static public literal string MinValue = "Min"
		.field static public literal string NotSetValue = "NotSet"
	}
	.class private abstract sealed ConverterHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.Chart' GetChartFromContext(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
	}
	.class public CustomLabel
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 fromPosition, float64 toPosition, string text, int32 labelRow, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 fromPosition, float64 toPosition, string text, int32 labelRow, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle, valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' gridTick)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabel' Clone()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' get_Parent()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance void set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_Axis()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageUrl(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ImageUrl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageMapAreaAttributes(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ImageMapAreaAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ImagePostBackValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImagePostBackValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Image()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Image(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' get_GridTicks()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_GridTicks(valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FromPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FromPosition(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ToPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToPosition(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_RowIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RowIndex(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' get_LabelMark()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelMark(valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' 'value')
		{
			ret
		}
		.field assembly bool customLabel
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Axis()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance float64 FromPosition()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_FromPosition()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_FromPosition(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' GridTicks()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 69 64 54 69 63 6B 54 79 70 65 73 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_GridTicks()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_GridTicks(valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes')
		}
		.property instance string Image()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Image()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_Image(string)
		}
		.property instance string ImageMapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ImageMapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ImageMapAreaAttributes(string)
		}
		.property instance string ImagePostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ImagePostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ImagePostBackValue(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string ImageUrl()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ImageUrl()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ImageUrl(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' LabelMark()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 61 62 65 6C 4D 61 72 6B 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_LabelMark()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_LabelMark(valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle')
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_MapAreaAttributes(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_MarkColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_MarkColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('Custom LabelStyle') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_Name(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' Parent()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Parent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_PostBackValue(string)
		}
		.property instance int32 RowIndex()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_RowIndex()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_RowIndex(int32)
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_Text(string)
		}
		.property instance float64 ToPosition()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ToPosition()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ToPosition(float64)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomLabel'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomLabel'::set_Url(string)
		}
	}
	.class public CustomLabelsCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.CustomLabel'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_Axis()
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabel' Add(float64 fromPosition, float64 toPosition, string text)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabel' Add(float64 fromPosition, float64 toPosition, string text, bool customLabel)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabel' Add(float64 fromPosition, float64 toPosition, string text, int32 rowIndex, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomLabel' Add(float64 fromPosition, float64 toPosition, string text, int32 rowIndex, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle, valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' gridTick)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(float64 labelsStep, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType, float64 min, float64 max, string format, int32 rowIndex, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(float64 labelsStep, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(float64 labelsStep, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType, string format)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(float64 labelsStep, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType, string format, int32 rowIndex, valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' markStyle)
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.CustomLabelsCollection'::get_Axis()
		}
	}
	.class public CustomProperties
		extends [mscorlib]System.Object
	{
		.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' properties)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' get_DataPointCustomProperties()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict specialname 
			instance void set_DataPointCustomProperties(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance string GetUserDefinedCustomProperties()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance string GetUserDefinedCustomProperties(bool userDefined)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void SetUserDefinedAttributes(string val)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' m_DataPointCustomProperties
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' DataPointCustomProperties()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' 'System.Web.UI.DataVisualization.Charting.CustomProperties'::get_DataPointCustomProperties()
			.set instance void 'System.Web.UI.DataVisualization.Charting.CustomProperties'::set_DataPointCustomProperties(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties')
		}
	}
	.class private CustomPropertiesTypeConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.class nested family CustomAttributesPropertyDescriptor
			extends [System]System.ComponentModel.TypeConverter/SimplePropertyDescriptor
		{
			.method assembly hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Type componentType, string name, class [mscorlib]System.Type propertyType, class [mscorlib]System.Attribute[] attributes, class 'System.Web.UI.DataVisualization.Charting.Utilities.CustomPropertyInfo' customAttributeInfo)
			{
				ret
			}
			.method public virtual hidebysig 
				instance object GetValue(object component)
			{
				ret
			}
			.method public virtual hidebysig 
				instance void SetValue(object component, object 'value')
			{
				ret
			}
			.method public hidebysig 
				instance bool IsDefaultValue(string val)
			{
				ret
			}
			.method public virtual hidebysig newslot 
				instance object GetValueFromString(object obj)
			{
				ret
			}
			.method public hidebysig 
				instance string GetStringFromValue(object 'value')
			{
				ret
			}
			.method public virtual hidebysig newslot 
				instance void ValidateValue(string attrName, object 'value')
			{
				ret
			}
		}
		.class nested assembly ErrorBarTypeConverter
			extends [System]System.ComponentModel.StringConverter
		{
			.method public virtual hidebysig 
				instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
			{
				ret
			}
			.method public virtual hidebysig 
				instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection GetProperties(class [System]System.ComponentModel.ITypeDescriptorContext context, object obj, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public CustomizeLegendEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' legendItems)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' legendItems, string legendName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' get_LegendItems()
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' LegendItems()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'::get_LegendItems()
		}
		.property instance string LegendName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs'::get_LegendName()
		}
	}
	.class public CustomizeMapAreasEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' areaItems)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' get_MapAreaItems()
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' MapAreaItems()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.MapAreasCollection' 'System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs'::get_MapAreaItems()
		}
	}
	.class public DataFormula
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Formula(string formulaName, string parameters, string inputSeries, string outputSeries)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetDoubleArray(class 'System.Web.UI.DataVisualization.Charting.Series'[] outputSeries, int32[] valueIndex, float64[][] outputValues, string[][] outputLabels)
		{
			ret
		}
		.method public hidebysig 
			instance void CopySeriesValues(string inputSeries, string outputSeries)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckXValuesAlignment(class 'System.Web.UI.DataVisualization.Charting.Series'[] series)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, string parameters, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, string inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, string inputSeries, string outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FinancialFormula(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formulaName, string parameters, string inputSeries, string outputSeries)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEmptyPointIgnored()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEmptyPointIgnored(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsStartFromFirst()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsStartFromFirst(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.StatisticFormula' get_Statistics()
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common
		.field static assembly literal string IndexedSeriesLabelsSourceAttr = "__IndexedSeriesLabelsSource__"
		.property instance bool IsEmptyPointIgnored()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataFormula'::get_IsEmptyPointIgnored()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataFormula'::set_IsEmptyPointIgnored(bool)
		}
		.property instance bool IsStartFromFirst()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataFormula'::get_IsStartFromFirst()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataFormula'::set_IsStartFromFirst(bool)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.StatisticFormula' Statistics()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.StatisticFormula' 'System.Web.UI.DataVisualization.Charting.DataFormula'::get_Statistics()
		}
	}
	.class public DataManipulator
		extends 'System.Web.UI.DataVisualization.Charting.DataFormula'
	{
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Series'[] ConvertToSeriesArray(object obj, bool createNew)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder, string sortBy, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder, string sortBy, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Collections.Generic.IComparer`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> comparer, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Collections.Generic.IComparer`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> comparer, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void InsertEmptyPoints(float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, float64 fromXValue, float64 toXValue, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Data]System.Data.DataSet ExportSeriesValues(class 'System.Web.UI.DataVisualization.Charting.Series'[] series)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Data]System.Data.DataSet ExportSeriesValues()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Data]System.Data.DataSet ExportSeriesValues(string seriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Data]System.Data.DataSet ExportSeriesValues(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_FilterSetEmptyPoints()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FilterSetEmptyPoints(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_FilterMatchedPoints()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FilterMatchedPoints(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' dateRange, string rangeElements, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' dateRange, string rangeElements, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' dateRange, string rangeElements, string inputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries, string usingValue)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, string inputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(valuetype 'System.Web.UI.DataVisualization.Charting.CompareMethod' compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries, string usingValue)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries, string usingValue, bool getTopValues)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, string inputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(class 'System.Web.UI.DataVisualization.Charting.IDataPointFilter' filterInterface, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(class 'System.Web.UI.DataVisualization.Charting.IDataPointFilter' filterInterface, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(class 'System.Web.UI.DataVisualization.Charting.IDataPointFilter' filterInterface, string inputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(class 'System.Web.UI.DataVisualization.Charting.IDataPointFilter' filterInterface, string inputSeriesNames, string outputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, string inputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, string inputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void GroupByAxisLabel(string formula, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void GroupByAxisLabel(string formula, string inputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, string inputSeriesName, string outputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, string inputSeriesName, string outputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance void Group(string formula, float64 interval, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalType, float64 intervalOffset, valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' intervalOffsetType, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.method public hidebysig 
			instance void GroupByAxisLabel(string formula, class 'System.Web.UI.DataVisualization.Charting.Series' inputSeries, class 'System.Web.UI.DataVisualization.Charting.Series' outputSeries)
		{
			ret
		}
		.property instance bool FilterMatchedPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataManipulator'::get_FilterMatchedPoints()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataManipulator'::set_FilterMatchedPoints(bool)
		}
		.property instance bool FilterSetEmptyPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataManipulator'::get_FilterSetEmptyPoints()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataManipulator'::set_FilterSetEmptyPoints(bool)
		}
	}
	.class public DataPoint
		extends 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 xValue, float64 yValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 xValue, float64[] yValues)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 xValue, string yValues)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method assembly hidebysig 
			instance void SetPointCustomProperty(object obj, string propertyName, string format)
		{
			ret
		}
		.method public hidebysig 
			instance void SetValueXY(object xValue, object[] yValue)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetValueY(object[] yValue)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' Clone()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResizeYValueArray(int32 newSize)
		{
			ret
		}
		.method public hidebysig 
			instance float64 GetValueByName(string valueName)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string ReplaceKeywords(string strOriginal)
		{
			ret
		}
		.method assembly static hidebysig 
			string ReplaceCustomPropertyKeyword(string originalString, class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' properties)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string ToStringInternal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_XValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_XValue(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64[] get_YValues()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_YValues(float64[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEmpty(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.field assembly string _lastLabelText
		.field assembly valuetype [System.Drawing]System.Drawing.PointF positionRel
		.property instance bool IsEmpty()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataPoint'::get_IsEmpty()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPoint'::set_IsEmpty(bool)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPoint'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPoint'::set_Name(string)
		}
		.property instance float64 XValue()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([mscorlib]System.Double) string('0.0') }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.DataPoint'::get_XValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPoint'::set_XValue(float64)
		}
		.property instance float64[] YValues()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance float64[] 'System.Web.UI.DataVisualization.Charting.DataPoint'::get_YValues()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPoint'::set_YValues(float64[])
		}
	}
	.class private DataPoint3D
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint
		.field assembly float32 depth
		.field assembly float64 height
		.field assembly int32 index
		.field assembly bool indexedSeries
		.field assembly float64 width
		.field assembly float64 xCenterVal
		.field assembly float64 xPosition
		.field assembly float64 yPosition
		.field assembly float32 zPosition
	}
	.class public DataPointCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DataPointInit(class 'System.Web.UI.DataVisualization.Charting.DataPoint'& dataPoint)
		{
			ret
		}
		.method assembly static hidebysig 
			void DataPointInit(class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint'& dataPoint)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' Add(float64[] y)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			void ParsePointFieldsParameter(string otherFields, string[]& otherAttributeNames, string[]& otherFieldNames, string[]& otherValueFormat)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBind(class [mscorlib]System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindY(class [mscorlib]System.Collections.IEnumerable[] yValue)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DataBindXY(class [mscorlib]System.Collections.IEnumerable xValue, class [mscorlib]System.Collections.IEnumerable[] yValues)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DataBindY(class [mscorlib]System.Collections.IEnumerable yValue, string yFields)
		{
			ret
		}
		.method public hidebysig 
			instance void DataBindXY(class [mscorlib]System.Collections.IEnumerable xValue, string xField, class [mscorlib]System.Collections.IEnumerable yValue, string yFields)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsEmptyValue(object val)
		{
			ret
		}
		.method public hidebysig 
			instance int32 AddY(float64 yValue)
		{
			ret
		}
		.method public hidebysig 
			instance int32 AddY(object[] yValue)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 AddXY(float64 xValue, float64 yValue)
		{
			ret
		}
		.method public hidebysig 
			instance int32 AddXY(object xValue, object[] yValue)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InsertXY(int32 index, object xValue, object[] yValue)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InsertY(int32 index, object[] yValue)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]System.Collections.IEnumerator GetDataSourceEnumerator(class [mscorlib]System.Collections.IEnumerable dataSource)
		{
			ret
		}
		.method assembly static hidebysig 
			object ConvertEnumerationItem(object item, string fieldName)
		{
			ret
		}
		.method assembly static hidebysig 
			void AutoDetectValuesType(class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.IEnumerator xEnumerator, string xField, class [mscorlib]System.Collections.IEnumerator yEnumerator, string yField)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> FindAllByValue(float64 valueToFind, string useValue, int32 startIndex)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> FindAllByValue(float64 valueToFind, string useValue)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerable`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> FindAllByValue(float64 valueToFind)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindByValue(float64 valueToFind, string useValue, int32 startIndex)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindByValue(float64 valueToFind, string useValue)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindByValue(float64 valueToFind)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMaxByValue(string useValue, int32 startIndex)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMaxByValue(string useValue)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMaxByValue()
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMinByValue(string useValue, int32 startIndex)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMinByValue(string useValue)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint' FindMinByValue()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Initialize(class 'System.Web.UI.DataVisualization.Charting.DataPoint' item)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Series' series
	}
	.class public DataPointComparer
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IComparer`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'>
	{
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' sortOrder, string sortBy)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(class 'System.Web.UI.DataVisualization.Charting.DataPoint' x, class 'System.Web.UI.DataVisualization.Charting.DataPoint' y)
		{
			ret
		}
	}
	.class public DataPointCustomProperties
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series, bool pointProperties)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsCustomPropertySet(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsCustomPropertySet(valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' 'property')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void DeleteCustomProperty(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DeleteCustomProperty(valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' 'property')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetCustomProperty(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsSerializing()
		{
			ret
		}
		.method assembly hidebysig 
			instance object GetAttributeObject(valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' attrib)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SetCustomProperty(string name, string propertyValue)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAttributeObject(valuetype 'System.Web.UI.DataVisualization.Charting.CommonCustomProperties' attrib, object attributeValue)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SetDefault(bool clearAll)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Label()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Label(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_AxisLabel()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AxisLabel(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelFormat()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelFormat(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsValueShownAsLabel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsValueShownAsLabel(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_Color()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Color(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LabelForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LabelAngle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelAngle(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' get_MarkerStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerStyle(valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MarkerSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MarkerImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerBorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerBorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MarkerBorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerBorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomPropertiesExtended(class 'System.Web.UI.DataVisualization.Charting.CustomProperties' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CustomProperties' get_CustomPropertiesExtended()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CustomProperties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomProperties(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance string ReplaceKeywords(string strOriginal)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsVisibleInLegend()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsVisibleInLegend(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendToolTip(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendToolTip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LabelBackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelBackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LabelBorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelBorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LabelBorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelBorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LabelBorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelBorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelToolTip(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelToolTip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendUrl(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendUrl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendMapAreaAttributes(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendMapAreaAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LegendPostBackValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendPostBackValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelUrl(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelUrl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelMapAreaAttributes(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelMapAreaAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LabelPostBackValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LabelPostBackValue(string 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeAxisLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelFormat()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeIsValueShownAsLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBorderDashStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackImage()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackImageWrapMode()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackImageTransparentColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackImageAlignment()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackGradientStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackSecondaryColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeBackHatchStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeFont()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelForeColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelAngle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerSize()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerImage()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerImageTransparentColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMarkerBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMapAreaAttributes()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializePostBackValue()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLegendUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLegendMapAreaAttributes()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelMapAreaAttributes()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeIsVisibleInLegend()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLegendText()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLegendToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelBackColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelBorderDashStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeLabelBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAxisLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelFormat()
		{
			ret
		}
		.method public hidebysig 
			instance void ResetIsValueShownAsLabel()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBorderDashStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBackImage()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBackImageWrapMode()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBackImageTransparentColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBackSecondaryColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetBackHatchStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetFont()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelAngle()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerSize()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerImage()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerImageTransparentColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMarkerBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetMapAreaAttributes()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetPostBackValue()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLegendUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLegendMapAreaAttributes()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelUrl()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelMapAreaAttributes()
		{
			ret
		}
		.method public hidebysig 
			instance void ResetIsVisibleInLegend()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLegendText()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLegendToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelBackColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelBorderColor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelBorderDashStyle()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelBorderWidth()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetLabelToolTip()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Invalidate(bool invalidateLegend)
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.CustomProperties' customProperties
		.field assembly bool isEmptyPoint
		.field assembly bool pointCustomProperties
		.field assembly class [mscorlib]System.Collections.Hashtable properties
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Series' series
		.field assembly bool tempColorIsSet
		.property instance string AxisLabel()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_AxisLabel()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_AxisLabel(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_BorderWidth(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color Color()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Color()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_Color(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string CustomProperties()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_CustomProperties()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_CustomProperties(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CustomProperties' CustomPropertiesExtended()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.CustomProperties' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_CustomPropertiesExtended()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_CustomPropertiesExtended(class 'System.Web.UI.DataVisualization.Charting.CustomProperties')
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance bool IsValueShownAsLabel()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_IsValueShownAsLabel()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_IsValueShownAsLabel(bool)
		}
		.property instance bool IsVisibleInLegend()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_IsVisibleInLegend()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_IsVisibleInLegend(bool)
		}
		.property instance string Item(int32)
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Item(int32)
		}
		.property instance string Item(string)
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Item(string)
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_Item(string, string)
		}
		.property instance string Label()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Label()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_Label(string)
		}
		.property instance int32 LabelAngle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelAngle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelAngle(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LabelBackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelBackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelBackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LabelBorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelBorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelBorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LabelBorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelBorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelBorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LabelBorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelBorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelBorderWidth(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LabelForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string LabelFormat()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelFormat()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelFormat(string)
		}
		.property instance string LabelMapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelMapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelMapAreaAttributes(string)
		}
		.property instance string LabelPostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelPostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelPostBackValue(string)
		}
		.property instance string LabelToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelToolTip(string)
		}
		.property instance string LabelUrl()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LabelUrl()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LabelUrl(string)
		}
		.property instance string LegendMapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LegendMapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LegendMapAreaAttributes(string)
		}
		.property instance string LegendPostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LegendPostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LegendPostBackValue(string)
		}
		.property instance string LegendText()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LegendText()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LegendText(string)
		}
		.property instance string LegendToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LegendToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LegendToolTip(string)
		}
		.property instance string LegendUrl()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_LegendUrl()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_LegendUrl(string)
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MapAreaAttributes(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerBorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerBorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerBorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 MarkerBorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerBorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerBorderWidth(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string MarkerImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerImage(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 MarkerSize()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerSize(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' MarkerStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_MarkerStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_MarkerStyle(valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle')
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_PostBackValue(string)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'::set_Url(string)
		}
	}
	.class private DataPointValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed DateRangeType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' DayOfMonth = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' DayOfWeek = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' Hour = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' Minute = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' Month = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateRangeType' Year = int32(0x00000000)
	}
	.class public sealed DateTimeIntervalType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Days = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Hours = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Milliseconds = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Minutes = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Months = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' NotSet = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Number = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Seconds = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Weeks = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' Years = int32(0x00000002)
	}
	.class private DefaultImageHandler
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler'
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save'(string key, uint8[] data)
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler'::Save
			ret
		}
		.method private final virtual hidebysig newslot 
			instance uint8[] 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load'(string key)
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler'::Load
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete'(string key)
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler'::Delete
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists'(string key)
		{
			.override 'System.Web.UI.DataVisualization.Charting.IChartStorageHandler'::Exists
			ret
		}
	}
	.class private abstract sealed Diagnostics
		extends [mscorlib]System.Object
	{
		.class nested public ChartHandlerEvents
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance string get_Message()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_Message(string 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance string get_ErrorInfo()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance void set_ErrorInfo(string 'value')
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance string get_Text()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.property instance string ErrorInfo()
			{
				.get instance string 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents::get_ErrorInfo()
				.set instance void 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents::set_ErrorInfo(string)
			}
			.property instance string Message()
			{
				.get instance string 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents::get_Message()
				.set instance void 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents::set_Message(string)
			}
			.property instance string Text()
			{
				.get instance string 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents::get_Text()
			}
		}
		.class nested public HandlerPageTraceInfo
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype [mscorlib]System.DateTime get_DateStamp()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance string get_Url()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance string get_Verb()
			{
				.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
				ret
			}
			.method public hidebysig specialname 
				instance class [mscorlib]'System.Collections.Generic.IList`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents> get_Events()
			{
				ret
			}
			.method assembly hidebysig 
				instance void AddTraceInfo(string message, string errorInfo)
			{
				ret
			}
			.property instance valuetype [mscorlib]System.DateTime DateStamp()
			{
				.get instance valuetype [mscorlib]System.DateTime 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo::get_DateStamp()
			}
			.property instance class [mscorlib]'System.Collections.Generic.IList`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents> Events()
			{
				.get instance class [mscorlib]'System.Collections.Generic.IList`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/ChartHandlerEvents> 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo::get_Events()
			}
			.property instance string Url()
			{
				.get instance string 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo::get_Url()
			}
			.property instance string Verb()
			{
				.get instance string 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo::get_Verb()
			}
		}
		.method assembly static hidebysig 
			void TraceWrite(string message, class [mscorlib]System.Exception errorInfo)
		{
			ret
		}
		.method assembly static hidebysig specialname 
			bool get_IsTraceEnabled()
		{
			ret
		}
		.method assembly static hidebysig specialname 
			class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo> get_Messages()
		{
			ret
		}
		.property bool IsTraceEnabled()
		{
			.get bool 'System.Web.UI.DataVisualization.Charting.Diagnostics'::get_IsTraceEnabled()
		}
		.property class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo> Messages()
		{
			.get class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Diagnostics'/HandlerPageTraceInfo> 'System.Web.UI.DataVisualization.Charting.Diagnostics'::get_Messages()
		}
	}
	.class public sealed Docking
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Bottom = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Left = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Right = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Top = int32(0x00000000)
	}
	.class private DoubleArrayConverter
		extends [System]System.ComponentModel.ArrayConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private DoubleDateNanValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public static hidebysig 
			string ConvertDateTimeToString(float64 dtValue, valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' axisValuesType, valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' dtIntervalType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private DoubleNanValueConverter
		extends [System]System.ComponentModel.DoubleConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed DrawingOperationTypes
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' CalcElementPath = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' DrawElement = int32(0x00000001)
	}
	.class private DynamicPropertyDescriptor
		extends [System]System.ComponentModel.PropertyDescriptor
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.PropertyDescriptor basePropertyDescriptor, string displayName)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ResetValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldSerializeValue(object component)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object component, object 'value')
		{
			ret
		}
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type 'System.Web.UI.DataVisualization.Charting.DynamicPropertyDescriptor'::get_ComponentType()
		}
		.property instance string DisplayName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.DynamicPropertyDescriptor'::get_DisplayName()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DynamicPropertyDescriptor'::get_IsBrowsable()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.DynamicPropertyDescriptor'::get_IsReadOnly()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type 'System.Web.UI.DataVisualization.Charting.DynamicPropertyDescriptor'::get_PropertyType()
		}
	}
	.class private abstract sealed Editors
		extends [mscorlib]System.Object
	{
		.class nested assembly abstract sealed AnchorPointUITypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.AnchorPointUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed AnnotationAxisUITypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.AnnotationAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed AnnotationCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed AreaCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.AreaCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed AxesArrayEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.AxesArrayEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ChartCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ChartColorEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ChartTypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ChartWinDesignerSerializer
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Designer = "System.Web.UI.Design.DataVisualization.Charting.ChartWinDesignerSerializer, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ColorPaletteEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed DataPointCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed DataPointConverter
			extends [mscorlib]System.Object
		{
			.field static public literal string Convertor = "System.Web.UI.Design.DataVisualization.Charting.DataPointConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed DataPointCustomPropertiesConverter
			extends [mscorlib]System.Object
		{
			.field static public literal string Convertor = "System.Web.UI.Design.DataVisualization.Charting.DataPointCustomPropertiesConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed FlagsEnumUITypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed GradientEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed HatchStyleEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed ImageValueEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed KeywordsStringEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.KeywordsStringEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed LegendCellCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.LegendCellCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed LegendCellColumnCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed LegendCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.LegendCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed LegendItemCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed MarkerStyleEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.MarkerStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed SeriesCollectionEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed SeriesDataFieldValueAxisUITypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed SeriesDataFieldXConvertor
			extends [mscorlib]System.Object
		{
			.field static public literal string Convertor = "System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldXConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed SeriesDataFieldYConvertor
			extends [mscorlib]System.Object
		{
			.field static public literal string Convertor = "System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldYConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed SeriesDataSourceMemberValueAxisUITypeEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.SeriesDataSourceMemberValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed UIPropertyEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.UIPropertyEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed UITypeEditorProxy
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.UITypeEditorProxy, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed UITypeEditorProxyEx
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.UITypeEditorProxyEx, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.class nested assembly abstract sealed UrlValueEditor
			extends [mscorlib]System.Object
		{
			.field static public literal string Base = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
			.field static public literal string Editor = "System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		}
		.field static public literal string ChartWebDesigner = "System.Web.UI.Design.DataVisualization.Charting.ChartWebDesigner, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		.field static public literal string ChartWinDesigner = "System.Web.UI.Design.DataVisualization.Charting.ChartWinDesigner, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
		.field static public literal string UITypeEditorBase = "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
		.field static assembly literal string Version = "4.0.0.0"
	}
	.class public ElementPosition
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF ToRectangleF()
		{
			ret
		}
		.method public hidebysig 
			instance void FromRectangleF(valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.SizeF get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Bottom()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Right()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance bool EqualsInternal(object obj)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string ToStringInternal()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetPositionNoAuto(float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_X()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_X(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Y()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Y(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Width()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Width(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Height()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Height(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Auto()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Auto(bool 'value')
		{
			ret
		}
		.field assembly bool _auto
		.field assembly bool resetAreaAutoPosition
		.property instance bool Auto()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Auto()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ElementPosition'::set_Auto(bool)
		}
		.property instance float32 Bottom()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Bottom()
		}
		.property instance float32 Height()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Height()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ElementPosition'::set_Height(float32)
		}
		.property instance float32 Right()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Right()
		}
		.property instance valuetype [System.Drawing]System.Drawing.SizeF Size()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.get instance valuetype [System.Drawing]System.Drawing.SizeF 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Size()
		}
		.property instance float32 Width()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Width()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ElementPosition'::set_Width(float32)
		}
		.property instance float32 X()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_X()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ElementPosition'::set_X(float32)
		}
		.property instance float32 Y()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 00 00 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.ElementPosition'::get_Y()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ElementPosition'::set_Y(float32)
		}
	}
	.class private ElementPositionConverter
		extends [System]System.ComponentModel.ExpandableObjectConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public EllipseAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.EllipseAnnotation'::get_AnnotationType()
		}
	}
	.class public FTestResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ProbabilityFOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FCriticalValueOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly float64 fCriticalValueOneTail
		.field assembly float64 fValue
		.field assembly float64 firstSeriesMean
		.field assembly float64 firstSeriesVariance
		.field assembly float64 probabilityFOneTail
		.field assembly float64 secondSeriesMean
		.field assembly float64 secondSeriesVariance
		.property instance float64 FCriticalValueOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_FCriticalValueOneTail()
		}
		.property instance float64 FValue()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_FValue()
		}
		.property instance float64 FirstSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_FirstSeriesMean()
		}
		.property instance float64 FirstSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_FirstSeriesVariance()
		}
		.property instance float64 ProbabilityFOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_ProbabilityFOneTail()
		}
		.property instance float64 SecondSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_SecondSeriesMean()
		}
		.property instance float64 SecondSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FTestResult'::get_SecondSeriesVariance()
		}
	}
	.class public sealed FinancialFormula
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' AccumulationDistribution = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' AverageTrueRange = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' BollingerBands = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' ChaikinOscillator = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' CommodityChannelIndex = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' DetrendedPriceOscillator = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' EaseOfMovement = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' Envelopes = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' ExponentialMovingAverage = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' Forecasting = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' MassIndex = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' MedianPrice = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' MoneyFlow = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' MovingAverage = int32(0x00000015)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' MovingAverageConvergenceDivergence = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' NegativeVolumeIndex = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' OnBalanceVolume = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' Performance = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' PositiveVolumeIndex = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' PriceVolumeTrend = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' RateOfChange = int32(0x00000013)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' RelativeStrengthIndex = int32(0x00000014)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' StandardDeviation = int32(0x00000016)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' StochasticIndicator = int32(0x00000017)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' TriangularMovingAverage = int32(0x00000018)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' TripleExponentialMovingAverage = int32(0x00000019)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' TypicalPrice = int32(0x0000001A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' VolatilityChaikins = int32(0x0000001B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' VolumeOscillator = int32(0x0000001C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' WeightedClose = int32(0x0000001D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' WeightedMovingAverage = int32(0x0000001E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' WilliamsR = int32(0x0000001F)
	}
	.class private FontCache
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public static hidebysig specialname 
			string get_DefaultFamilyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_DefaultFont()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_DefaultBoldFont()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Font GetFont(string familyName, int32 size)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Font GetFont(string familyName, float32 size, valuetype [System.Drawing]System.Drawing.FontStyle style)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Font GetFont(class [System.Drawing]System.Drawing.FontFamily 'family', float32 size, valuetype [System.Drawing]System.Drawing.FontStyle style)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Font GetFont(class [System.Drawing]System.Drawing.FontFamily 'family', float32 size, valuetype [System.Drawing]System.Drawing.FontStyle style, valuetype [System.Drawing]System.Drawing.GraphicsUnit unit)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Drawing]System.Drawing.Font DefaultBoldFont()
		{
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.FontCache'::get_DefaultBoldFont()
		}
		.property string DefaultFamilyName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.FontCache'::get_DefaultFamilyName()
		}
		.property instance class [System.Drawing]System.Drawing.Font DefaultFont()
		{
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.FontCache'::get_DefaultFont()
		}
	}
	.class public FormatNumberEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance float64 get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocalizedValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalizedValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Format()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' get_ValueType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SenderTag()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' get_ElementType()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(float64 'value', string format, valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' valueType, string localizedValue, object senderTag, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType)
		{
			ret
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' ElementType()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_ElementType()
		}
		.property instance string Format()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_Format()
		}
		.property instance string LocalizedValue()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_LocalizedValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::set_LocalizedValue(string)
		}
		.property instance object SenderTag()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_SenderTag()
		}
		.property instance float64 Value()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_Value()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' ValueType()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs'::get_ValueType()
		}
	}
	.class private GdiGraphics
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF pt1, valuetype [System.Drawing]System.Drawing.PointF pt2)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawCurve(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawPolygon(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF layoutRectangle, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF point, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttrs)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawPath(class [System.Drawing]System.Drawing.Pen pen, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawPie(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawArc(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DrawLines(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillEllipse(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillPath(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillRegion(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Region region)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillPolygon(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void FillPie(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsState Save()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Restore(class [System.Drawing]System.Drawing.Drawing2D.GraphicsState gstate)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ResetClip()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetClip(valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetClip(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, valuetype [System.Drawing]System.Drawing.Drawing2D.CombineMode combineMode)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void TranslateTransform(float32 dx, float32 dy)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void BeginSelection(string hRef, string title)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void EndSelection()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.Matrix get_Transform()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode get_SmoothingMode()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint get_TextRenderingHint()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Region get_Clip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Clip(class [System.Drawing]System.Drawing.Region 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsClipEmpty()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Graphics get_Graphics()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Graphics(class [System.Drawing]System.Drawing.Graphics 'value')
		{
			ret
		}
		.property instance class [System.Drawing]System.Drawing.Region Clip()
		{
			.get instance class [System.Drawing]System.Drawing.Region 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_Clip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::set_Clip(class [System.Drawing]System.Drawing.Region)
		}
		.property instance class [System.Drawing]System.Drawing.Graphics Graphics()
		{
			.get instance class [System.Drawing]System.Drawing.Graphics 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_Graphics()
			.set instance void 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::set_Graphics(class [System.Drawing]System.Drawing.Graphics)
		}
		.property instance bool IsClipEmpty()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_IsClipEmpty()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode SmoothingMode()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_SmoothingMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint TextRenderingHint()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_TextRenderingHint()
			.set instance void 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.Matrix Transform()
		{
			.get instance class [System.Drawing]System.Drawing.Drawing2D.Matrix 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::get_Transform()
			.set instance void 'System.Web.UI.DataVisualization.Charting.GdiGraphics'::set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix)
		}
	}
	.class public sealed GradientStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' Center = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' DiagonalLeft = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' DiagonalRight = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' HorizontalCenter = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' LeftRight = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' TopBottom = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' VerticalCenter = int32(0x00000007)
	}
	.class public Grid
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis, bool major)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(class 'System.Web.UI.DataVisualization.Charting.Axis' axis, bool major)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' GetAxis()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Invalidate()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintCustom(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffset(float64 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeIntervalOffset()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetIntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeIntervalOffsetType()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' GetIntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Interval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Interval(float64 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeInterval()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetInterval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeIntervalType()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' GetIntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeEnabled()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_Axis()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.field static assembly literal float64 NumberOfDateTimeIntervals = float64(0x4010000000000000)
		.field static assembly literal float64 NumberOfIntervals = float64(0x4014000000000000)
		.field assembly valuetype [System.Drawing]System.Drawing.Color borderColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle
		.field assembly int32 borderWidth
		.field assembly bool enabled
		.field assembly bool enabledChanged
		.field assembly float64 interval
		.field assembly bool intervalChanged
		.field assembly float64 intervalOffset
		.field assembly bool intervalOffsetChanged
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType
		.field assembly bool intervalOffsetTypeChanged
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType
		.field assembly bool intervalTypeChanged
		.field assembly bool majorGridTick
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.Grid'::get_Axis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Grid'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_Enabled(bool)
		}
		.property instance float64 Interval()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Grid'::get_Interval()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_Interval(float64)
		}
		.property instance float64 IntervalOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance float64 'System.Web.UI.DataVisualization.Charting.Grid'::get_IntervalOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_IntervalOffset(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalOffsetType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.Grid'::get_IntervalOffsetType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.Grid'::get_IntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Grid'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Grid'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Grid'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Grid'::set_LineWidth(int32)
		}
	}
	.class public sealed GridTickTypes
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' All = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' Gridline = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GridTickTypes' TickMark = int32(0x00000001)
	}
	.class private sealed GroupingFunction
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Ave = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Center = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Count = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Deviation = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' DistinctCount = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' First = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' HiLo = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' HiLoOpCl = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Last = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Max = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Min = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Sum = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.GroupingFunction' Variance = int32(0x0000000C)
	}
	.class public HitTestResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Series' get_Series()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Series(class 'System.Web.UI.DataVisualization.Charting.Series' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PointIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointIndex(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' get_ChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChartArea(class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_Axis()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' get_ChartElementType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChartElementType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Object()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Object(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SubObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SubObject(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_Axis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' ChartArea()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_ChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_ChartArea(class 'System.Web.UI.DataVisualization.Charting.ChartArea')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' ChartElementType()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_ChartElementType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_ChartElementType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType')
		}
		.property instance object Object()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_Object()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_Object(object)
		}
		.property instance int32 PointIndex()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_PointIndex()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_PointIndex(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Series' Series()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Series' 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_Series()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_Series(class 'System.Web.UI.DataVisualization.Charting.Series')
		}
		.property instance object SubObject()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.HitTestResult'::get_SubObject()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HitTestResult'::set_SubObject(object)
		}
	}
	.class public HorizontalLineAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.LineAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void AdjustLineCoordinates(valuetype [System.Drawing]System.Drawing.PointF& point1, valuetype [System.Drawing]System.Drawing.PointF& point2, valuetype [System.Drawing]System.Drawing.RectangleF& selectionRect)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetContentPosition()
		{
			ret
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.HorizontalLineAnnotation'::get_AnnotationType()
		}
	}
	.class private HotRegion
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath get_Path()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Path(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_RelativeCoordinates()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_RelativeCoordinates(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.RectangleF get_BoundingRectangle()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_BoundingRectangle(valuetype [System.Drawing]System.Drawing.RectangleF 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance object get_SelectedObject()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SelectedObject(object 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance object get_SelectedSubObject()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SelectedSubObject(object 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance int32 get_PointIndex()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_PointIndex(int32 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_SeriesName()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SeriesName(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' get_Type()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Type(valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.RectangleF BoundingRectangle()
		{
			.get instance valuetype [System.Drawing]System.Drawing.RectangleF 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_BoundingRectangle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_BoundingRectangle(valuetype [System.Drawing]System.Drawing.RectangleF)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Path()
		{
			.get instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_Path()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_Path(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath)
		}
		.property instance int32 PointIndex()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_PointIndex()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_PointIndex(int32)
		}
		.property instance bool RelativeCoordinates()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_RelativeCoordinates()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_RelativeCoordinates(bool)
		}
		.property instance object SelectedObject()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_SelectedObject()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_SelectedObject(object)
		}
		.property instance object SelectedSubObject()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_SelectedSubObject()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_SelectedSubObject(object)
		}
		.property instance string SeriesName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_SeriesName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_SeriesName(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' Type()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'System.Web.UI.DataVisualization.Charting.HotRegion'::get_Type()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegion'::set_Type(valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType')
		}
	}
	.class private HotRegionsList
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' get_ProcessChartMode()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_ProcessChartMode(valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_List()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common)
		{
			ret
		}
		.method public hidebysig 
			instance void AddHotRegion(valuetype [System.Drawing]System.Drawing.RectangleF rectSize, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, string seriesName, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool relativePath, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, string seriesName, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(int32 insertIndex, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool relativePath, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, string seriesName, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool relativePath, float32[] coord, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, string seriesName, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(int32 insertIndex, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, float32 x, float32 y, float32 radius, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, string seriesName, int32 pointIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(valuetype [System.Drawing]System.Drawing.RectangleF rectArea, string toolTip, string hRef, string mapAreaAttributes, string postBackValue, object selectedObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', string series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(valuetype [System.Drawing]System.Drawing.RectangleF rectArea, string toolTip, string hRef, string mapAreaAttributes, string postBackValue, object selectedObject, object selectedSubObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', string series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool relativePath, string toolTip, string hRef, string mapAreaAttributes, string postBackValue, object selectedObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(valuetype [System.Drawing]System.Drawing.RectangleF rectArea, object selectedObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', bool relativeCoordinates)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(valuetype [System.Drawing]System.Drawing.RectangleF rectArea, object selectedObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', bool relativeCoordinates, bool insertAtBeginning)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddHotRegion(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool relativePath, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', object selectedObject)
		{
			ret
		}
		.method assembly hidebysig 
			instance int32 FindInsertIndex()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ArrayList List()
		{
			.get instance class [mscorlib]System.Collections.ArrayList 'System.Web.UI.DataVisualization.Charting.HotRegionsList'::get_List()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' ProcessChartMode()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' 'System.Web.UI.DataVisualization.Charting.HotRegionsList'::get_ProcessChartMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.HotRegionsList'::set_ProcessChartMode(valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode')
		}
	}
	.class private interface abstract IChartElement
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' get_Parent()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Invalidate()
		{
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Common()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' Parent()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.IChartElement' 'System.Web.UI.DataVisualization.Charting.IChartElement'::get_Parent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartElement'::set_Parent(class 'System.Web.UI.DataVisualization.Charting.IChartElement')
		}
	}
	.class public interface abstract IChartMapArea
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ToolTip(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ToolTip()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Url(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Url()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_MapAreaAttributes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Tag(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_Tag()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_PostBackValue()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_PostBackValue(string 'value')
		{
		}
		.property instance string MapAreaAttributes()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::set_MapAreaAttributes(string)
		}
		.property instance string PostBackValue()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::set_PostBackValue(string)
		}
		.property instance object Tag()
		{
			.get instance object 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::get_Tag()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::set_Tag(object)
		}
		.property instance string ToolTip()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartMapArea'::set_Url(string)
		}
	}
	.class private interface abstract IChartRenderingEngine
	{
		.method public virtual hidebysig newslot abstract 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF pt1, valuetype [System.Drawing]System.Drawing.PointF pt2)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawLine(class [System.Drawing]System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttr)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawCurve(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawPolygon(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF layoutRectangle, class [System.Drawing]System.Drawing.StringFormat format)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawString(string s, class [System.Drawing]System.Drawing.Font font, class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF point, class [System.Drawing]System.Drawing.StringFormat format)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype [System.Drawing]System.Drawing.GraphicsUnit srcUnit, class [System.Drawing]System.Drawing.Imaging.ImageAttributes imageAttrs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawRectangle(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawPath(class [System.Drawing]System.Drawing.Pen pen, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawPie(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawArc(class [System.Drawing]System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawImage(class [System.Drawing]System.Drawing.Image image, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawEllipse(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawLines(class [System.Drawing]System.Drawing.Pen pen, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillEllipse(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillPath(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillRegion(class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Region region)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillRectangle(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillPolygon(class [System.Drawing]System.Drawing.Brush brush, valuetype [System.Drawing]System.Drawing.PointF[] points)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FillPie(class [System.Drawing]System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.SizeF layoutArea, class [System.Drawing]System.Drawing.StringFormat stringFormat)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [System.Drawing]System.Drawing.SizeF MeasureString(string text, class [System.Drawing]System.Drawing.Font font)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsState Save()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Restore(class [System.Drawing]System.Drawing.Drawing2D.GraphicsState gstate)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetClip()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetClip(valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetClip(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, valuetype [System.Drawing]System.Drawing.Drawing2D.CombineMode combineMode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TranslateTransform(float32 dx, float32 dy)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void BeginSelection(string hRef, string title)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EndSelection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.Matrix get_Transform()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode get_SmoothingMode()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint get_TextRenderingHint()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Drawing]System.Drawing.Region get_Clip()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Clip(class [System.Drawing]System.Drawing.Region 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [System.Drawing]System.Drawing.Graphics get_Graphics()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Graphics(class [System.Drawing]System.Drawing.Graphics 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsClipEmpty()
		{
		}
		.property instance class [System.Drawing]System.Drawing.Region Clip()
		{
			.get instance class [System.Drawing]System.Drawing.Region 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_Clip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::set_Clip(class [System.Drawing]System.Drawing.Region)
		}
		.property instance class [System.Drawing]System.Drawing.Graphics Graphics()
		{
			.get instance class [System.Drawing]System.Drawing.Graphics 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_Graphics()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::set_Graphics(class [System.Drawing]System.Drawing.Graphics)
		}
		.property instance bool IsClipEmpty()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_IsClipEmpty()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode SmoothingMode()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_SmoothingMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::set_SmoothingMode(valuetype [System.Drawing]System.Drawing.Drawing2D.SmoothingMode)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint TextRenderingHint()
		{
			.get instance valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_TextRenderingHint()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::set_TextRenderingHint(valuetype [System.Drawing]System.Drawing.Text.TextRenderingHint)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.Matrix Transform()
		{
			.get instance class [System.Drawing]System.Drawing.Drawing2D.Matrix 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::get_Transform()
			.set instance void 'System.Web.UI.DataVisualization.Charting.IChartRenderingEngine'::set_Transform(class [System.Drawing]System.Drawing.Drawing2D.Matrix)
		}
	}
	.class public interface abstract IChartStorageHandler
	{
		.method public virtual hidebysig newslot abstract 
			instance void Save(string key, uint8[] data)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] Load(string key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Delete(string key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Exists(string key)
		{
		}
	}
	.class private interface abstract IDataPointCustomPropertiesProvider
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' get_DataPointCustomProperties()
		{
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' DataPointCustomProperties()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' 'System.Web.UI.DataVisualization.Charting.IDataPointCustomPropertiesProvider'::get_DataPointCustomProperties()
		}
	}
	.class public interface abstract IDataPointFilter
	{
		.method public virtual hidebysig newslot abstract 
			instance bool FilterDataPoint(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
		}
	}
	.class private interface abstract IDesignerMessageBoxDialog
	{
		.method public virtual hidebysig newslot abstract 
			instance bool ShowQuestion(string message)
		{
		}
	}
	.class private interface abstract INameController
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsUniqueName(string name)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsColectionEditing()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_IsColectionEditing(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DoSnapshot(bool save, class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> changingCallback, class [mscorlib]'System.EventHandler`1'<class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'> changedCallback)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Collections.IList get_Snapshot()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnNameReferenceChanged(class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnNameReferenceChanging(class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
		}
		.property instance bool IsColectionEditing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.INameController'::get_IsColectionEditing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.INameController'::set_IsColectionEditing(bool)
		}
		.property instance class [mscorlib]System.Collections.IList Snapshot()
		{
			.get instance class [mscorlib]System.Collections.IList 'System.Web.UI.DataVisualization.Charting.INameController'::get_Snapshot()
		}
	}
	.class public ImageAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Image()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Image(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_ImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetContentPosition()
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('MiddleCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string Image()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_Image()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_Image(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_ImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' ImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 04 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_ImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_ImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_LineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_SelectionPointsStyle()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ImageAnnotation'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
	}
	.class private sealed ImageOwnerKeyType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' AnonymousID = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' Auto = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' SessionID = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageOwnerKeyType' UserID = int32(0x00000002)
	}
	.class public sealed ImageStorageMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' UseHttpHandler = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ImageStorageMode' UseImageLocation = int32(0x00000001)
	}
	.class private IntNanValueConverter
		extends [System]System.ComponentModel.Int32Converter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed IntervalAutoMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' FixedCount = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalAutoMode' VariableCount = int32(0x00000001)
	}
	.class public sealed IntervalType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Days = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Hours = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Milliseconds = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Minutes = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Months = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Number = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Seconds = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Weeks = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.IntervalType' Years = int32(0x00000001)
	}
	.class public sealed LabelAlignmentStyles
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' Bottom = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' BottomLeft = int32(0x00000040)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' BottomRight = int32(0x00000080)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' Center = int32(0x00000100)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' Left = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' Right = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' Top = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' TopLeft = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' TopRight = int32(0x00000020)
	}
	.class public sealed LabelAutoFitStyles
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' DecreaseFont = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' IncreaseFont = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' LabelsAngleStep30 = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' LabelsAngleStep45 = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' LabelsAngleStep90 = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' StaggeredLabels = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles' WordWrap = int32(0x00000040)
	}
	.class public sealed LabelCalloutStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' Box = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' Underlined = int32(0x00000001)
	}
	.class public sealed LabelMarkStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' Box = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' LineSideMark = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelMarkStyle' SideMark = int32(0x00000001)
	}
	.class public sealed LabelOutsidePlotAreaStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' No = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' Partial = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' Yes = int32(0x00000000)
	}
	.class public LabelStyle
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintCircular(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.RectangleF GetLabelPosition(valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool backElements)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint3D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool backElements)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Invalidate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffset(float64 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetIntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' GetIntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Interval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Interval(float64 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetInterval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' GetIntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Angle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Angle(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsStaggered()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsStaggered(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEndLabelVisible()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEndLabelVisible(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TruncatedLabels()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TruncatedLabels(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Format()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Format(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly int32 angle
		.field assembly float64 interval
		.field assembly float64 intervalOffset
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalType
		.field assembly bool isStaggered
		.property instance int32 Angle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_Angle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Angle(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Axis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Enabled(bool)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string Format()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_Format()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Format(string)
		}
		.property instance float64 Interval()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_Interval()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_Interval(float64)
		}
		.property instance float64 IntervalOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 F8 FF 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_IntervalOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_IntervalOffset(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalOffsetType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 0A 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_IntervalOffsetType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 0A 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_IntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance bool IsEndLabelVisible()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_IsEndLabelVisible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_IsEndLabelVisible(bool)
		}
		.property instance bool IsStaggered()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_IsStaggered()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_IsStaggered(bool)
		}
		.property instance bool TruncatedLabels()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LabelStyle'::get_TruncatedLabels()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LabelStyle'::set_TruncatedLabels(bool)
		}
	}
	.class public Legend
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CalcLegendPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, valuetype [System.Drawing]System.Drawing.RectangleF& chartAreasRectangle, float32 elementSpacing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SelectLegendBackground()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DockedToChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DockedToChartArea(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDockedInsideChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDockedInsideChartArea(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEquallySpacedItems()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEquallySpacedItems(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsTextAutoFit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsTextAutoFit(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' get_LegendStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_AutoFitMinFontSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoFitMinFontSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_MaximumAutoSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumAutoSize(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection' get_CellColumns()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' get_TableStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TableStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' get_HeaderSeparator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HeaderSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_HeaderSeparatorColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HeaderSeparatorColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' get_ItemColumnSeparator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemColumnSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ItemColumnSeparatorColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemColumnSeparatorColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ItemColumnSpacing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ItemColumnSpacing(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_Alignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' get_Docking()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Docking(valuetype 'System.Web.UI.DataVisualization.Charting.Docking' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_InsideChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InsideChartArea(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' get_CustomItems()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_TextWrapThreshold()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextWrapThreshold(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' get_LegendItemOrder()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LegendItemOrder(valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_InterlacedRows()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InterlacedRows(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_InterlacedRowsColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InterlacedRowsColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_TitleForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_TitleBackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleBackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_TitleFont()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleFont(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_TitleAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' get_TitleSeparator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_TitleSeparatorColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TitleSeparatorColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Size GetSeparatorSize(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' separatorType)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsEnabled()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Invalidate(bool invalidateLegendOnly)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class [System.Drawing]System.Drawing.Font autofitFont
		.field assembly class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' legendItems
		.field assembly valuetype [System.Drawing]System.Drawing.Size singleWCharacterSize
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 71 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2E 53 74 72 69 6E 67 41 6C 69 67 6E 6D 65 6E 74 2C 20 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 00 00 00 00)
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.Legend'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Alignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance int32 AutoFitMinFontSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(7) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Legend'::get_AutoFitMinFontSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_AutoFitMinFontSize(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Legend'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_BorderWidth(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection' CellColumns()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection' 'System.Web.UI.DataVisualization.Charting.Legend'::get_CellColumns()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' CustomItems()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendItemsCollection' 'System.Web.UI.DataVisualization.Charting.Legend'::get_CustomItems()
		}
		.property instance string DockedToChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Legend'::get_DockedToChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_DockedToChartArea(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Docking()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 30 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 6F 63 6B 69 6E 67 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' 'System.Web.UI.DataVisualization.Charting.Legend'::get_Docking()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Docking(valuetype 'System.Web.UI.DataVisualization.Charting.Docking')
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Legend'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Enabled(bool)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.Legend'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' HeaderSeparator()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle) string('None') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_HeaderSeparator()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_HeaderSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color HeaderSeparatorColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_HeaderSeparatorColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_HeaderSeparatorColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string InsideChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Legend'::get_InsideChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_InsideChartArea(string)
		}
		.property instance bool InterlacedRows()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Legend'::get_InterlacedRows()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_InterlacedRows(bool)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color InterlacedRowsColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_InterlacedRowsColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_InterlacedRowsColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance bool IsDockedInsideChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Legend'::get_IsDockedInsideChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_IsDockedInsideChartArea(bool)
		}
		.property instance bool IsEquallySpacedItems()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Legend'::get_IsEquallySpacedItems()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_IsEquallySpacedItems(bool)
		}
		.property instance bool IsTextAutoFit()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Legend'::get_IsTextAutoFit()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_IsTextAutoFit(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' ItemColumnSeparator()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle) string('None') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_ItemColumnSeparator()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ItemColumnSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ItemColumnSeparatorColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_ItemColumnSeparatorColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ItemColumnSeparatorColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ItemColumnSpacing()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(50) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Legend'::get_ItemColumnSpacing()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ItemColumnSpacing(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' LegendItemOrder()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 65 67 65 6E 64 49 74 65 6D 4F 72 64 65 72 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' 'System.Web.UI.DataVisualization.Charting.Legend'::get_LegendItemOrder()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_LegendItemOrder(valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' LegendStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 34 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 65 67 65 6E 64 53 74 79 6C 65 02 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_LegendStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_LegendStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle')
		}
		.property instance float32 MaximumAutoSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 48 42 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Legend'::get_MaximumAutoSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_MaximumAutoSize(float32)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Legend'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Name(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' Position()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'System.Web.UI.DataVisualization.Charting.Legend'::get_Position()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128, 0, 0, 0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Legend'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_ShadowOffset(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' TableStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 39 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 65 67 65 6E 64 54 61 62 6C 65 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_TableStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TableStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle')
		}
		.property instance int32 TextWrapThreshold()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(25) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Legend'::get_TextWrapThreshold()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TextWrapThreshold(int32)
		}
		.property instance string Title()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Legend'::get_Title()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_Title(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment TitleAlignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.StringAlignment) string('Center') }
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color TitleBackColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleBackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleBackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class [System.Drawing]System.Drawing.Font TitleFont()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt, style=Bold') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleFont()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleFont(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color TitleForeColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' TitleSeparator()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle) string('None') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleSeparator()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleSeparator(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color TitleSeparatorColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Legend'::get_TitleSeparatorColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Legend'::set_TitleSeparatorColor(valuetype [System.Drawing]System.Drawing.Color)
		}
	}
	.class private LegendAreaNameConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public LegendCell
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' cellType, string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' cellType, string text, valuetype [System.Drawing]System.Drawing.ContentAlignment 'alignment')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' get_CellType()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CellType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Legend' get_Legend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendItem' get_LegendItem()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Text()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Image()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Image(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ImageTransparentColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Size get_ImageSize()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ImageSize(valuetype [System.Drawing]System.Drawing.Size 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Size get_SeriesSymbolSize()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_SeriesSymbolSize(valuetype [System.Drawing]System.Drawing.Size 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_CellSpan()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CellSpan(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Margins' get_Margins()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Margins(class 'System.Web.UI.DataVisualization.Charting.Margins' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeMargins()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetCache()
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetCellPosition(int32 rowIndex, valuetype [System.Drawing]System.Drawing.Rectangle position, valuetype [System.Drawing]System.Drawing.Size singleWCharacterSize)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Size MeasureCell(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, int32 fontSizeReducedBy, class [System.Drawing]System.Drawing.Font legendAutoFont, valuetype [System.Drawing]System.Drawing.Size singleWCharacterSize)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, int32 fontSizeReducedBy, class [System.Drawing]System.Drawing.Font legendAutoFont, valuetype [System.Drawing]System.Drawing.Size singleWCharacterSize)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly valuetype [System.Drawing]System.Drawing.Rectangle cellPosition
		.field assembly valuetype [System.Drawing]System.Drawing.Rectangle cellPositionWithMargins
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 72 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2E 43 6F 6E 74 65 6E 74 41 6C 69 67 6E 6D 65 6E 74 2C 20 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 20 00 00 00 00 00)
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 CellSpan()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_CellSpan()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_CellSpan(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' CellType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 65 67 65 6E 64 43 65 6C 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_CellType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_CellType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType')
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string Image()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Image()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Image(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Size ImageSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Size) string('0, 0') }
			.get instance valuetype [System.Drawing]System.Drawing.Size 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_ImageSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_ImageSize(valuetype [System.Drawing]System.Drawing.Size)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_ImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_ImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Legend' Legend()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Legend' 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Legend()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendItem' LegendItem()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendItem' 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_LegendItem()
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_MapAreaAttributes(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Margins' Margins()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.Margins) string('0,0,15,15') }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Margins' 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Margins()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Margins(class 'System.Web.UI.DataVisualization.Charting.Margins')
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_PostBackValue(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Size SeriesSymbolSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Size) string('200, 70') }
			.get instance valuetype [System.Drawing]System.Drawing.Size 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_SeriesSymbolSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_SeriesSymbolSize(valuetype [System.Drawing]System.Drawing.Size)
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Text(string)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCell'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCell'::set_Url(string)
		}
	}
	.class public LegendCellCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.LegendCell'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.LegendItem' parent)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' cellType, string text, valuetype [System.Drawing]System.Drawing.ContentAlignment 'alignment')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' cellType, string text, valuetype [System.Drawing]System.Drawing.ContentAlignment 'alignment')
		{
			ret
		}
	}
	.class public LegendCellColumn
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string headerText, valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' columnType, string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string headerText, valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' columnType, string text, valuetype [System.Drawing]System.Drawing.ContentAlignment 'alignment')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Legend' get_Legend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' get_ColumnType()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ColumnType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Text()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Size get_SeriesSymbolSize()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_SeriesSymbolSize(valuetype [System.Drawing]System.Drawing.Size 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Margins' get_Margins()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Margins(class 'System.Web.UI.DataVisualization.Charting.Margins' 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool ShouldSerializeMargins()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_HeaderText()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_HeaderText(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_HeaderForeColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_HeaderForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_HeaderBackColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_HeaderBackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Font get_HeaderFont()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_HeaderFont(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_HeaderAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HeaderAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_MinimumWidth()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MinimumWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_MaximumWidth()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MaximumWidth(int32 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendCell' CreateNewCell()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 72 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2E 43 6F 6E 74 65 6E 74 41 6C 69 67 6E 6D 65 6E 74 2C 20 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 20 00 00 00 00 00)
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' ColumnType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 65 67 65 6E 64 43 65 6C 6C 43 6F 6C 75 6D 6E 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_ColumnType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_ColumnType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType')
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment HeaderAlignment()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.StringAlignment) string('Center') }
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_HeaderAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_HeaderAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color HeaderBackColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_HeaderBackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_HeaderBackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class [System.Drawing]System.Drawing.Font HeaderFont()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt, style=Bold') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_HeaderFont()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_HeaderFont(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color HeaderForeColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_HeaderForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_HeaderForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string HeaderText()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_HeaderText()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_HeaderText(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Legend' Legend()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Legend' 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Legend()
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_MapAreaAttributes(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Margins' Margins()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.Margins) string('0,0,15,15') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Margins' 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Margins()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Margins(class 'System.Web.UI.DataVisualization.Charting.Margins')
		}
		.property instance int32 MaximumWidth()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(-1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_MaximumWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_MaximumWidth(int32)
		}
		.property instance int32 MinimumWidth()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(-1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_MinimumWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_MinimumWidth(int32)
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_PostBackValue(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Size SeriesSymbolSize()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Size) string('200, 70') }
			.get instance valuetype [System.Drawing]System.Drawing.Size 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_SeriesSymbolSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_SeriesSymbolSize(valuetype [System.Drawing]System.Drawing.Size)
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('#LEGENDTEXT') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Text(string)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'::set_Url(string)
		}
	}
	.class public LegendCellColumnCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.LegendCellColumn'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Legend' legend)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
	}
	.class public sealed LegendCellColumnType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' SeriesSymbol = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellColumnType' Text = int32(0x00000000)
	}
	.class public sealed LegendCellType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' Image = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' SeriesSymbol = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendCellType' Text = int32(0x00000000)
	}
	.class public LegendCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Legend'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartPicture' chartPicture)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_DefaultNameReference()
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Legend' Add(string name)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CalcLegendPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, valuetype [System.Drawing]System.Drawing.RectangleF& chartAreasRectangle, float32 elementSpacing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CalcOutsideLegendPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, valuetype [System.Drawing]System.Drawing.RectangleF& chartAreasRectangle, float32 elementSpacing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CalcInsideLegendPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, float32 elementSpacing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChartAreaNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
		.property instance string DefaultNameReference()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendCollection'::get_DefaultNameReference()
		}
	}
	.class private LegendConverter
		extends 'System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter'
	{
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed LegendImageStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' Line = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' Marker = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' Rectangle = int32(0x00000000)
	}
	.class public LegendItem
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, valuetype [System.Drawing]System.Drawing.Color color, string image)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Legend' get_Legend()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_Color()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Color(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Image()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Image(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' get_ImageStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ImageStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MarkerBorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerBorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' get_MarkerStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerStyle(valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MarkerSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MarkerImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_MarkerBorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerBorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SeriesName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SeriesName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SeriesPointIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SeriesPointIndex(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' get_SeparatorType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SeparatorType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_SeparatorColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SeparatorColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.LegendCellCollection' get_Cells()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddAutomaticCells(class 'System.Web.UI.DataVisualization.Charting.Legend' legend)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAttributes(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SetAttributes(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' properties, bool area3D)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign
		.field assembly valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode
		.field assembly valuetype [System.Drawing]System.Drawing.Color backSecondaryColor
		.field assembly valuetype [System.Drawing]System.Drawing.Color borderColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle
		.field assembly int32 borderWidth
		.field assembly bool clearTempCells
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerBorderColor
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerColor
		.field assembly string markerImage
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor
		.field assembly int32 markerSize
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle
		.field assembly valuetype [System.Drawing]System.Drawing.Color shadowColor
		.field assembly int32 shadowOffset
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' style
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_BorderWidth(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.LegendCellCollection' Cells()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.LegendCellCollection' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Cells()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color Color()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Color()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_Color(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_Enabled(bool)
		}
		.property instance string Image()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Image()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_Image(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' ImageStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LegendImageStyle) string('Rectangle') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_ImageStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_ImageStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Legend' Legend()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.Legend' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Legend()
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MapAreaAttributes(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerBorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerBorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerBorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 MarkerBorderWidth()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerBorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerBorderWidth(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance string MarkerImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerImage(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color MarkerImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 MarkerSize()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(5) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerSize()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerSize(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' MarkerStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 34 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4D 61 72 6B 65 72 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_MarkerStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_MarkerStyle(valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle')
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_PostBackValue(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color SeparatorColor()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_SeparatorColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_SeparatorColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' SeparatorType()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle) string('None') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_SeparatorType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_SeparatorType(valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle')
		}
		.property instance string SeriesName()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_SeriesName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_SeriesName(string)
		}
		.property instance int32 SeriesPointIndex()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(-1) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_SeriesPointIndex()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_SeriesPointIndex(int32)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128,0,0,0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_ShadowOffset(int32)
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LegendItem'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LegendItem'::set_Url(string)
		}
	}
	.class public sealed LegendItemOrder
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' ReversedSeriesOrder = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendItemOrder' SameAsSeriesOrder = int32(0x00000001)
	}
	.class public LegendItemsCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.LegendItem'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Legend' legend)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(valuetype [System.Drawing]System.Drawing.Color color, string text)
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, valuetype [System.Drawing]System.Drawing.Color color, string text)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(string image, string text)
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, string image, string text)
		{
			ret
		}
		.method public hidebysig 
			instance void Reverse()
		{
			ret
		}
	}
	.class public sealed LegendSeparatorStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' DashLine = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' DotLine = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' DoubleLine = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' GradientLine = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' Line = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' ThickGradientLine = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle' ThickLine = int32(0x00000002)
	}
	.class public sealed LegendStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' Column = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' Row = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendStyle' Table = int32(0x00000002)
	}
	.class public sealed LegendTableStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' Tall = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LegendTableStyle' Wide = int32(0x00000001)
	}
	.class public sealed LightStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' Realistic = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' Simplistic = int32(0x00000001)
	}
	.class public sealed LineAnchorCapStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' Arrow = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' Diamond = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' Round = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' Square = int32(0x00000003)
	}
	.class public LineAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsInfinitive()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsInfinitive(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_StartCap()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_EndCap()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsSizeAlwaysRelative()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_IsSizeAlwaysRelative(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_AnchorAlignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AdjustLineCoordinates(valuetype [System.Drawing]System.Drawing.PointF& point1, valuetype [System.Drawing]System.Drawing.PointF& point2, valuetype [System.Drawing]System.Drawing.RectangleF& selectionRect)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('MiddleCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment AnchorAlignment()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('TopLeft') }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_AnchorAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_AnchorAlignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' EndCap()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_EndCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance bool IsInfinitive()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_IsInfinitive()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_IsInfinitive(bool)
		}
		.property instance bool IsSizeAlwaysRelative()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_IsSizeAlwaysRelative()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_IsSizeAlwaysRelative(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_SelectionPointsStyle()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' StartCap()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_StartCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.LineAnnotation'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
	}
	.class private sealed LineSegmentType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' First = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' Last = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' Middle = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' Single = int32(0x00000000)
	}
	.class public MapArea
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string url, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string url, valuetype [System.Drawing]System.Drawing.RectangleF rect)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' shape, string url, float32[] coordinates)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string toolTip, string url, string attributes, string postBackValue, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, object tag)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string toolTip, string url, string attributes, string postBackValue, valuetype [System.Drawing]System.Drawing.RectangleF rect, object tag)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' shape, string toolTip, string url, string attributes, string postBackValue, float32[] coordinates, object tag)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RenderTag(class [System.Web]'System.Web.UI.HtmlTextWriter' writer, class 'System.Web.UI.DataVisualization.Charting.Chart' chart)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCustom()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsCustom(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32[] get_Coordinates()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Coordinates(float32[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' get_Shape()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Shape(valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.property instance float32[] Coordinates()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance float32[] 'System.Web.UI.DataVisualization.Charting.MapArea'::get_Coordinates()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_Coordinates(float32[])
		}
		.property instance bool IsCustom()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.MapArea'::get_IsCustom()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_IsCustom(bool)
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.MapArea'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_MapAreaAttributes(string)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('Map Area') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.MapArea'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_Name(string)
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.MapArea'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_PostBackValue(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' Shape()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.MapAreaShape) string('Rectangle') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' 'System.Web.UI.DataVisualization.Charting.MapArea'::get_Shape()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_Shape(valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape')
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.MapArea'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.MapArea'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.MapArea'::set_Url(string)
		}
	}
	.class private MapAreaCoordinatesConverter
		extends [System]System.ComponentModel.ArrayConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed MapAreaShape
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' Circle = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' Polygon = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MapAreaShape' Rectangle = int32(0x00000000)
	}
	.class public MapAreasCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.MapArea'>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void InsertPath(int32 index, string toolTip, string url, string attributes, string postBackValue, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath path, bool absCoordinates, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph)
		{
			ret
		}
		.method assembly hidebysig 
			instance void RemoveNonCustom()
		{
			ret
		}
	}
	.class private MarginExpandableObjectConverter
		extends [System]System.ComponentModel.ExpandableObjectConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Margins
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 top, int32 bottom, int32 left, int32 right)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Top()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Top(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Bottom()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Bottom(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Left()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Left(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Right()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Right(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig 
			instance bool IsEmpty()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF ToRectangleF()
		{
			ret
		}
		.property instance int32 Bottom()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Margins'::get_Bottom()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Margins'::set_Bottom(int32)
		}
		.property instance int32 Left()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Margins'::get_Left()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Margins'::set_Left(int32)
		}
		.property instance int32 Right()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Margins'::get_Right()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Margins'::set_Right(int32)
		}
		.property instance int32 Top()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Margins'::get_Top()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Margins'::set_Top(int32)
		}
	}
	.class public sealed MarkerStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Circle = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Cross = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Diamond = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Square = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Star10 = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Star4 = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Star5 = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Star6 = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' Triangle = int32(0x00000004)
	}
	.class private Matrix3D
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance float32 get_AngleX()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance float32 get_AngleY()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance float32 get_Perspective()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance bool IsInitialized()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Initialize(valuetype [System.Drawing]System.Drawing.RectangleF innerPlotRectangle, float32 depth, float32 angleX, float32 angleY, float32 perspective, bool rightAngleAxis)
		{
			ret
		}
		.method public hidebysig 
			instance void TransformPoints(class 'System.Web.UI.DataVisualization.Charting.Point3D'[] points)
		{
			ret
		}
		.method assembly hidebysig 
			instance void InitLight(valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle)
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetLight(valuetype [System.Drawing]System.Drawing.Color surfaceColor, [out] valuetype [System.Drawing]System.Drawing.Color& front, [out] valuetype [System.Drawing]System.Drawing.Color& back, [out] valuetype [System.Drawing]System.Drawing.Color& left, [out] valuetype [System.Drawing]System.Drawing.Color& right, [out] valuetype [System.Drawing]System.Drawing.Color& top, [out] valuetype [System.Drawing]System.Drawing.Color& bottom)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.Color GetPolygonLight(class 'System.Web.UI.DataVisualization.Charting.Point3D'[] points, valuetype [System.Drawing]System.Drawing.Color surfaceColor, bool visiblePolygon, float32 rotation, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' surfaceName, bool switchSeriesOrder)
		{
			ret
		}
		.field assembly float32 _perspective
		.property instance float32 AngleX()
		{
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Matrix3D'::get_AngleX()
		}
		.property instance float32 AngleY()
		{
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Matrix3D'::get_AngleY()
		}
		.property instance float32 Perspective()
		{
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Matrix3D'::get_Perspective()
		}
	}
	.class private NameReferenceChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' get_OldElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_OldName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_NewName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' oldElement, class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' newElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' oldElement, string oldName, string newName)
		{
			ret
		}
		.property instance string NewName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'::get_NewName()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' OldElement()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartNamedElement' 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'::get_OldElement()
		}
		.property instance string OldName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs'::get_OldName()
		}
	}
	.class public NamedImage
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [System.Drawing]System.Drawing.Image image)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Image get_Image()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Image(class [System.Drawing]System.Drawing.Image 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.property instance class [System.Drawing]System.Drawing.Image Image()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.get instance class [System.Drawing]System.Drawing.Image 'System.Web.UI.DataVisualization.Charting.NamedImage'::get_Image()
			.set instance void 'System.Web.UI.DataVisualization.Charting.NamedImage'::set_Image(class [System.Drawing]System.Drawing.Image)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.NamedImage'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.NamedImage'::set_Name(string)
		}
	}
	.class public NamedImagesCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.NamedImage'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private NoNameExpandableObjectConverter
		extends [System]System.ComponentModel.ExpandableObjectConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private sealed PieDrawingStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PieDrawingStyle' Concave = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PieDrawingStyle' Default = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PieDrawingStyle' SoftEdge = int32(0x00000001)
	}
	.class private sealed PiePoints
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' Bottom0 = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' Bottom180 = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' BottomCenter = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' BottomEnd = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' BottomRectBottomRightPoint = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' BottomRectTopLeftPoint = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' BottomStart = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottom0 = int32(0x00000014)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottom180 = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottomEnd = int32(0x00000018)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottomRectBottomRightPoint = int32(0x0000001C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottomRectTopLeftPoint = int32(0x0000001B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutBottomStart = int32(0x00000017)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTop0 = int32(0x00000013)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTop180 = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTopEnd = int32(0x00000016)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTopRectBottomRightPoint = int32(0x0000001A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTopRectTopLeftPoint = int32(0x00000019)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' DoughnutTopStart = int32(0x00000015)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' Top0 = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' Top180 = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopCenter = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopEnd = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopLabelCenter = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopLabelLine = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopLabelLineout = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopRectBottomRightPoint = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopRectTopLeftPoint = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PiePoints' TopStart = int32(0x00000004)
	}
	.class public Point3D
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance float32 get_X()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_X(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Y()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Y(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Z()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Z(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.PointF get_PointF()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PointF(valuetype [System.Drawing]System.Drawing.PointF 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 x, float32 y, float32 z)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [System.Drawing]System.Drawing.PointF PointF()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance valuetype [System.Drawing]System.Drawing.PointF 'System.Web.UI.DataVisualization.Charting.Point3D'::get_PointF()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Point3D'::set_PointF(valuetype [System.Drawing]System.Drawing.PointF)
		}
		.property instance float32 X()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Point3D'::get_X()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Point3D'::set_X(float32)
		}
		.property instance float32 Y()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Point3D'::get_Y()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Point3D'::set_Y(float32)
		}
		.property instance float32 Z()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance float32 'System.Web.UI.DataVisualization.Charting.Point3D'::get_Z()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Point3D'::set_Z(float32)
		}
	}
	.class public sealed PointSortOrder
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' Ascending = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' Descending = int32(0x00000001)
	}
	.class public PolygonAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_StartCap()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_EndCap()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' EndCap()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_EndCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_SelectionPointsStyle()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' StartCap()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::get_StartCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolygonAnnotation'::set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
	}
	.class public PolylineAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_StartCap()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_EndCap()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsFreeDrawPlacement()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsFreeDrawPlacement(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath get_GraphicsPath()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_GraphicsPath(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection' get_GraphicsPathPoints()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void AdjustLocationSize(valuetype [System.Drawing]System.Drawing.SizeF movingDistance, valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' resizeMode, bool pixelCoord, bool userInput)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly bool isFreeDrawPlacement
		.field assembly bool isPolygon
		.field assembly bool pathChanged
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.ContentAlignment) string('MiddleCenter') }
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' EndCap()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_EndCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_EndCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath GraphicsPath()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string(nullref) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_GraphicsPath()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_GraphicsPath(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection' GraphicsPathPoints()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.AnnotationPathPointCollection' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_GraphicsPathPoints()
		}
		.property instance bool IsFreeDrawPlacement()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_IsFreeDrawPlacement()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_IsFreeDrawPlacement(bool)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_SelectionPointsStyle()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' StartCap()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_StartCap()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_StartCap(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.PolylineAnnotation'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
	}
	.class private sealed ProcessMode
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' HotRegions = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' ImageMaps = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ProcessMode' Paint = int32(0x00000001)
	}
	.class public RectangleAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.TextAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.field assembly bool isRectVisible
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::set_LineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.RectangleAnnotation'::get_SelectionPointsStyle()
		}
	}
	.class public sealed RenderType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' BinaryStreaming = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' ImageMap = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RenderType' ImageTag = int32(0x00000000)
	}
	.class private sealed RenderingType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RenderingType' Gdi = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RenderingType' Svg = int32(0x00000001)
	}
	.class private sealed ResizingMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' AnchorHandle = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' BottomHandle = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' BottomLeftHandle = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' BottomRightHandle = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' LeftHandle = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' Moving = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' MovingPathPoints = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' None = int32(0x00000040)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' RightHandle = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' TopHandle = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' TopLeftHandle = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ResizingMode' TopRightHandle = int32(0x00000002)
	}
	.class public sealed RightToLeft
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' Inherit = int32(0x00000000)
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' No = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.RightToLeft' Yes = int32(0x00000001)
	}
	.class private RingItem
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(int32 index)
		{
			ret
		}
		.field assembly valuetype [mscorlib]System.DateTime Created
		.field assembly bool InUse
		.field assembly int32 Index
		.field assembly string SessionID
	}
	.class private RingTimeTracker
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.TimeSpan itemLifeTime, string keyFormat, bool recordSessionID)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsExpired(class 'System.Web.UI.DataVisualization.Charting.RingItem' item, valuetype [mscorlib]System.DateTime now)
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetNextKey()
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetCurrentKey()
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetKey(class 'System.Web.UI.DataVisualization.Charting.RingItem' ringItem)
		{
			ret
		}
		.method public hidebysig 
			instance void ForEach(bool onlyExpired, class [mscorlib]'System.Action`1'<class 'System.Web.UI.DataVisualization.Charting.RingItem'> action)
		{
			ret
		}
	}
	.class private abstract sealed RingTimeTrackerFactory
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.RingTimeTracker' GetRingTracker(string keyFormat)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]System.Collections.IList OpenedRingTimeTrackers()
		{
			ret
		}
	}
	.class private SR
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		.class nested public Keys
			extends [mscorlib]System.Object
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			.method public static hidebysig specialname 
				class [mscorlib]System.Globalization.CultureInfo get_Culture()
			{
				ret
			}
			.method public static hidebysig specialname 
				void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
			{
				ret
			}
			.method public static hidebysig 
				string GetString(string key)
			{
				ret
			}
			.method public static hidebysig 
				string GetString(string key, object arg0)
			{
				ret
			}
			.method public static hidebysig 
				string GetString(string key, object arg0, object arg1)
			{
				ret
			}
			.method public static hidebysig 
				string GetString(string key, object arg0, object arg1, object arg2)
			{
				ret
			}
			.field static public literal string AccessibilityAnnotationName = "AccessibilityAnnotationName"
			.field static public literal string AccessibilityChartAreaName = "AccessibilityChartAreaName"
			.field static public literal string AccessibilityChartAxisMajorGridlinesName = "AccessibilityChartAxisMajorGridlinesName"
			.field static public literal string AccessibilityChartAxisMinorGridlinesName = "AccessibilityChartAxisMinorGridlinesName"
			.field static public literal string AccessibilityChartAxisTitleName = "AccessibilityChartAxisTitleName"
			.field static public literal string AccessibilityDataPointLabelName = "AccessibilityDataPointLabelName"
			.field static public literal string AccessibilityDataPointName = "AccessibilityDataPointName"
			.field static public literal string AccessibilityLegendName = "AccessibilityLegendName"
			.field static public literal string AccessibilityLegendTitleName = "AccessibilityLegendTitleName"
			.field static public literal string AccessibilitySeriesName = "AccessibilitySeriesName"
			.field static public literal string AccessibilityTitleName = "AccessibilityTitleName"
			.field static public literal string ActionListSeriesChartType = "ActionListSeriesChartType"
			.field static public literal string ActionListSeriesDataGroup = "ActionListSeriesDataGroup"
			.field static public literal string ActionListSeriesXValueMember = "ActionListSeriesXValueMember"
			.field static public literal string ActionListSeriesYValueMembers = "ActionListSeriesYValueMembers"
			.field static public literal string CategoryAttribute3D = "CategoryAttribute3D"
			.field static public literal string CategoryAttributeAccessibility = "CategoryAttributeAccessibility"
			.field static public literal string CategoryAttributeAction = "CategoryAttributeAction"
			.field static public literal string CategoryAttributeAlignment = "CategoryAttributeAlignment"
			.field static public literal string CategoryAttributeAnchor = "CategoryAttributeAnchor"
			.field static public literal string CategoryAttributeAnchorAxes = "CategoryAttributeAnchorAxes"
			.field static public literal string CategoryAttributeAnnotation = "CategoryAttributeAnnotation"
			.field static public literal string CategoryAttributeAnnotations = "CategoryAttributeAnnotations"
			.field static public literal string CategoryAttributeAppearance = "CategoryAttributeAppearance"
			.field static public literal string CategoryAttributeAxes = "CategoryAttributeAxes"
			.field static public literal string CategoryAttributeAxis = "CategoryAttributeAxis"
			.field static public literal string CategoryAttributeAxisView = "CategoryAttributeAxisView"
			.field static public literal string CategoryAttributeBehavior = "CategoryAttributeBehavior"
			.field static public literal string CategoryAttributeCellColumns = "CategoryAttributeCellColumns"
			.field static public literal string CategoryAttributeChart = "CategoryAttributeChart"
			.field static public literal string CategoryAttributeCharttitle = "CategoryAttributeCharttitle"
			.field static public literal string CategoryAttributeCursor = "CategoryAttributeCursor"
			.field static public literal string CategoryAttributeData = "CategoryAttributeData"
			.field static public literal string CategoryAttributeDataSource = "CategoryAttributeDataSource"
			.field static public literal string CategoryAttributeDataView = "CategoryAttributeDataView"
			.field static public literal string CategoryAttributeDocking = "CategoryAttributeDocking"
			.field static public literal string CategoryAttributeEditing = "CategoryAttributeEditing"
			.field static public literal string CategoryAttributeEmptyPoints = "CategoryAttributeEmptyPoints"
			.field static public literal string CategoryAttributeGridTickMarks = "CategoryAttributeGridTickMarks"
			.field static public literal string CategoryAttributeHeader = "CategoryAttributeHeader"
			.field static public literal string CategoryAttributeImage = "CategoryAttributeImage"
			.field static public literal string CategoryAttributeInterval = "CategoryAttributeInterval"
			.field static public literal string CategoryAttributeLabel = "CategoryAttributeLabel"
			.field static public literal string CategoryAttributeLabelAppearance = "CategoryAttributeLabelAppearance"
			.field static public literal string CategoryAttributeLabels = "CategoryAttributeLabels"
			.field static public literal string CategoryAttributeLayout = "CategoryAttributeLayout"
			.field static public literal string CategoryAttributeLegend = "CategoryAttributeLegend"
			.field static public literal string CategoryAttributeLocation = "CategoryAttributeLocation"
			.field static public literal string CategoryAttributeMap = "CategoryAttributeMap"
			.field static public literal string CategoryAttributeMapArea = "CategoryAttributeMapArea"
			.field static public literal string CategoryAttributeMarker = "CategoryAttributeMarker"
			.field static public literal string CategoryAttributeMisc = "CategoryAttributeMisc"
			.field static public literal string CategoryAttributePosition = "CategoryAttributePosition"
			.field static public literal string CategoryAttributeScale = "CategoryAttributeScale"
			.field static public literal string CategoryAttributeSerializer = "CategoryAttributeSerializer"
			.field static public literal string CategoryAttributeSeriesItems = "CategoryAttributeSeriesItems"
			.field static public literal string CategoryAttributeShape = "CategoryAttributeShape"
			.field static public literal string CategoryAttributeSize = "CategoryAttributeSize"
			.field static public literal string CategoryAttributeSubAxes = "CategoryAttributeSubAxes"
			.field static public literal string CategoryAttributeTitle = "CategoryAttributeTitle"
			.field static public literal string CategoryAttributeToolTip = "CategoryAttributeToolTip"
			.field static public literal string CategoryAttributeToolTips = "CategoryAttributeToolTips"
			.field static public literal string CategoryAttributeViewState = "CategoryAttributeViewState"
			.field static public literal string DesciptionCustomLabelEditorTitle = "DesciptionCustomLabelEditorTitle"
			.field static public literal string DesciptionCustomLabelFormatInvalid = "DesciptionCustomLabelFormatInvalid"
			.field static public literal string DescriptionAttributeAlignment = "DescriptionAttributeAlignment"
			.field static public literal string DescriptionAttributeAllowAnchorMoving3 = "DescriptionAttributeAllowAnchorMoving3"
			.field static public literal string DescriptionAttributeAllowMoving = "DescriptionAttributeAllowMoving"
			.field static public literal string DescriptionAttributeAllowOutsidePlotArea = "DescriptionAttributeAllowOutsidePlotArea"
			.field static public literal string DescriptionAttributeAllowPathEditing3 = "DescriptionAttributeAllowPathEditing3"
			.field static public literal string DescriptionAttributeAllowResizing = "DescriptionAttributeAllowResizing"
			.field static public literal string DescriptionAttributeAllowSelecting = "DescriptionAttributeAllowSelecting"
			.field static public literal string DescriptionAttributeAllowTextEditing = "DescriptionAttributeAllowTextEditing"
			.field static public literal string DescriptionAttributeAnchorAlignment = "DescriptionAttributeAnchorAlignment"
			.field static public literal string DescriptionAttributeAnchorDataPoint = "DescriptionAttributeAnchorDataPoint"
			.field static public literal string DescriptionAttributeAnchorDataPointName = "DescriptionAttributeAnchorDataPointName"
			.field static public literal string DescriptionAttributeAnchorOffsetX3 = "DescriptionAttributeAnchorOffsetX3"
			.field static public literal string DescriptionAttributeAnchorOffsetY3 = "DescriptionAttributeAnchorOffsetY3"
			.field static public literal string DescriptionAttributeAnchorX = "DescriptionAttributeAnchorX"
			.field static public literal string DescriptionAttributeAnchorY = "DescriptionAttributeAnchorY"
			.field static public literal string DescriptionAttributeAnnotationBaseX = "DescriptionAttributeAnnotationBaseX"
			.field static public literal string DescriptionAttributeAnnotationBaseY = "DescriptionAttributeAnnotationBaseY"
			.field static public literal string DescriptionAttributeAnnotationClipToChartArea = "DescriptionAttributeAnnotationClipToChartArea"
			.field static public literal string DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor = "DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor"
			.field static public literal string DescriptionAttributeAnnotationCollection_Item = "DescriptionAttributeAnnotationCollection_Item"
			.field static public literal string DescriptionAttributeAnnotationGroup_AllowAnchorMoving = "DescriptionAttributeAnnotationGroup_AllowAnchorMoving"
			.field static public literal string DescriptionAttributeAnnotationGroup_AllowPathEditing = "DescriptionAttributeAnnotationGroup_AllowPathEditing"
			.field static public literal string DescriptionAttributeAnnotationGroup_AnnotationGroup = "DescriptionAttributeAnnotationGroup_AnnotationGroup"
			.field static public literal string DescriptionAttributeAnnotationGroup_Annotations = "DescriptionAttributeAnnotationGroup_Annotations"
			.field static public literal string DescriptionAttributeAnnotationGroup_ClipToChartArea = "DescriptionAttributeAnnotationGroup_ClipToChartArea"
			.field static public literal string DescriptionAttributeAnnotationGroup_Selected = "DescriptionAttributeAnnotationGroup_Selected"
			.field static public literal string DescriptionAttributeAnnotationGroup_SizeAlwaysRelative = "DescriptionAttributeAnnotationGroup_SizeAlwaysRelative"
			.field static public literal string DescriptionAttributeAnnotationGroup_Visible = "DescriptionAttributeAnnotationGroup_Visible"
			.field static public literal string DescriptionAttributeAnnotationHeight = "DescriptionAttributeAnnotationHeight"
			.field static public literal string DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection = "DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection"
			.field static public literal string DescriptionAttributeAnnotationPathPointCollection_Item = "DescriptionAttributeAnnotationPathPointCollection_Item"
			.field static public literal string DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint = "DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint"
			.field static public literal string DescriptionAttributeAnnotationPathPoint_Name = "DescriptionAttributeAnnotationPathPoint_Name"
			.field static public literal string DescriptionAttributeAnnotationPathPoint_X = "DescriptionAttributeAnnotationPathPoint_X"
			.field static public literal string DescriptionAttributeAnnotationPathPoint_Y = "DescriptionAttributeAnnotationPathPoint_Y"
			.field static public literal string DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs = "DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs"
			.field static public literal string DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle = "DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle"
			.field static public literal string DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels = "DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels"
			.field static public literal string DescriptionAttributeAnnotationType = "DescriptionAttributeAnnotationType"
			.field static public literal string DescriptionAttributeAnnotationWidth = "DescriptionAttributeAnnotationWidth"
			.field static public literal string DescriptionAttributeAnnotation_Annotation = "DescriptionAttributeAnnotation_Annotation"
			.field static public literal string DescriptionAttributeAnnotation_AnnotationType = "DescriptionAttributeAnnotation_AnnotationType"
			.field static public literal string DescriptionAttributeAnnotations3 = "DescriptionAttributeAnnotations3"
			.field static public literal string DescriptionAttributeAntiAlias = "DescriptionAttributeAntiAlias"
			.field static public literal string DescriptionAttributeArea3DStyle = "DescriptionAttributeArea3DStyle"
			.field static public literal string DescriptionAttributeArrowAnnotation_ArrowAnnotation = "DescriptionAttributeArrowAnnotation_ArrowAnnotation"
			.field static public literal string DescriptionAttributeArrowAnnotation_ArrowSize = "DescriptionAttributeArrowAnnotation_ArrowSize"
			.field static public literal string DescriptionAttributeArrowAnnotation_ArrowStyle = "DescriptionAttributeArrowAnnotation_ArrowStyle"
			.field static public literal string DescriptionAttributeArrowStyle_ArrowStyle = "DescriptionAttributeArrowStyle_ArrowStyle"
			.field static public literal string DescriptionAttributeArrows = "DescriptionAttributeArrows"
			.field static public literal string DescriptionAttributeAxis = "DescriptionAttributeAxis"
			.field static public literal string DescriptionAttributeAxisDataView_AxisDataView = "DescriptionAttributeAxisDataView_AxisDataView"
			.field static public literal string DescriptionAttributeAxisDataView_IsZoomed = "DescriptionAttributeAxisDataView_IsZoomed"
			.field static public literal string DescriptionAttributeAxisDataView_MinSize = "DescriptionAttributeAxisDataView_MinSize"
			.field static public literal string DescriptionAttributeAxisDataView_MinSizeType = "DescriptionAttributeAxisDataView_MinSizeType"
			.field static public literal string DescriptionAttributeAxisDataView_Position = "DescriptionAttributeAxisDataView_Position"
			.field static public literal string DescriptionAttributeAxisDataView_Size = "DescriptionAttributeAxisDataView_Size"
			.field static public literal string DescriptionAttributeAxisDataView_SizeType = "DescriptionAttributeAxisDataView_SizeType"
			.field static public literal string DescriptionAttributeAxisDataView_SmallScrollMinSize = "DescriptionAttributeAxisDataView_SmallScrollMinSize"
			.field static public literal string DescriptionAttributeAxisDataView_SmallScrollMinSizeType = "DescriptionAttributeAxisDataView_SmallScrollMinSizeType"
			.field static public literal string DescriptionAttributeAxisDataView_SmallScrollSize = "DescriptionAttributeAxisDataView_SmallScrollSize"
			.field static public literal string DescriptionAttributeAxisDataView_SmallScrollSizeType = "DescriptionAttributeAxisDataView_SmallScrollSizeType"
			.field static public literal string DescriptionAttributeAxisDataView_Zoomable = "DescriptionAttributeAxisDataView_Zoomable"
			.field static public literal string DescriptionAttributeAxisLabel = "DescriptionAttributeAxisLabel"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle = "DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_BreakLineType = "DescriptionAttributeAxisScaleBreakStyle_BreakLineType"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold = "DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_Enabled = "DescriptionAttributeAxisScaleBreakStyle_Enabled"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks = "DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_Spacing = "DescriptionAttributeAxisScaleBreakStyle_Spacing"
			.field static public literal string DescriptionAttributeAxisScaleBreakStyle_StartFromZero = "DescriptionAttributeAxisScaleBreakStyle_StartFromZero"
			.field static public literal string DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection = "DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection"
			.field static public literal string DescriptionAttributeAxisScaleSegmentCollection_Item = "DescriptionAttributeAxisScaleSegmentCollection_Item"
			.field static public literal string DescriptionAttributeAxisScaleSegment_AxisScaleSegment = "DescriptionAttributeAxisScaleSegment_AxisScaleSegment"
			.field static public literal string DescriptionAttributeAxisScaleSegment_Interval = "DescriptionAttributeAxisScaleSegment_Interval"
			.field static public literal string DescriptionAttributeAxisScaleSegment_IntervalOffset = "DescriptionAttributeAxisScaleSegment_IntervalOffset"
			.field static public literal string DescriptionAttributeAxisScaleSegment_IntervalOffsetType = "DescriptionAttributeAxisScaleSegment_IntervalOffsetType"
			.field static public literal string DescriptionAttributeAxisScaleSegment_IntervalType = "DescriptionAttributeAxisScaleSegment_IntervalType"
			.field static public literal string DescriptionAttributeAxisScaleSegment_Position = "DescriptionAttributeAxisScaleSegment_Position"
			.field static public literal string DescriptionAttributeAxisScaleSegment_ScaleMaximum = "DescriptionAttributeAxisScaleSegment_ScaleMaximum"
			.field static public literal string DescriptionAttributeAxisScaleSegment_ScaleMinimum = "DescriptionAttributeAxisScaleSegment_ScaleMinimum"
			.field static public literal string DescriptionAttributeAxisScaleSegment_Size = "DescriptionAttributeAxisScaleSegment_Size"
			.field static public literal string DescriptionAttributeAxisScaleSegment_Spacing = "DescriptionAttributeAxisScaleSegment_Spacing"
			.field static public literal string DescriptionAttributeAxisScaleSegment_Tag = "DescriptionAttributeAxisScaleSegment_Tag"
			.field static public literal string DescriptionAttributeAxisScrollBar_ButtonColor = "DescriptionAttributeAxisScrollBar_ButtonColor"
			.field static public literal string DescriptionAttributeAxisScrollBar_Buttons = "DescriptionAttributeAxisScrollBar_Buttons"
			.field static public literal string DescriptionAttributeAxisScrollBar_Enabled = "DescriptionAttributeAxisScrollBar_Enabled"
			.field static public literal string DescriptionAttributeAxisScrollBar_PositionInside = "DescriptionAttributeAxisScrollBar_PositionInside"
			.field static public literal string DescriptionAttributeAxisScrollBar_Size = "DescriptionAttributeAxisScrollBar_Size"
			.field static public literal string DescriptionAttributeAxisX = "DescriptionAttributeAxisX"
			.field static public literal string DescriptionAttributeAxisXName = "DescriptionAttributeAxisXName"
			.field static public literal string DescriptionAttributeAxisY = "DescriptionAttributeAxisY"
			.field static public literal string DescriptionAttributeAxisYName = "DescriptionAttributeAxisYName"
			.field static public literal string DescriptionAttributeAxis_Axis = "DescriptionAttributeAxis_Axis"
			.field static public literal string DescriptionAttributeAxis_MaxAutoSize = "DescriptionAttributeAxis_MaxAutoSize"
			.field static public literal string DescriptionAttributeAxis_Name = "DescriptionAttributeAxis_Name"
			.field static public literal string DescriptionAttributeBackColor = "DescriptionAttributeBackColor"
			.field static public literal string DescriptionAttributeBackGradientStyle = "DescriptionAttributeBackGradientStyle"
			.field static public literal string DescriptionAttributeBackHatchStyle = "DescriptionAttributeBackHatchStyle"
			.field static public literal string DescriptionAttributeBackImage = "DescriptionAttributeBackImage"
			.field static public literal string DescriptionAttributeBackImageAlign = "DescriptionAttributeBackImageAlign"
			.field static public literal string DescriptionAttributeBackSecondaryColor = "DescriptionAttributeBackSecondaryColor"
			.field static public literal string DescriptionAttributeBorder3DAnnotation_Border3DAnnotation = "DescriptionAttributeBorder3DAnnotation_Border3DAnnotation"
			.field static public literal string DescriptionAttributeBorderColor = "DescriptionAttributeBorderColor"
			.field static public literal string DescriptionAttributeBorderDashStyle = "DescriptionAttributeBorderDashStyle"
			.field static public literal string DescriptionAttributeBorderSkin = "DescriptionAttributeBorderSkin"
			.field static public literal string DescriptionAttributeBorderSkin_BorderSkin = "DescriptionAttributeBorderSkin_BorderSkin"
			.field static public literal string DescriptionAttributeBorderSkin_FrameBackSecondaryColor = "DescriptionAttributeBorderSkin_FrameBackSecondaryColor"
			.field static public literal string DescriptionAttributeBorderSkin_FrameBorderDashStyle = "DescriptionAttributeBorderSkin_FrameBorderDashStyle"
			.field static public literal string DescriptionAttributeBorderSkin_FrameBorderWidth = "DescriptionAttributeBorderSkin_FrameBorderWidth"
			.field static public literal string DescriptionAttributeBorderSkin_PageColor = "DescriptionAttributeBorderSkin_PageColor"
			.field static public literal string DescriptionAttributeBorderSkin_SkinStyle = "DescriptionAttributeBorderSkin_SkinStyle"
			.field static public literal string DescriptionAttributeBorderWidth = "DescriptionAttributeBorderWidth"
			.field static public literal string DescriptionAttributeBottom = "DescriptionAttributeBottom"
			.field static public literal string DescriptionAttributeCalloutAnnotation_AnchorOffsetX = "DescriptionAttributeCalloutAnnotation_AnchorOffsetX"
			.field static public literal string DescriptionAttributeCalloutAnnotation_AnchorOffsetY = "DescriptionAttributeCalloutAnnotation_AnchorOffsetY"
			.field static public literal string DescriptionAttributeCalloutAnnotation_CalloutAnchorCap = "DescriptionAttributeCalloutAnnotation_CalloutAnchorCap"
			.field static public literal string DescriptionAttributeCalloutAnnotation_CalloutAnnotation = "DescriptionAttributeCalloutAnnotation_CalloutAnnotation"
			.field static public literal string DescriptionAttributeCalloutAnnotation_CalloutStyle = "DescriptionAttributeCalloutAnnotation_CalloutStyle"
			.field static public literal string DescriptionAttributeCalloutBackColor = "DescriptionAttributeCalloutBackColor"
			.field static public literal string DescriptionAttributeCalloutLineAnchorCap = "DescriptionAttributeCalloutLineAnchorCap"
			.field static public literal string DescriptionAttributeCalloutLineColor = "DescriptionAttributeCalloutLineColor"
			.field static public literal string DescriptionAttributeCalloutStyle3 = "DescriptionAttributeCalloutStyle3"
			.field static public literal string DescriptionAttributeCalloutStyle_CalloutStyle = "DescriptionAttributeCalloutStyle_CalloutStyle"
			.field static public literal string DescriptionAttributeChart = "DescriptionAttributeChart"
			.field static public literal string DescriptionAttributeChartArea = "DescriptionAttributeChartArea"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Clustered = "DescriptionAttributeChartArea3DStyle_Clustered"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Enable3D = "DescriptionAttributeChartArea3DStyle_Enable3D"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Inclination = "DescriptionAttributeChartArea3DStyle_Inclination"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Light = "DescriptionAttributeChartArea3DStyle_Light"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Perspective = "DescriptionAttributeChartArea3DStyle_Perspective"
			.field static public literal string DescriptionAttributeChartArea3DStyle_PointDepth = "DescriptionAttributeChartArea3DStyle_PointDepth"
			.field static public literal string DescriptionAttributeChartArea3DStyle_PointGapDepth = "DescriptionAttributeChartArea3DStyle_PointGapDepth"
			.field static public literal string DescriptionAttributeChartArea3DStyle_RightAngleAxes = "DescriptionAttributeChartArea3DStyle_RightAngleAxes"
			.field static public literal string DescriptionAttributeChartArea3DStyle_Rotation = "DescriptionAttributeChartArea3DStyle_Rotation"
			.field static public literal string DescriptionAttributeChartArea3DStyle_WallWidth = "DescriptionAttributeChartArea3DStyle_WallWidth"
			.field static public literal string DescriptionAttributeChartAreaCollection_Item = "DescriptionAttributeChartAreaCollection_Item"
			.field static public literal string DescriptionAttributeChartArea_AlignOrientation = "DescriptionAttributeChartArea_AlignOrientation"
			.field static public literal string DescriptionAttributeChartArea_AlignType = "DescriptionAttributeChartArea_AlignType"
			.field static public literal string DescriptionAttributeChartArea_AlignWithChartArea = "DescriptionAttributeChartArea_AlignWithChartArea"
			.field static public literal string DescriptionAttributeChartArea_Axes = "DescriptionAttributeChartArea_Axes"
			.field static public literal string DescriptionAttributeChartArea_AxisX = "DescriptionAttributeChartArea_AxisX"
			.field static public literal string DescriptionAttributeChartArea_AxisX2 = "DescriptionAttributeChartArea_AxisX2"
			.field static public literal string DescriptionAttributeChartArea_AxisY = "DescriptionAttributeChartArea_AxisY"
			.field static public literal string DescriptionAttributeChartArea_AxisY2 = "DescriptionAttributeChartArea_AxisY2"
			.field static public literal string DescriptionAttributeChartArea_ChartArea = "DescriptionAttributeChartArea_ChartArea"
			.field static public literal string DescriptionAttributeChartArea_CursorX = "DescriptionAttributeChartArea_CursorX"
			.field static public literal string DescriptionAttributeChartArea_CursorY = "DescriptionAttributeChartArea_CursorY"
			.field static public literal string DescriptionAttributeChartArea_EquallySizedAxesFont = "DescriptionAttributeChartArea_EquallySizedAxesFont"
			.field static public literal string DescriptionAttributeChartArea_InnerPlotPosition = "DescriptionAttributeChartArea_InnerPlotPosition"
			.field static public literal string DescriptionAttributeChartArea_Name = "DescriptionAttributeChartArea_Name"
			.field static public literal string DescriptionAttributeChartArea_Position = "DescriptionAttributeChartArea_Position"
			.field static public literal string DescriptionAttributeChartArea_Visible = "DescriptionAttributeChartArea_Visible"
			.field static public literal string DescriptionAttributeChartAreas = "DescriptionAttributeChartAreas"
			.field static public literal string DescriptionAttributeChartEvent_AnnotationPlaced = "DescriptionAttributeChartEvent_AnnotationPlaced"
			.field static public literal string DescriptionAttributeChartEvent_AnnotationPositionChanged = "DescriptionAttributeChartEvent_AnnotationPositionChanged"
			.field static public literal string DescriptionAttributeChartEvent_AnnotationPositionChanging = "DescriptionAttributeChartEvent_AnnotationPositionChanging"
			.field static public literal string DescriptionAttributeChartEvent_AnnotationSelectionChanged = "DescriptionAttributeChartEvent_AnnotationSelectionChanged"
			.field static public literal string DescriptionAttributeChartEvent_AnnotationTextChanged = "DescriptionAttributeChartEvent_AnnotationTextChanged"
			.field static public literal string DescriptionAttributeChartEvent_AxisScrollBarClicked = "DescriptionAttributeChartEvent_AxisScrollBarClicked"
			.field static public literal string DescriptionAttributeChartEvent_AxisViewChanged = "DescriptionAttributeChartEvent_AxisViewChanged"
			.field static public literal string DescriptionAttributeChartEvent_AxisViewChanging = "DescriptionAttributeChartEvent_AxisViewChanging"
			.field static public literal string DescriptionAttributeChartEvent_Click = "DescriptionAttributeChartEvent_Click"
			.field static public literal string DescriptionAttributeChartEvent_CursorPositionChanged = "DescriptionAttributeChartEvent_CursorPositionChanged"
			.field static public literal string DescriptionAttributeChartEvent_CursorPositionChanging = "DescriptionAttributeChartEvent_CursorPositionChanging"
			.field static public literal string DescriptionAttributeChartEvent_Customize = "DescriptionAttributeChartEvent_Customize"
			.field static public literal string DescriptionAttributeChartEvent_CustomizeLegend = "DescriptionAttributeChartEvent_CustomizeLegend"
			.field static public literal string DescriptionAttributeChartEvent_CustomizeMapAreas = "DescriptionAttributeChartEvent_CustomizeMapAreas"
			.field static public literal string DescriptionAttributeChartEvent_GetToolTipText = "DescriptionAttributeChartEvent_GetToolTipText"
			.field static public literal string DescriptionAttributeChartEvent_PostPaint = "DescriptionAttributeChartEvent_PostPaint"
			.field static public literal string DescriptionAttributeChartEvent_PrePaint = "DescriptionAttributeChartEvent_PrePaint"
			.field static public literal string DescriptionAttributeChartEvent_SelectionRangeChanged = "DescriptionAttributeChartEvent_SelectionRangeChanged"
			.field static public literal string DescriptionAttributeChartEvent_SelectionRangeChanging = "DescriptionAttributeChartEvent_SelectionRangeChanging"
			.field static public literal string DescriptionAttributeChartImageAlternateText = "DescriptionAttributeChartImageAlternateText"
			.field static public literal string DescriptionAttributeChartImageDescriptionUrl = "DescriptionAttributeChartImageDescriptionUrl"
			.field static public literal string DescriptionAttributeChartImageType = "DescriptionAttributeChartImageType"
			.field static public literal string DescriptionAttributeChartImage_Compression = "DescriptionAttributeChartImage_Compression"
			.field static public literal string DescriptionAttributeChartSerializer_ChartSerializer = "DescriptionAttributeChartSerializer_ChartSerializer"
			.field static public literal string DescriptionAttributeChartSerializer_Content = "DescriptionAttributeChartSerializer_Content"
			.field static public literal string DescriptionAttributeChartSerializer_Format = "DescriptionAttributeChartSerializer_Format"
			.field static public literal string DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes = "DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes"
			.field static public literal string DescriptionAttributeChartSerializer_NonSerializableContent = "DescriptionAttributeChartSerializer_NonSerializableContent"
			.field static public literal string DescriptionAttributeChartSerializer_ResetWhenLoading = "DescriptionAttributeChartSerializer_ResetWhenLoading"
			.field static public literal string DescriptionAttributeChartSerializer_SerializableContent = "DescriptionAttributeChartSerializer_SerializableContent"
			.field static public literal string DescriptionAttributeChartSerializer_TemplateMode = "DescriptionAttributeChartSerializer_TemplateMode"
			.field static public literal string DescriptionAttributeChart_BorderlineWidth = "DescriptionAttributeChart_BorderlineWidth"
			.field static public literal string DescriptionAttributeChart_BuildNumber = "DescriptionAttributeChart_BuildNumber"
			.field static public literal string DescriptionAttributeChart_Chart = "DescriptionAttributeChart_Chart"
			.field static public literal string DescriptionAttributeChart_Compression = "DescriptionAttributeChart_Compression"
			.field static public literal string DescriptionAttributeChart_EnableViewState = "DescriptionAttributeChart_EnableViewState"
			.field static public literal string DescriptionAttributeChart_ImageStorageMode = "DescriptionAttributeChart_ImageStorageMode"
			.field static public literal string DescriptionAttributeChart_ImageUrl = "DescriptionAttributeChart_ImageUrl"
			.field static public literal string DescriptionAttributeChart_Images = "DescriptionAttributeChart_Images"
			.field static public literal string DescriptionAttributeChart_OnBackPaint = "DescriptionAttributeChart_OnBackPaint"
			.field static public literal string DescriptionAttributeChart_OnCustomize = "DescriptionAttributeChart_OnCustomize"
			.field static public literal string DescriptionAttributeChart_OnCustomizeLegend = "DescriptionAttributeChart_OnCustomizeLegend"
			.field static public literal string DescriptionAttributeChart_OnCustomizeMapAreas = "DescriptionAttributeChart_OnCustomizeMapAreas"
			.field static public literal string DescriptionAttributeChart_OnPaint = "DescriptionAttributeChart_OnPaint"
			.field static public literal string DescriptionAttributeChart_PaletteCustomColors = "DescriptionAttributeChart_PaletteCustomColors"
			.field static public literal string DescriptionAttributeChart_Printing = "DescriptionAttributeChart_Printing"
			.field static public literal string DescriptionAttributeChart_RenderType = "DescriptionAttributeChart_RenderType"
			.field static public literal string DescriptionAttributeChart_Serializer = "DescriptionAttributeChart_Serializer"
			.field static public literal string DescriptionAttributeChart_Series = "DescriptionAttributeChart_Series"
			.field static public literal string DescriptionAttributeChart_Size = "DescriptionAttributeChart_Size"
			.field static public literal string DescriptionAttributeChart_SoftShadows = "DescriptionAttributeChart_SoftShadows"
			.field static public literal string DescriptionAttributeChart_ViewStateContent = "DescriptionAttributeChart_ViewStateContent"
			.field static public literal string DescriptionAttributeChart_ViewStateData = "DescriptionAttributeChart_ViewStateData"
			.field static public literal string DescriptionAttributeColor4 = "DescriptionAttributeColor4"
			.field static public literal string DescriptionAttributeCrossing = "DescriptionAttributeCrossing"
			.field static public literal string DescriptionAttributeCursorEventArgs_NewPosition = "DescriptionAttributeCursorEventArgs_NewPosition"
			.field static public literal string DescriptionAttributeCursorEventArgs_NewSelectionEnd = "DescriptionAttributeCursorEventArgs_NewSelectionEnd"
			.field static public literal string DescriptionAttributeCursorEventArgs_NewSelectionStart = "DescriptionAttributeCursorEventArgs_NewSelectionStart"
			.field static public literal string DescriptionAttributeCursor_AutoScroll = "DescriptionAttributeCursor_AutoScroll"
			.field static public literal string DescriptionAttributeCursor_AxisType = "DescriptionAttributeCursor_AxisType"
			.field static public literal string DescriptionAttributeCursor_Cursor = "DescriptionAttributeCursor_Cursor"
			.field static public literal string DescriptionAttributeCursor_Interval = "DescriptionAttributeCursor_Interval"
			.field static public literal string DescriptionAttributeCursor_IntervalOffset = "DescriptionAttributeCursor_IntervalOffset"
			.field static public literal string DescriptionAttributeCursor_IntervalOffsetType = "DescriptionAttributeCursor_IntervalOffsetType"
			.field static public literal string DescriptionAttributeCursor_IntervalType = "DescriptionAttributeCursor_IntervalType"
			.field static public literal string DescriptionAttributeCursor_Position = "DescriptionAttributeCursor_Position"
			.field static public literal string DescriptionAttributeCursor_SelectionColor = "DescriptionAttributeCursor_SelectionColor"
			.field static public literal string DescriptionAttributeCursor_SelectionEnd = "DescriptionAttributeCursor_SelectionEnd"
			.field static public literal string DescriptionAttributeCursor_SelectionStart = "DescriptionAttributeCursor_SelectionStart"
			.field static public literal string DescriptionAttributeCursor_UserEnabled = "DescriptionAttributeCursor_UserEnabled"
			.field static public literal string DescriptionAttributeCursor_UserSelection = "DescriptionAttributeCursor_UserSelection"
			.field static public literal string DescriptionAttributeCustomAttributes = "DescriptionAttributeCustomAttributes"
			.field static public literal string DescriptionAttributeCustomAttributesExtended = "DescriptionAttributeCustomAttributesExtended"
			.field static public literal string DescriptionAttributeCustomLabel_CustomLabel = "DescriptionAttributeCustomLabel_CustomLabel"
			.field static public literal string DescriptionAttributeCustomLabel_From = "DescriptionAttributeCustomLabel_From"
			.field static public literal string DescriptionAttributeCustomLabel_GridTicks = "DescriptionAttributeCustomLabel_GridTicks"
			.field static public literal string DescriptionAttributeCustomLabel_Image = "DescriptionAttributeCustomLabel_Image"
			.field static public literal string DescriptionAttributeCustomLabel_ImageUrl = "DescriptionAttributeCustomLabel_ImageUrl"
			.field static public literal string DescriptionAttributeCustomLabel_LabelMark = "DescriptionAttributeCustomLabel_LabelMark"
			.field static public literal string DescriptionAttributeCustomLabel_MarkColor = "DescriptionAttributeCustomLabel_MarkColor"
			.field static public literal string DescriptionAttributeCustomLabel_Name = "DescriptionAttributeCustomLabel_Name"
			.field static public literal string DescriptionAttributeCustomLabel_Row = "DescriptionAttributeCustomLabel_Row"
			.field static public literal string DescriptionAttributeCustomLabel_RowIndex = "DescriptionAttributeCustomLabel_RowIndex"
			.field static public literal string DescriptionAttributeCustomLabel_Text = "DescriptionAttributeCustomLabel_Text"
			.field static public literal string DescriptionAttributeCustomLabel_To = "DescriptionAttributeCustomLabel_To"
			.field static public literal string DescriptionAttributeCustomLabels = "DescriptionAttributeCustomLabels"
			.field static public literal string DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection = "DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection"
			.field static public literal string DescriptionAttributeDataManager_PaletteCustomColors = "DescriptionAttributeDataManager_PaletteCustomColors"
			.field static public literal string DescriptionAttributeDataManipulator = "DescriptionAttributeDataManipulator"
			.field static public literal string DescriptionAttributeDataPointCollection_DataPointCollection = "DescriptionAttributeDataPointCollection_DataPointCollection"
			.field static public literal string DescriptionAttributeDataPointComparer_DataPointComparer = "DescriptionAttributeDataPointComparer_DataPointComparer"
			.field static public literal string DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties = "DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties"
			.field static public literal string DescriptionAttributeDataPoint_DataPoint = "DescriptionAttributeDataPoint_DataPoint"
			.field static public literal string DescriptionAttributeDataPoint_Empty = "DescriptionAttributeDataPoint_Empty"
			.field static public literal string DescriptionAttributeDataPoint_Name = "DescriptionAttributeDataPoint_Name"
			.field static public literal string DescriptionAttributeDataPoint_XValue = "DescriptionAttributeDataPoint_XValue"
			.field static public literal string DescriptionAttributeDataPoint_YValues = "DescriptionAttributeDataPoint_YValues"
			.field static public literal string DescriptionAttributeDataSeriesGroupID = "DescriptionAttributeDataSeriesGroupID"
			.field static public literal string DescriptionAttributeDataSource = "DescriptionAttributeDataSource"
			.field static public literal string DescriptionAttributeDisabled = "DescriptionAttributeDisabled"
			.field static public literal string DescriptionAttributeDrawInfinitive = "DescriptionAttributeDrawInfinitive"
			.field static public literal string DescriptionAttributeElementPosition_Auto = "DescriptionAttributeElementPosition_Auto"
			.field static public literal string DescriptionAttributeElementPosition_ElementPosition = "DescriptionAttributeElementPosition_ElementPosition"
			.field static public literal string DescriptionAttributeElementPosition_Height = "DescriptionAttributeElementPosition_Height"
			.field static public literal string DescriptionAttributeElementPosition_Width = "DescriptionAttributeElementPosition_Width"
			.field static public literal string DescriptionAttributeElementPosition_X = "DescriptionAttributeElementPosition_X"
			.field static public literal string DescriptionAttributeElementPosition_Y = "DescriptionAttributeElementPosition_Y"
			.field static public literal string DescriptionAttributeEllipseAnnotation_EllipseAnnotation = "DescriptionAttributeEllipseAnnotation_EllipseAnnotation"
			.field static public literal string DescriptionAttributeEnabled13 = "DescriptionAttributeEnabled13"
			.field static public literal string DescriptionAttributeEnabled5 = "DescriptionAttributeEnabled5"
			.field static public literal string DescriptionAttributeEnabled7 = "DescriptionAttributeEnabled7"
			.field static public literal string DescriptionAttributeFont = "DescriptionAttributeFont"
			.field static public literal string DescriptionAttributeFontColor = "DescriptionAttributeFontColor"
			.field static public literal string DescriptionAttributeForeColor = "DescriptionAttributeForeColor"
			.field static public literal string DescriptionAttributeFrameBackColor = "DescriptionAttributeFrameBackColor"
			.field static public literal string DescriptionAttributeFrameBackHatchStyle = "DescriptionAttributeFrameBackHatchStyle"
			.field static public literal string DescriptionAttributeFreeDrawPlacement = "DescriptionAttributeFreeDrawPlacement"
			.field static public literal string DescriptionAttributeGrid_Grid = "DescriptionAttributeGrid_Grid"
			.field static public literal string DescriptionAttributeHeaderBackColor = "DescriptionAttributeHeaderBackColor"
			.field static public literal string DescriptionAttributeHeight3 = "DescriptionAttributeHeight3"
			.field static public literal string DescriptionAttributeHideOverlapped = "DescriptionAttributeHideOverlapped"
			.field static public literal string DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation = "DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation"
			.field static public literal string DescriptionAttributeImageAnnotation_Alignment = "DescriptionAttributeImageAnnotation_Alignment"
			.field static public literal string DescriptionAttributeImageAnnotation_Image = "DescriptionAttributeImageAnnotation_Image"
			.field static public literal string DescriptionAttributeImageAnnotation_ImageAnnotation = "DescriptionAttributeImageAnnotation_ImageAnnotation"
			.field static public literal string DescriptionAttributeImageTransparentColor = "DescriptionAttributeImageTransparentColor"
			.field static public literal string DescriptionAttributeImageType = "DescriptionAttributeImageType"
			.field static public literal string DescriptionAttributeImageWrapMode = "DescriptionAttributeImageWrapMode"
			.field static public literal string DescriptionAttributeInterlaced = "DescriptionAttributeInterlaced"
			.field static public literal string DescriptionAttributeInterlacedColor = "DescriptionAttributeInterlacedColor"
			.field static public literal string DescriptionAttributeInternalIntervalType = "DescriptionAttributeInternalIntervalType"
			.field static public literal string DescriptionAttributeInterval4 = "DescriptionAttributeInterval4"
			.field static public literal string DescriptionAttributeInterval6 = "DescriptionAttributeInterval6"
			.field static public literal string DescriptionAttributeIntervalAutoMode = "DescriptionAttributeIntervalAutoMode"
			.field static public literal string DescriptionAttributeIntervalOffset3 = "DescriptionAttributeIntervalOffset3"
			.field static public literal string DescriptionAttributeIntervalOffset6 = "DescriptionAttributeIntervalOffset6"
			.field static public literal string DescriptionAttributeIntervalOffsetType4 = "DescriptionAttributeIntervalOffsetType4"
			.field static public literal string DescriptionAttributeIntervalOffsetType6 = "DescriptionAttributeIntervalOffsetType6"
			.field static public literal string DescriptionAttributeIntervalType3 = "DescriptionAttributeIntervalType3"
			.field static public literal string DescriptionAttributeIntervalType4 = "DescriptionAttributeIntervalType4"
			.field static public literal string DescriptionAttributeIsMapAreaAttributesEncoded = "DescriptionAttributeIsMapAreaAttributesEncoded"
			.field static public literal string DescriptionAttributeLabel = "DescriptionAttributeLabel"
			.field static public literal string DescriptionAttributeLabelBackColor = "DescriptionAttributeLabelBackColor"
			.field static public literal string DescriptionAttributeLabelBorderDashStyle = "DescriptionAttributeLabelBorderDashStyle"
			.field static public literal string DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle = "DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle"
			.field static public literal string DescriptionAttributeLabelFormat = "DescriptionAttributeLabelFormat"
			.field static public literal string DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle = "DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle"
			.field static public literal string DescriptionAttributeLabelStyle = "DescriptionAttributeLabelStyle"
			.field static public literal string DescriptionAttributeLabelToolTip = "DescriptionAttributeLabelToolTip"
			.field static public literal string DescriptionAttributeLabel_Enabled = "DescriptionAttributeLabel_Enabled"
			.field static public literal string DescriptionAttributeLabel_Font = "DescriptionAttributeLabel_Font"
			.field static public literal string DescriptionAttributeLabel_FontAngle = "DescriptionAttributeLabel_FontAngle"
			.field static public literal string DescriptionAttributeLabel_Format = "DescriptionAttributeLabel_Format"
			.field static public literal string DescriptionAttributeLabel_Interval = "DescriptionAttributeLabel_Interval"
			.field static public literal string DescriptionAttributeLabel_IntervalOffset = "DescriptionAttributeLabel_IntervalOffset"
			.field static public literal string DescriptionAttributeLabel_IntervalOffsetType = "DescriptionAttributeLabel_IntervalOffsetType"
			.field static public literal string DescriptionAttributeLabel_IntervalType = "DescriptionAttributeLabel_IntervalType"
			.field static public literal string DescriptionAttributeLabel_Label = "DescriptionAttributeLabel_Label"
			.field static public literal string DescriptionAttributeLabel_OffsetLabels = "DescriptionAttributeLabel_OffsetLabels"
			.field static public literal string DescriptionAttributeLabel_ShowEndLabels = "DescriptionAttributeLabel_ShowEndLabels"
			.field static public literal string DescriptionAttributeLabel_TruncatedLabels = "DescriptionAttributeLabel_TruncatedLabels"
			.field static public literal string DescriptionAttributeLabelsAutoFit = "DescriptionAttributeLabelsAutoFit"
			.field static public literal string DescriptionAttributeLabelsAutoFitMaxFontSize = "DescriptionAttributeLabelsAutoFitMaxFontSize"
			.field static public literal string DescriptionAttributeLabelsAutoFitMinFontSize = "DescriptionAttributeLabelsAutoFitMinFontSize"
			.field static public literal string DescriptionAttributeLabelsAutoFitStyle = "DescriptionAttributeLabelsAutoFitStyle"
			.field static public literal string DescriptionAttributeLegend = "DescriptionAttributeLegend"
			.field static public literal string DescriptionAttributeLegendCellCollection_Item = "DescriptionAttributeLegendCellCollection_Item"
			.field static public literal string DescriptionAttributeLegendCellCollection_LegendCellCollection = "DescriptionAttributeLegendCellCollection_LegendCellCollection"
			.field static public literal string DescriptionAttributeLegendCellColumnCollection_Item = "DescriptionAttributeLegendCellColumnCollection_Item"
			.field static public literal string DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection = "DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection"
			.field static public literal string DescriptionAttributeLegendCellColumn_Alignment = "DescriptionAttributeLegendCellColumn_Alignment"
			.field static public literal string DescriptionAttributeLegendCellColumn_ColumnType = "DescriptionAttributeLegendCellColumn_ColumnType"
			.field static public literal string DescriptionAttributeLegendCellColumn_Font = "DescriptionAttributeLegendCellColumn_Font"
			.field static public literal string DescriptionAttributeLegendCellColumn_HeaderColor = "DescriptionAttributeLegendCellColumn_HeaderColor"
			.field static public literal string DescriptionAttributeLegendCellColumn_HeaderFont = "DescriptionAttributeLegendCellColumn_HeaderFont"
			.field static public literal string DescriptionAttributeLegendCellColumn_HeaderText = "DescriptionAttributeLegendCellColumn_HeaderText"
			.field static public literal string DescriptionAttributeLegendCellColumn_HeaderTextAlignment = "DescriptionAttributeLegendCellColumn_HeaderTextAlignment"
			.field static public literal string DescriptionAttributeLegendCellColumn_LegendCellColumn = "DescriptionAttributeLegendCellColumn_LegendCellColumn"
			.field static public literal string DescriptionAttributeLegendCellColumn_Margins = "DescriptionAttributeLegendCellColumn_Margins"
			.field static public literal string DescriptionAttributeLegendCellColumn_MaximumWidth = "DescriptionAttributeLegendCellColumn_MaximumWidth"
			.field static public literal string DescriptionAttributeLegendCellColumn_MinimumWidth = "DescriptionAttributeLegendCellColumn_MinimumWidth"
			.field static public literal string DescriptionAttributeLegendCellColumn_Name = "DescriptionAttributeLegendCellColumn_Name"
			.field static public literal string DescriptionAttributeLegendCellColumn_SeriesSymbolSize = "DescriptionAttributeLegendCellColumn_SeriesSymbolSize"
			.field static public literal string DescriptionAttributeLegendCellColumn_Text = "DescriptionAttributeLegendCellColumn_Text"
			.field static public literal string DescriptionAttributeLegendCell_Alignment = "DescriptionAttributeLegendCell_Alignment"
			.field static public literal string DescriptionAttributeLegendCell_CellSpan = "DescriptionAttributeLegendCell_CellSpan"
			.field static public literal string DescriptionAttributeLegendCell_CellType = "DescriptionAttributeLegendCell_CellType"
			.field static public literal string DescriptionAttributeLegendCell_Font = "DescriptionAttributeLegendCell_Font"
			.field static public literal string DescriptionAttributeLegendCell_Image = "DescriptionAttributeLegendCell_Image"
			.field static public literal string DescriptionAttributeLegendCell_ImageSize = "DescriptionAttributeLegendCell_ImageSize"
			.field static public literal string DescriptionAttributeLegendCell_LegendCell = "DescriptionAttributeLegendCell_LegendCell"
			.field static public literal string DescriptionAttributeLegendCell_Margins = "DescriptionAttributeLegendCell_Margins"
			.field static public literal string DescriptionAttributeLegendCell_Name = "DescriptionAttributeLegendCell_Name"
			.field static public literal string DescriptionAttributeLegendCell_SeriesSymbolSize = "DescriptionAttributeLegendCell_SeriesSymbolSize"
			.field static public literal string DescriptionAttributeLegendCell_Text = "DescriptionAttributeLegendCell_Text"
			.field static public literal string DescriptionAttributeLegendCollection_Item = "DescriptionAttributeLegendCollection_Item"
			.field static public literal string DescriptionAttributeLegendCollection_LegendCollection = "DescriptionAttributeLegendCollection_LegendCollection"
			.field static public literal string DescriptionAttributeLegendFontColor = "DescriptionAttributeLegendFontColor"
			.field static public literal string DescriptionAttributeLegendItem_Cells = "DescriptionAttributeLegendItem_Cells"
			.field static public literal string DescriptionAttributeLegendItem_Color = "DescriptionAttributeLegendItem_Color"
			.field static public literal string DescriptionAttributeLegendItem_Enabled = "DescriptionAttributeLegendItem_Enabled"
			.field static public literal string DescriptionAttributeLegendItem_Image = "DescriptionAttributeLegendItem_Image"
			.field static public literal string DescriptionAttributeLegendItem_LegendItem = "DescriptionAttributeLegendItem_LegendItem"
			.field static public literal string DescriptionAttributeLegendItem_MarkerColor = "DescriptionAttributeLegendItem_MarkerColor"
			.field static public literal string DescriptionAttributeLegendItem_MarkerSize = "DescriptionAttributeLegendItem_MarkerSize"
			.field static public literal string DescriptionAttributeLegendItem_MarkerStyle = "DescriptionAttributeLegendItem_MarkerStyle"
			.field static public literal string DescriptionAttributeLegendItem_Name = "DescriptionAttributeLegendItem_Name"
			.field static public literal string DescriptionAttributeLegendItem_Separator = "DescriptionAttributeLegendItem_Separator"
			.field static public literal string DescriptionAttributeLegendItem_SeparatorColor = "DescriptionAttributeLegendItem_SeparatorColor"
			.field static public literal string DescriptionAttributeLegendItem_SeriesName = "DescriptionAttributeLegendItem_SeriesName"
			.field static public literal string DescriptionAttributeLegendItem_SeriesPointIndex = "DescriptionAttributeLegendItem_SeriesPointIndex"
			.field static public literal string DescriptionAttributeLegendItem_Style = "DescriptionAttributeLegendItem_Style"
			.field static public literal string DescriptionAttributeLegendText = "DescriptionAttributeLegendText"
			.field static public literal string DescriptionAttributeLegendToolTip = "DescriptionAttributeLegendToolTip"
			.field static public literal string DescriptionAttributeLegendUrl = "DescriptionAttributeLegendUrl"
			.field static public literal string DescriptionAttributeLegend_Alignment = "DescriptionAttributeLegend_Alignment"
			.field static public literal string DescriptionAttributeLegend_AutoFitMinFontSize = "DescriptionAttributeLegend_AutoFitMinFontSize"
			.field static public literal string DescriptionAttributeLegend_AutoFitText = "DescriptionAttributeLegend_AutoFitText"
			.field static public literal string DescriptionAttributeLegend_CellColumns = "DescriptionAttributeLegend_CellColumns"
			.field static public literal string DescriptionAttributeLegend_CustomItems = "DescriptionAttributeLegend_CustomItems"
			.field static public literal string DescriptionAttributeLegend_DockInsideChartArea = "DescriptionAttributeLegend_DockInsideChartArea"
			.field static public literal string DescriptionAttributeLegend_DockToChartArea = "DescriptionAttributeLegend_DockToChartArea"
			.field static public literal string DescriptionAttributeLegend_Docking = "DescriptionAttributeLegend_Docking"
			.field static public literal string DescriptionAttributeLegend_Enabled = "DescriptionAttributeLegend_Enabled"
			.field static public literal string DescriptionAttributeLegend_EquallySpacedItems = "DescriptionAttributeLegend_EquallySpacedItems"
			.field static public literal string DescriptionAttributeLegend_Font = "DescriptionAttributeLegend_Font"
			.field static public literal string DescriptionAttributeLegend_HeaderSeparator = "DescriptionAttributeLegend_HeaderSeparator"
			.field static public literal string DescriptionAttributeLegend_HeaderSeparatorColor = "DescriptionAttributeLegend_HeaderSeparatorColor"
			.field static public literal string DescriptionAttributeLegend_InsideChartArea = "DescriptionAttributeLegend_InsideChartArea"
			.field static public literal string DescriptionAttributeLegend_InterlacedRows = "DescriptionAttributeLegend_InterlacedRows"
			.field static public literal string DescriptionAttributeLegend_InterlacedRowsColor = "DescriptionAttributeLegend_InterlacedRowsColor"
			.field static public literal string DescriptionAttributeLegend_ItemColumnSeparator = "DescriptionAttributeLegend_ItemColumnSeparator"
			.field static public literal string DescriptionAttributeLegend_ItemColumnSeparatorColor = "DescriptionAttributeLegend_ItemColumnSeparatorColor"
			.field static public literal string DescriptionAttributeLegend_ItemColumnSpacing = "DescriptionAttributeLegend_ItemColumnSpacing"
			.field static public literal string DescriptionAttributeLegend_Legend = "DescriptionAttributeLegend_Legend"
			.field static public literal string DescriptionAttributeLegend_LegendStyle = "DescriptionAttributeLegend_LegendStyle"
			.field static public literal string DescriptionAttributeLegend_MaxAutoSize = "DescriptionAttributeLegend_MaxAutoSize"
			.field static public literal string DescriptionAttributeLegend_Name = "DescriptionAttributeLegend_Name"
			.field static public literal string DescriptionAttributeLegend_Position = "DescriptionAttributeLegend_Position"
			.field static public literal string DescriptionAttributeLegend_Reversed = "DescriptionAttributeLegend_Reversed"
			.field static public literal string DescriptionAttributeLegend_TableStyle = "DescriptionAttributeLegend_TableStyle"
			.field static public literal string DescriptionAttributeLegend_TextWrapThreshold = "DescriptionAttributeLegend_TextWrapThreshold"
			.field static public literal string DescriptionAttributeLegend_Title = "DescriptionAttributeLegend_Title"
			.field static public literal string DescriptionAttributeLegend_TitleAlignment = "DescriptionAttributeLegend_TitleAlignment"
			.field static public literal string DescriptionAttributeLegend_TitleColor = "DescriptionAttributeLegend_TitleColor"
			.field static public literal string DescriptionAttributeLegend_TitleSeparator = "DescriptionAttributeLegend_TitleSeparator"
			.field static public literal string DescriptionAttributeLegend_TitleSeparatorColor = "DescriptionAttributeLegend_TitleSeparatorColor"
			.field static public literal string DescriptionAttributeLegends = "DescriptionAttributeLegends"
			.field static public literal string DescriptionAttributeLineAnnotation_LineAnnotation = "DescriptionAttributeLineAnnotation_LineAnnotation"
			.field static public literal string DescriptionAttributeLineColor = "DescriptionAttributeLineColor"
			.field static public literal string DescriptionAttributeLineDashStyle = "DescriptionAttributeLineDashStyle"
			.field static public literal string DescriptionAttributeLineWidth = "DescriptionAttributeLineWidth"
			.field static public literal string DescriptionAttributeLogarithmBase = "DescriptionAttributeLogarithmBase"
			.field static public literal string DescriptionAttributeLogarithmic = "DescriptionAttributeLogarithmic"
			.field static public literal string DescriptionAttributeMajorGrid = "DescriptionAttributeMajorGrid"
			.field static public literal string DescriptionAttributeMajorTickMark = "DescriptionAttributeMajorTickMark"
			.field static public literal string DescriptionAttributeMapAreaAttributes = "DescriptionAttributeMapAreaAttributes"
			.field static public literal string DescriptionAttributeMapArea_Coordinates = "DescriptionAttributeMapArea_Coordinates"
			.field static public literal string DescriptionAttributeMapArea_Custom = "DescriptionAttributeMapArea_Custom"
			.field static public literal string DescriptionAttributeMapArea_MapArea = "DescriptionAttributeMapArea_MapArea"
			.field static public literal string DescriptionAttributeMapArea_Name = "DescriptionAttributeMapArea_Name"
			.field static public literal string DescriptionAttributeMapArea_Shape = "DescriptionAttributeMapArea_Shape"
			.field static public literal string DescriptionAttributeMapAreas = "DescriptionAttributeMapAreas"
			.field static public literal string DescriptionAttributeMapAreasCollection_MapAreasCollection = "DescriptionAttributeMapAreasCollection_MapAreasCollection"
			.field static public literal string DescriptionAttributeMapEnabled = "DescriptionAttributeMapEnabled"
			.field static public literal string DescriptionAttributeMargin = "DescriptionAttributeMargin"
			.field static public literal string DescriptionAttributeMargins_Bottom = "DescriptionAttributeMargins_Bottom"
			.field static public literal string DescriptionAttributeMargins_Left = "DescriptionAttributeMargins_Left"
			.field static public literal string DescriptionAttributeMargins_Margins = "DescriptionAttributeMargins_Margins"
			.field static public literal string DescriptionAttributeMargins_Right = "DescriptionAttributeMargins_Right"
			.field static public literal string DescriptionAttributeMargins_Top = "DescriptionAttributeMargins_Top"
			.field static public literal string DescriptionAttributeMarkerBorderColor = "DescriptionAttributeMarkerBorderColor"
			.field static public literal string DescriptionAttributeMarkerBorderWidth = "DescriptionAttributeMarkerBorderWidth"
			.field static public literal string DescriptionAttributeMarkerColor3 = "DescriptionAttributeMarkerColor3"
			.field static public literal string DescriptionAttributeMarkerImage = "DescriptionAttributeMarkerImage"
			.field static public literal string DescriptionAttributeMarkerOverlapping = "DescriptionAttributeMarkerOverlapping"
			.field static public literal string DescriptionAttributeMarkerSize = "DescriptionAttributeMarkerSize"
			.field static public literal string DescriptionAttributeMarkerStyle4 = "DescriptionAttributeMarkerStyle4"
			.field static public literal string DescriptionAttributeMarksNextToAxis = "DescriptionAttributeMarksNextToAxis"
			.field static public literal string DescriptionAttributeMaxMovingDistance = "DescriptionAttributeMaxMovingDistance"
			.field static public literal string DescriptionAttributeMaximum = "DescriptionAttributeMaximum"
			.field static public literal string DescriptionAttributeMinMovingDistance = "DescriptionAttributeMinMovingDistance"
			.field static public literal string DescriptionAttributeMinimum = "DescriptionAttributeMinimum"
			.field static public literal string DescriptionAttributeMinorGrid = "DescriptionAttributeMinorGrid"
			.field static public literal string DescriptionAttributeMinorTickMark = "DescriptionAttributeMinorTickMark"
			.field static public literal string DescriptionAttributeMovingDirection = "DescriptionAttributeMovingDirection"
			.field static public literal string DescriptionAttributeMultiValueSeparator = "DescriptionAttributeMultiValueSeparator"
			.field static public literal string DescriptionAttributeMultiline = "DescriptionAttributeMultiline"
			.field static public literal string DescriptionAttributeName4 = "DescriptionAttributeName4"
			.field static public literal string DescriptionAttributeNamedImage_Image = "DescriptionAttributeNamedImage_Image"
			.field static public literal string DescriptionAttributeNamedImage_Name = "DescriptionAttributeNamedImage_Name"
			.field static public literal string DescriptionAttributeNamedImage_NamedImage = "DescriptionAttributeNamedImage_NamedImage"
			.field static public literal string DescriptionAttributeNamedImagesCollection_Item = "DescriptionAttributeNamedImagesCollection_Item"
			.field static public literal string DescriptionAttributeNoDataMessage = "DescriptionAttributeNoDataMessage"
			.field static public literal string DescriptionAttributePalette = "DescriptionAttributePalette"
			.field static public literal string DescriptionAttributePath = "DescriptionAttributePath"
			.field static public literal string DescriptionAttributePathPoints = "DescriptionAttributePathPoints"
			.field static public literal string DescriptionAttributePoint3D_PointF = "DescriptionAttributePoint3D_PointF"
			.field static public literal string DescriptionAttributePoint3D_X = "DescriptionAttributePoint3D_X"
			.field static public literal string DescriptionAttributePoint3D_Y = "DescriptionAttributePoint3D_Y"
			.field static public literal string DescriptionAttributePoint3D_Z = "DescriptionAttributePoint3D_Z"
			.field static public literal string DescriptionAttributePolygonAnnotation_PolygonAnnotation = "DescriptionAttributePolygonAnnotation_PolygonAnnotation"
			.field static public literal string DescriptionAttributePolylineAnnotation_PolylineAnnotation = "DescriptionAttributePolylineAnnotation_PolylineAnnotation"
			.field static public literal string DescriptionAttributePostBackValue = "DescriptionAttributePostBackValue"
			.field static public literal string DescriptionAttributePrintingManager_PrintDocument = "DescriptionAttributePrintingManager_PrintDocument"
			.field static public literal string DescriptionAttributeRectangleAnnotation_RectangleAnnotation = "DescriptionAttributeRectangleAnnotation_RectangleAnnotation"
			.field static public literal string DescriptionAttributeReverse = "DescriptionAttributeReverse"
			.field static public literal string DescriptionAttributeReverseSeriesOrder = "DescriptionAttributeReverseSeriesOrder"
			.field static public literal string DescriptionAttributeRight3 = "DescriptionAttributeRight3"
			.field static public literal string DescriptionAttributeRightToLeft = "DescriptionAttributeRightToLeft"
			.field static public literal string DescriptionAttributeScaleBreakStyle = "DescriptionAttributeScaleBreakStyle"
			.field static public literal string DescriptionAttributeScrollBar = "DescriptionAttributeScrollBar"
			.field static public literal string DescriptionAttributeScrollBarEventArgs_ButtonType = "DescriptionAttributeScrollBarEventArgs_ButtonType"
			.field static public literal string DescriptionAttributeScrollBarEventArgs_Handled = "DescriptionAttributeScrollBarEventArgs_Handled"
			.field static public literal string DescriptionAttributeScrollBarEventArgs_MousePositionX = "DescriptionAttributeScrollBarEventArgs_MousePositionX"
			.field static public literal string DescriptionAttributeScrollBarEventArgs_MousePositionY = "DescriptionAttributeScrollBarEventArgs_MousePositionY"
			.field static public literal string DescriptionAttributeSelected = "DescriptionAttributeSelected"
			.field static public literal string DescriptionAttributeSelectionPointsStyle = "DescriptionAttributeSelectionPointsStyle"
			.field static public literal string DescriptionAttributeSeriesCollection_Item = "DescriptionAttributeSeriesCollection_Item"
			.field static public literal string DescriptionAttributeSeriesCollection_SeriesCollection = "DescriptionAttributeSeriesCollection_SeriesCollection"
			.field static public literal string DescriptionAttributeSeries_ChartArea = "DescriptionAttributeSeries_ChartArea"
			.field static public literal string DescriptionAttributeSeries_EmptyPointStyle = "DescriptionAttributeSeries_EmptyPointStyle"
			.field static public literal string DescriptionAttributeSeries_Enabled = "DescriptionAttributeSeries_Enabled"
			.field static public literal string DescriptionAttributeSeries_Legend = "DescriptionAttributeSeries_Legend"
			.field static public literal string DescriptionAttributeSeries_MarkerStep = "DescriptionAttributeSeries_MarkerStep"
			.field static public literal string DescriptionAttributeSeries_Name = "DescriptionAttributeSeries_Name"
			.field static public literal string DescriptionAttributeSeries_Points = "DescriptionAttributeSeries_Points"
			.field static public literal string DescriptionAttributeSeries_Series = "DescriptionAttributeSeries_Series"
			.field static public literal string DescriptionAttributeSeries_SmartLabels = "DescriptionAttributeSeries_SmartLabels"
			.field static public literal string DescriptionAttributeSeries_Type = "DescriptionAttributeSeries_Type"
			.field static public literal string DescriptionAttributeSeries_ValueMemberX = "DescriptionAttributeSeries_ValueMemberX"
			.field static public literal string DescriptionAttributeSeries_ValueMembersY = "DescriptionAttributeSeries_ValueMembersY"
			.field static public literal string DescriptionAttributeSeries_XAxisType = "DescriptionAttributeSeries_XAxisType"
			.field static public literal string DescriptionAttributeSeries_XSubAxisName = "DescriptionAttributeSeries_XSubAxisName"
			.field static public literal string DescriptionAttributeSeries_XValueIndexed = "DescriptionAttributeSeries_XValueIndexed"
			.field static public literal string DescriptionAttributeSeries_XValueType = "DescriptionAttributeSeries_XValueType"
			.field static public literal string DescriptionAttributeSeries_YAxisType = "DescriptionAttributeSeries_YAxisType"
			.field static public literal string DescriptionAttributeSeries_YSubAxisName = "DescriptionAttributeSeries_YSubAxisName"
			.field static public literal string DescriptionAttributeSeries_YValueType = "DescriptionAttributeSeries_YValueType"
			.field static public literal string DescriptionAttributeSeries_YValuesPerPoint = "DescriptionAttributeSeries_YValuesPerPoint"
			.field static public literal string DescriptionAttributeShadowColor = "DescriptionAttributeShadowColor"
			.field static public literal string DescriptionAttributeShadowOffset = "DescriptionAttributeShadowOffset"
			.field static public literal string DescriptionAttributeShowInLegend = "DescriptionAttributeShowInLegend"
			.field static public literal string DescriptionAttributeShowLabelAsValue = "DescriptionAttributeShowLabelAsValue"
			.field static public literal string DescriptionAttributeSizeAlwaysRelative = "DescriptionAttributeSizeAlwaysRelative"
			.field static public literal string DescriptionAttributeSizeAlwaysRelative3 = "DescriptionAttributeSizeAlwaysRelative3"
			.field static public literal string DescriptionAttributeSmartLabels = "DescriptionAttributeSmartLabels"
			.field static public literal string DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle = "DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle"
			.field static public literal string DescriptionAttributeSmartLabels_SmartLabels = "DescriptionAttributeSmartLabels_SmartLabels"
			.field static public literal string DescriptionAttributeSoftShadows3 = "DescriptionAttributeSoftShadows3"
			.field static public literal string DescriptionAttributeStartCap3 = "DescriptionAttributeStartCap3"
			.field static public literal string DescriptionAttributeStartFromZero3 = "DescriptionAttributeStartFromZero3"
			.field static public literal string DescriptionAttributeStripLine_Interval = "DescriptionAttributeStripLine_Interval"
			.field static public literal string DescriptionAttributeStripLine_IntervalOffset = "DescriptionAttributeStripLine_IntervalOffset"
			.field static public literal string DescriptionAttributeStripLine_IntervalOffsetType = "DescriptionAttributeStripLine_IntervalOffsetType"
			.field static public literal string DescriptionAttributeStripLine_IntervalType = "DescriptionAttributeStripLine_IntervalType"
			.field static public literal string DescriptionAttributeStripLine_Name = "DescriptionAttributeStripLine_Name"
			.field static public literal string DescriptionAttributeStripLine_StripLine = "DescriptionAttributeStripLine_StripLine"
			.field static public literal string DescriptionAttributeStripLine_StripWidth = "DescriptionAttributeStripLine_StripWidth"
			.field static public literal string DescriptionAttributeStripLine_StripWidthType = "DescriptionAttributeStripLine_StripWidthType"
			.field static public literal string DescriptionAttributeStripLine_Title = "DescriptionAttributeStripLine_Title"
			.field static public literal string DescriptionAttributeStripLine_TitleAlignment = "DescriptionAttributeStripLine_TitleAlignment"
			.field static public literal string DescriptionAttributeStripLine_TitleColor = "DescriptionAttributeStripLine_TitleColor"
			.field static public literal string DescriptionAttributeStripLine_TitleLineAlignment = "DescriptionAttributeStripLine_TitleLineAlignment"
			.field static public literal string DescriptionAttributeStripLines = "DescriptionAttributeStripLines"
			.field static public literal string DescriptionAttributeStripLinesCollection_StripLinesCollection = "DescriptionAttributeStripLinesCollection_StripLinesCollection"
			.field static public literal string DescriptionAttributeSubAxes = "DescriptionAttributeSubAxes"
			.field static public literal string DescriptionAttributeSubAxisCollection_Item = "DescriptionAttributeSubAxisCollection_Item"
			.field static public literal string DescriptionAttributeSubAxisCollection_SubAxisCollection = "DescriptionAttributeSubAxisCollection_SubAxisCollection"
			.field static public literal string DescriptionAttributeSubAxis_LocationOffset = "DescriptionAttributeSubAxis_LocationOffset"
			.field static public literal string DescriptionAttributeSubAxis_Name = "DescriptionAttributeSubAxis_Name"
			.field static public literal string DescriptionAttributeSubAxis_ParentAxis = "DescriptionAttributeSubAxis_ParentAxis"
			.field static public literal string DescriptionAttributeSubAxis_SubAxis = "DescriptionAttributeSubAxis_SubAxis"
			.field static public literal string DescriptionAttributeSuppressCodeExceptions = "DescriptionAttributeSuppressCodeExceptions"
			.field static public literal string DescriptionAttributeSuppressExceptions = "DescriptionAttributeSuppressExceptions"
			.field static public literal string DescriptionAttributeTag = "DescriptionAttributeTag"
			.field static public literal string DescriptionAttributeText = "DescriptionAttributeText"
			.field static public literal string DescriptionAttributeTextAnnotation_AnnotationType = "DescriptionAttributeTextAnnotation_AnnotationType"
			.field static public literal string DescriptionAttributeTextAnnotation_TextAnnotation = "DescriptionAttributeTextAnnotation_TextAnnotation"
			.field static public literal string DescriptionAttributeTextAntiAliasingQuality = "DescriptionAttributeTextAntiAliasingQuality"
			.field static public literal string DescriptionAttributeTextFont = "DescriptionAttributeTextFont"
			.field static public literal string DescriptionAttributeTextFont4 = "DescriptionAttributeTextFont4"
			.field static public literal string DescriptionAttributeTextStyle = "DescriptionAttributeTextStyle"
			.field static public literal string DescriptionAttributeTickMark_Size = "DescriptionAttributeTickMark_Size"
			.field static public literal string DescriptionAttributeTickMark_Style = "DescriptionAttributeTickMark_Style"
			.field static public literal string DescriptionAttributeTickMark_TickMark = "DescriptionAttributeTickMark_TickMark"
			.field static public literal string DescriptionAttributeTitle5 = "DescriptionAttributeTitle5"
			.field static public literal string DescriptionAttributeTitle6 = "DescriptionAttributeTitle6"
			.field static public literal string DescriptionAttributeTitleAlignment = "DescriptionAttributeTitleAlignment"
			.field static public literal string DescriptionAttributeTitleBackColor = "DescriptionAttributeTitleBackColor"
			.field static public literal string DescriptionAttributeTitleColor = "DescriptionAttributeTitleColor"
			.field static public literal string DescriptionAttributeTitleFont = "DescriptionAttributeTitleFont"
			.field static public literal string DescriptionAttributeTitle_Alignment = "DescriptionAttributeTitle_Alignment"
			.field static public literal string DescriptionAttributeTitle_Color = "DescriptionAttributeTitle_Color"
			.field static public literal string DescriptionAttributeTitle_DockInsideChartArea = "DescriptionAttributeTitle_DockInsideChartArea"
			.field static public literal string DescriptionAttributeTitle_DockOffset = "DescriptionAttributeTitle_DockOffset"
			.field static public literal string DescriptionAttributeTitle_DockToChartArea = "DescriptionAttributeTitle_DockToChartArea"
			.field static public literal string DescriptionAttributeTitle_Docking = "DescriptionAttributeTitle_Docking"
			.field static public literal string DescriptionAttributeTitle_Font = "DescriptionAttributeTitle_Font"
			.field static public literal string DescriptionAttributeTitle_Name = "DescriptionAttributeTitle_Name"
			.field static public literal string DescriptionAttributeTitle_Position = "DescriptionAttributeTitle_Position"
			.field static public literal string DescriptionAttributeTitle_Text = "DescriptionAttributeTitle_Text"
			.field static public literal string DescriptionAttributeTitle_Visible = "DescriptionAttributeTitle_Visible"
			.field static public literal string DescriptionAttributeTitles = "DescriptionAttributeTitles"
			.field static public literal string DescriptionAttributeToolTip = "DescriptionAttributeToolTip"
			.field static public literal string DescriptionAttributeToolTipEventArgs_HitTestResult = "DescriptionAttributeToolTipEventArgs_HitTestResult"
			.field static public literal string DescriptionAttributeToolTipEventArgs_Text = "DescriptionAttributeToolTipEventArgs_Text"
			.field static public literal string DescriptionAttributeToolTipEventArgs_X = "DescriptionAttributeToolTipEventArgs_X"
			.field static public literal string DescriptionAttributeToolTipEventArgs_Y = "DescriptionAttributeToolTipEventArgs_Y"
			.field static public literal string DescriptionAttributeType = "DescriptionAttributeType"
			.field static public literal string DescriptionAttributeUrl = "DescriptionAttributeUrl"
			.field static public literal string DescriptionAttributeUserDefined = "DescriptionAttributeUserDefined"
			.field static public literal string DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation = "DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation"
			.field static public literal string DescriptionAttributeView = "DescriptionAttributeView"
			.field static public literal string DescriptionAttributeViewEventArgs_NewPosition = "DescriptionAttributeViewEventArgs_NewPosition"
			.field static public literal string DescriptionAttributeViewEventArgs_NewSize = "DescriptionAttributeViewEventArgs_NewSize"
			.field static public literal string DescriptionAttributeViewEventArgs_NewSizeType = "DescriptionAttributeViewEventArgs_NewSizeType"
			.field static public literal string DescriptionAttributeVisible = "DescriptionAttributeVisible"
			.field static public literal string DescriptionAttributeWidth = "DescriptionAttributeWidth"
			.field static public literal string DescriptionAttribute_TextOrientation = "DescriptionAttribute_TextOrientation"
			.field static public literal string DescriptionCustomAttributeBarLabelStyle = "DescriptionCustomAttributeBarLabelStyle"
			.field static public literal string DescriptionCustomAttributeBarsPriceUpColor = "DescriptionCustomAttributeBarsPriceUpColor"
			.field static public literal string DescriptionCustomAttributeBoxPlotPercentile = "DescriptionCustomAttributeBoxPlotPercentile"
			.field static public literal string DescriptionCustomAttributeBoxPlotSeries = "DescriptionCustomAttributeBoxPlotSeries"
			.field static public literal string DescriptionCustomAttributeBoxPlotShowAverage = "DescriptionCustomAttributeBoxPlotShowAverage"
			.field static public literal string DescriptionCustomAttributeBoxPlotShowMedian = "DescriptionCustomAttributeBoxPlotShowMedian"
			.field static public literal string DescriptionCustomAttributeBoxPlotShowUnusualValues = "DescriptionCustomAttributeBoxPlotShowUnusualValues"
			.field static public literal string DescriptionCustomAttributeBoxPlotWhiskerPercentile = "DescriptionCustomAttributeBoxPlotWhiskerPercentile"
			.field static public literal string DescriptionCustomAttributeBoxSize = "DescriptionCustomAttributeBoxSize"
			.field static public literal string DescriptionCustomAttributeBubbleMaxSize = "DescriptionCustomAttributeBubbleMaxSize"
			.field static public literal string DescriptionCustomAttributeBubbleScaleMax = "DescriptionCustomAttributeBubbleScaleMax"
			.field static public literal string DescriptionCustomAttributeBubbleScaleMin = "DescriptionCustomAttributeBubbleScaleMin"
			.field static public literal string DescriptionCustomAttributeBubbleUseSizeForLabel = "DescriptionCustomAttributeBubbleUseSizeForLabel"
			.field static public literal string DescriptionCustomAttributeCalloutLineColor = "DescriptionCustomAttributeCalloutLineColor"
			.field static public literal string DescriptionCustomAttributeCandlePriceUpColor = "DescriptionCustomAttributeCandlePriceUpColor"
			.field static public literal string DescriptionCustomAttributeCollectedColor = "DescriptionCustomAttributeCollectedColor"
			.field static public literal string DescriptionCustomAttributeCollectedLabel = "DescriptionCustomAttributeCollectedLabel"
			.field static public literal string DescriptionCustomAttributeCollectedLabelDefaultText = "DescriptionCustomAttributeCollectedLabelDefaultText"
			.field static public literal string DescriptionCustomAttributeCollectedLegendDefaultText = "DescriptionCustomAttributeCollectedLegendDefaultText"
			.field static public literal string DescriptionCustomAttributeCollectedLegendText = "DescriptionCustomAttributeCollectedLegendText"
			.field static public literal string DescriptionCustomAttributeCollectedSliceExploded = "DescriptionCustomAttributeCollectedSliceExploded"
			.field static public literal string DescriptionCustomAttributeCollectedThreshold = "DescriptionCustomAttributeCollectedThreshold"
			.field static public literal string DescriptionCustomAttributeCollectedThresholdUsePercent = "DescriptionCustomAttributeCollectedThresholdUsePercent"
			.field static public literal string DescriptionCustomAttributeCollectedToolTip = "DescriptionCustomAttributeCollectedToolTip"
			.field static public literal string DescriptionCustomAttributeDoughnutRadius = "DescriptionCustomAttributeDoughnutRadius"
			.field static public literal string DescriptionCustomAttributeDrawSideBySide = "DescriptionCustomAttributeDrawSideBySide"
			.field static public literal string DescriptionCustomAttributeDrawingStyle = "DescriptionCustomAttributeDrawingStyle"
			.field static public literal string DescriptionCustomAttributeEmptyPointValue = "DescriptionCustomAttributeEmptyPointValue"
			.field static public literal string DescriptionCustomAttributeErrorBarCenterMarkerStyle = "DescriptionCustomAttributeErrorBarCenterMarkerStyle"
			.field static public literal string DescriptionCustomAttributeErrorBarSeries = "DescriptionCustomAttributeErrorBarSeries"
			.field static public literal string DescriptionCustomAttributeErrorBarStyle = "DescriptionCustomAttributeErrorBarStyle"
			.field static public literal string DescriptionCustomAttributeErrorBarType = "DescriptionCustomAttributeErrorBarType"
			.field static public literal string DescriptionCustomAttributeFunnel3DDrawingStyle = "DescriptionCustomAttributeFunnel3DDrawingStyle"
			.field static public literal string DescriptionCustomAttributeFunnel3DRotationAngle = "DescriptionCustomAttributeFunnel3DRotationAngle"
			.field static public literal string DescriptionCustomAttributeFunnelInsideLabelAlignment = "DescriptionCustomAttributeFunnelInsideLabelAlignment"
			.field static public literal string DescriptionCustomAttributeFunnelLabelStyle = "DescriptionCustomAttributeFunnelLabelStyle"
			.field static public literal string DescriptionCustomAttributeFunnelMinPointHeight = "DescriptionCustomAttributeFunnelMinPointHeight"
			.field static public literal string DescriptionCustomAttributeFunnelNeckHeight = "DescriptionCustomAttributeFunnelNeckHeight"
			.field static public literal string DescriptionCustomAttributeFunnelNeckWidth = "DescriptionCustomAttributeFunnelNeckWidth"
			.field static public literal string DescriptionCustomAttributeFunnelOutsideLabelPlacement = "DescriptionCustomAttributeFunnelOutsideLabelPlacement"
			.field static public literal string DescriptionCustomAttributeFunnelPointGap = "DescriptionCustomAttributeFunnelPointGap"
			.field static public literal string DescriptionCustomAttributeFunnelStyle = "DescriptionCustomAttributeFunnelStyle"
			.field static public literal string DescriptionCustomAttributeIsXAxisQuantitive = "DescriptionCustomAttributeIsXAxisQuantitive"
			.field static public literal string DescriptionCustomAttributeKagiReversalAmount = "DescriptionCustomAttributeKagiReversalAmount"
			.field static public literal string DescriptionCustomAttributeLabelStyle = "DescriptionCustomAttributeLabelStyle"
			.field static public literal string DescriptionCustomAttributeLabelValueType = "DescriptionCustomAttributeLabelValueType"
			.field static public literal string DescriptionCustomAttributeLabelsHorizontalLineSize = "DescriptionCustomAttributeLabelsHorizontalLineSize"
			.field static public literal string DescriptionCustomAttributeLabelsRadialLineSize = "DescriptionCustomAttributeLabelsRadialLineSize"
			.field static public literal string DescriptionCustomAttributeLineTension = "DescriptionCustomAttributeLineTension"
			.field static public literal string DescriptionCustomAttributeMaxPixelPointWidth = "DescriptionCustomAttributeMaxPixelPointWidth"
			.field static public literal string DescriptionCustomAttributeMinPixelPointWidth = "DescriptionCustomAttributeMinPixelPointWidth"
			.field static public literal string DescriptionCustomAttributeMinimumRelativePieSize = "DescriptionCustomAttributeMinimumRelativePieSize"
			.field static public literal string DescriptionCustomAttributeNumberOfLinesInBreak = "DescriptionCustomAttributeNumberOfLinesInBreak"
			.field static public literal string DescriptionCustomAttributeOpenCloseStyle = "DescriptionCustomAttributeOpenCloseStyle"
			.field static public literal string DescriptionCustomAttributePieDonutExploded = "DescriptionCustomAttributePieDonutExploded"
			.field static public literal string DescriptionCustomAttributePieDrawingStyle = "DescriptionCustomAttributePieDrawingStyle"
			.field static public literal string DescriptionCustomAttributePieLabelStyle = "DescriptionCustomAttributePieLabelStyle"
			.field static public literal string DescriptionCustomAttributePieLineColor = "DescriptionCustomAttributePieLineColor"
			.field static public literal string DescriptionCustomAttributePieStartAngle = "DescriptionCustomAttributePieStartAngle"
			.field static public literal string DescriptionCustomAttributePixelPointDepth = "DescriptionCustomAttributePixelPointDepth"
			.field static public literal string DescriptionCustomAttributePixelPointGapDepth = "DescriptionCustomAttributePixelPointGapDepth"
			.field static public literal string DescriptionCustomAttributePixelPointWidth = "DescriptionCustomAttributePixelPointWidth"
			.field static public literal string DescriptionCustomAttributePointFigureBoxSize = "DescriptionCustomAttributePointFigureBoxSize"
			.field static public literal string DescriptionCustomAttributePointWidth = "DescriptionCustomAttributePointWidth"
			.field static public literal string DescriptionCustomAttributePolarAreaDrawingStyle = "DescriptionCustomAttributePolarAreaDrawingStyle"
			.field static public literal string DescriptionCustomAttributePolarCircularLabelsStyle = "DescriptionCustomAttributePolarCircularLabelsStyle"
			.field static public literal string DescriptionCustomAttributePolarDrawingStyle = "DescriptionCustomAttributePolarDrawingStyle"
			.field static public literal string DescriptionCustomAttributePriceDownColor = "DescriptionCustomAttributePriceDownColor"
			.field static public literal string DescriptionCustomAttributeProportionalSymbols = "DescriptionCustomAttributeProportionalSymbols"
			.field static public literal string DescriptionCustomAttributePyramid3DDrawingStyle = "DescriptionCustomAttributePyramid3DDrawingStyle"
			.field static public literal string DescriptionCustomAttributePyramid3DRotationAngle = "DescriptionCustomAttributePyramid3DRotationAngle"
			.field static public literal string DescriptionCustomAttributePyramidInsideLabelAlignment = "DescriptionCustomAttributePyramidInsideLabelAlignment"
			.field static public literal string DescriptionCustomAttributePyramidLabelStyle = "DescriptionCustomAttributePyramidLabelStyle"
			.field static public literal string DescriptionCustomAttributePyramidMinPointHeight = "DescriptionCustomAttributePyramidMinPointHeight"
			.field static public literal string DescriptionCustomAttributePyramidOutsideLabelPlacement = "DescriptionCustomAttributePyramidOutsideLabelPlacement"
			.field static public literal string DescriptionCustomAttributePyramidPointGap = "DescriptionCustomAttributePyramidPointGap"
			.field static public literal string DescriptionCustomAttributePyramidValueType = "DescriptionCustomAttributePyramidValueType"
			.field static public literal string DescriptionCustomAttributeRadarAreaDrawingStyle = "DescriptionCustomAttributeRadarAreaDrawingStyle"
			.field static public literal string DescriptionCustomAttributeRadarCircularLabelsStyle = "DescriptionCustomAttributeRadarCircularLabelsStyle"
			.field static public literal string DescriptionCustomAttributeRadarDrawingStyle = "DescriptionCustomAttributeRadarDrawingStyle"
			.field static public literal string DescriptionCustomAttributeRenkoUsedYValue = "DescriptionCustomAttributeRenkoUsedYValue"
			.field static public literal string DescriptionCustomAttributeReversalAmount = "DescriptionCustomAttributeReversalAmount"
			.field static public literal string DescriptionCustomAttributeShowMarkerLines = "DescriptionCustomAttributeShowMarkerLines"
			.field static public literal string DescriptionCustomAttributeShowOpenClose = "DescriptionCustomAttributeShowOpenClose"
			.field static public literal string DescriptionCustomAttributeStackedGroupName = "DescriptionCustomAttributeStackedGroupName"
			.field static public literal string DescriptionCustomAttributeThreeLineBreakUsedYValue = "DescriptionCustomAttributeThreeLineBreakUsedYValue"
			.field static public literal string DescriptionCustomAttributeUsedYValue = "DescriptionCustomAttributeUsedYValue"
			.field static public literal string DescriptionCustomAttributeUsedYValueHigh = "DescriptionCustomAttributeUsedYValueHigh"
			.field static public literal string DescriptionCustomAttributeUsedYValueLow = "DescriptionCustomAttributeUsedYValueLow"
			.field static public literal string DescriptionCustomAttribute_3DLabelLineSize = "DescriptionCustomAttribute_3DLabelLineSize"
			.field static public literal string DescriptionKeyWordAverageYValues = "DescriptionKeyWordAverageYValues"
			.field static public literal string DescriptionKeyWordAxisLabelDataPoint = "DescriptionKeyWordAxisLabelDataPoint"
			.field static public literal string DescriptionKeyWordFirstPointYValue = "DescriptionKeyWordFirstPointYValue"
			.field static public literal string DescriptionKeyWordIndexDataPoint = "DescriptionKeyWordIndexDataPoint"
			.field static public literal string DescriptionKeyWordIndexDataPoint2 = "DescriptionKeyWordIndexDataPoint2"
			.field static public literal string DescriptionKeyWordLabelDataPoint = "DescriptionKeyWordLabelDataPoint"
			.field static public literal string DescriptionKeyWordLastPointYValue = "DescriptionKeyWordLastPointYValue"
			.field static public literal string DescriptionKeyWordLegendText = "DescriptionKeyWordLegendText"
			.field static public literal string DescriptionKeyWordMaximumYValues = "DescriptionKeyWordMaximumYValues"
			.field static public literal string DescriptionKeyWordMinimumYValues = "DescriptionKeyWordMinimumYValues"
			.field static public literal string DescriptionKeyWordNameAverageYValues = "DescriptionKeyWordNameAverageYValues"
			.field static public literal string DescriptionKeyWordNameAxisLabelDataPoint = "DescriptionKeyWordNameAxisLabelDataPoint"
			.field static public literal string DescriptionKeyWordNameFirstPointYValue = "DescriptionKeyWordNameFirstPointYValue"
			.field static public literal string DescriptionKeyWordNameIndexDataPoint = "DescriptionKeyWordNameIndexDataPoint"
			.field static public literal string DescriptionKeyWordNameIndexTheDataPoint = "DescriptionKeyWordNameIndexTheDataPoint"
			.field static public literal string DescriptionKeyWordNameLabelDataPoint = "DescriptionKeyWordNameLabelDataPoint"
			.field static public literal string DescriptionKeyWordNameLastPointYValue = "DescriptionKeyWordNameLastPointYValue"
			.field static public literal string DescriptionKeyWordNameLegendText = "DescriptionKeyWordNameLegendText"
			.field static public literal string DescriptionKeyWordNameMaximumYValues = "DescriptionKeyWordNameMaximumYValues"
			.field static public literal string DescriptionKeyWordNameMinimumYValues = "DescriptionKeyWordNameMinimumYValues"
			.field static public literal string DescriptionKeyWordNameSeriesName = "DescriptionKeyWordNameSeriesName"
			.field static public literal string DescriptionKeyWordNameTotalYValues = "DescriptionKeyWordNameTotalYValues"
			.field static public literal string DescriptionKeyWordNameXValue = "DescriptionKeyWordNameXValue"
			.field static public literal string DescriptionKeyWordNameYValue = "DescriptionKeyWordNameYValue"
			.field static public literal string DescriptionKeyWordNameYValuePercentTotal = "DescriptionKeyWordNameYValuePercentTotal"
			.field static public literal string DescriptionKeyWordSeriesName = "DescriptionKeyWordSeriesName"
			.field static public literal string DescriptionKeyWordTotalYValues = "DescriptionKeyWordTotalYValues"
			.field static public literal string DescriptionKeyWordXValue = "DescriptionKeyWordXValue"
			.field static public literal string DescriptionKeyWordYValue = "DescriptionKeyWordYValue"
			.field static public literal string DescriptionKeyWordYValuePercentTotal = "DescriptionKeyWordYValuePercentTotal"
			.field static public literal string DescriptionNumberFormatTypeCurrency = "DescriptionNumberFormatTypeCurrency"
			.field static public literal string DescriptionNumberFormatTypeDecimal = "DescriptionNumberFormatTypeDecimal"
			.field static public literal string DescriptionNumberFormatTypeFixedPoint = "DescriptionNumberFormatTypeFixedPoint"
			.field static public literal string DescriptionNumberFormatTypeGeneral = "DescriptionNumberFormatTypeGeneral"
			.field static public literal string DescriptionNumberFormatTypeNumber = "DescriptionNumberFormatTypeNumber"
			.field static public literal string DescriptionNumberFormatTypePercent = "DescriptionNumberFormatTypePercent"
			.field static public literal string DescriptionNumberFormatTypeScientific = "DescriptionNumberFormatTypeScientific"
			.field static public literal string DescriptionToolTipCustomFormatCharacters = "DescriptionToolTipCustomFormatCharacters"
			.field static public literal string DescriptionTypeCustom = "DescriptionTypeCustom"
			.field static public literal string DescriptionTypeEmpty = "DescriptionTypeEmpty"
			.field static public literal string DescriptionTypeNone = "DescriptionTypeNone"
			.field static public literal string DescriptionTypePoint = "DescriptionTypePoint"
			.field static public literal string DiagnosticActivityError = "DiagnosticActivityError"
			.field static public literal string DiagnosticActivityHeader = "DiagnosticActivityHeader"
			.field static public literal string DiagnosticActivityMessage = "DiagnosticActivityMessage"
			.field static public literal string DiagnosticActivityTime = "DiagnosticActivityTime"
			.field static public literal string DiagnosticChartImageDeleted = "DiagnosticChartImageDeleted"
			.field static public literal string DiagnosticChartImageSaved = "DiagnosticChartImageSaved"
			.field static public literal string DiagnosticChartImageSavedPrivate = "DiagnosticChartImageSavedPrivate"
			.field static public literal string DiagnosticChartImageServed = "DiagnosticChartImageServed"
			.field static public literal string DiagnosticChartImageServedFail = "DiagnosticChartImageServedFail"
			.field static public literal string DiagnosticChartImageServedFailNotFound = "DiagnosticChartImageServedFailNotFound"
			.field static public literal string DiagnosticChartImageServedFailPrivacyFail = "DiagnosticChartImageServedFailPrivacyFail"
			.field static public literal string DiagnosticHeader = "DiagnosticHeader"
			.field static public literal string DiagnosticQueueStateAccess = "DiagnosticQueueStateAccess"
			.field static public literal string DiagnosticQueueStateAccessFail = "DiagnosticQueueStateAccessFail"
			.field static public literal string DiagnosticQueueStateAccessInfo = "DiagnosticQueueStateAccessInfo"
			.field static public literal string DiagnosticQueueStateAccessOK = "DiagnosticQueueStateAccessOK"
			.field static public literal string DiagnosticQueueStateHeader = "DiagnosticQueueStateHeader"
			.field static public literal string DiagnosticQueueStateName = "DiagnosticQueueStateName"
			.field static public literal string DiagnosticSettingsConfig = "DiagnosticSettingsConfig"
			.field static public literal string DiagnosticSettingsHeader = "DiagnosticSettingsHeader"
			.field static public literal string DiagnosticSettingsInfo = "DiagnosticSettingsInfo"
			.field static public literal string DiagnosticSettingsKey = "DiagnosticSettingsKey"
			.field static public literal string DiagnosticSettingsValue = "DiagnosticSettingsValue"
			.field static public literal string EvenLogMessageChartImageFileTimeToLive = "EvenLogMessageChartImageFileTimeToLive"
			.field static public literal string Exception3DChartPointsXValuesUnsorted = "Exception3DChartPointsXValuesUnsorted"
			.field static public literal string Exception3DPieLabelsIndexInvalid = "Exception3DPieLabelsIndexInvalid"
			.field static public literal string Exception3DSplineY1ValueIsLessThenY2 = "Exception3DSplineY1ValueIsLessThenY2"
			.field static public literal string ExceptionAngleRangeInvalid = "ExceptionAngleRangeInvalid"
			.field static public literal string ExceptionAnnotationAnchorOffsetInvalid = "ExceptionAnnotationAnchorOffsetInvalid"
			.field static public literal string ExceptionAnnotationArrowSizeIsZero = "ExceptionAnnotationArrowSizeIsZero"
			.field static public literal string ExceptionAnnotationArrowSizeMustBeLessThen100 = "ExceptionAnnotationArrowSizeMustBeLessThen100"
			.field static public literal string ExceptionAnnotationArrowStyleUnknown = "ExceptionAnnotationArrowStyleUnknown"
			.field static public literal string ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty = "ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty"
			.field static public literal string ExceptionAnnotationGroupedAxisMustBeEmpty = "ExceptionAnnotationGroupedAxisMustBeEmpty"
			.field static public literal string ExceptionAnnotationGroupedUnableToStartPlacement = "ExceptionAnnotationGroupedUnableToStartPlacement"
			.field static public literal string ExceptionAnnotationLineWidthIsNegative = "ExceptionAnnotationLineWidthIsNegative"
			.field static public literal string ExceptionAnnotationNameAlreadyExistsInCollection = "ExceptionAnnotationNameAlreadyExistsInCollection"
			.field static public literal string ExceptionAnnotationNameIsEmpty = "ExceptionAnnotationNameIsEmpty"
			.field static public literal string ExceptionAnnotationNameIsNotUnique = "ExceptionAnnotationNameIsNotUnique"
			.field static public literal string ExceptionAnnotationNameNotFound = "ExceptionAnnotationNameNotFound"
			.field static public literal string ExceptionAnnotationNotInCollection = "ExceptionAnnotationNotInCollection"
			.field static public literal string ExceptionAnnotationPathAddLineAsSegmentsInvalid = "ExceptionAnnotationPathAddLineAsSegmentsInvalid"
			.field static public literal string ExceptionAttributeDrawSideBySideInvalid = "ExceptionAttributeDrawSideBySideInvalid"
			.field static public literal string ExceptionAttributeInvalidFormat = "ExceptionAttributeInvalidFormat"
			.field static public literal string ExceptionAttributeNameIsEmpty = "ExceptionAttributeNameIsEmpty"
			.field static public literal string ExceptionAttributeNameIsNotUnique = "ExceptionAttributeNameIsNotUnique"
			.field static public literal string ExceptionAttributeUnableToDelete = "ExceptionAttributeUnableToDelete"
			.field static public literal string ExceptionAxisDynamicIntervalCalculationFailed = "ExceptionAxisDynamicIntervalCalculationFailed"
			.field static public literal string ExceptionAxisIntervalDecreasingFailed = "ExceptionAxisIntervalDecreasingFailed"
			.field static public literal string ExceptionAxisIntervalIncreasingFailed = "ExceptionAxisIntervalIncreasingFailed"
			.field static public literal string ExceptionAxisLabelFontAngleInvalid = "ExceptionAxisLabelFontAngleInvalid"
			.field static public literal string ExceptionAxisLabelIndexIsNegative = "ExceptionAxisLabelIndexIsNegative"
			.field static public literal string ExceptionAxisLabelRowIndexIsNegative = "ExceptionAxisLabelRowIndexIsNegative"
			.field static public literal string ExceptionAxisLabelRowIndexMustBe1Or2 = "ExceptionAxisLabelRowIndexMustBe1Or2"
			.field static public literal string ExceptionAxisLabelsAutoFitMaxFontSizeInvalid = "ExceptionAxisLabelsAutoFitMaxFontSizeInvalid"
			.field static public literal string ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid = "ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid"
			.field static public literal string ExceptionAxisLabelsIntervalTypeUnsupported = "ExceptionAxisLabelsIntervalTypeUnsupported"
			.field static public literal string ExceptionAxisMinimumMaximumInvalid = "ExceptionAxisMinimumMaximumInvalid"
			.field static public literal string ExceptionAxisScaleAutoIntervalInvalid = "ExceptionAxisScaleAutoIntervalInvalid"
			.field static public literal string ExceptionAxisScaleBreaksCollapsibleSpaceInvalid = "ExceptionAxisScaleBreaksCollapsibleSpaceInvalid"
			.field static public literal string ExceptionAxisScaleBreaksLineWidthInvalid = "ExceptionAxisScaleBreaksLineWidthInvalid"
			.field static public literal string ExceptionAxisScaleBreaksNumberInvalid = "ExceptionAxisScaleBreaksNumberInvalid"
			.field static public literal string ExceptionAxisScaleBreaksSpacingInvalid = "ExceptionAxisScaleBreaksSpacingInvalid"
			.field static public literal string ExceptionAxisScaleIntervalIsLessThen1Year = "ExceptionAxisScaleIntervalIsLessThen1Year"
			.field static public literal string ExceptionAxisScaleIntervalIsZero = "ExceptionAxisScaleIntervalIsZero"
			.field static public literal string ExceptionAxisScaleLogarithmBaseInvalid = "ExceptionAxisScaleLogarithmBaseInvalid"
			.field static public literal string ExceptionAxisScaleLogarithmicNegativeValues = "ExceptionAxisScaleLogarithmicNegativeValues"
			.field static public literal string ExceptionAxisScaleMinimumMaximumInvalid = "ExceptionAxisScaleMinimumMaximumInvalid"
			.field static public literal string ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint = "ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint"
			.field static public literal string ExceptionAxisScalePositionInvalid = "ExceptionAxisScalePositionInvalid"
			.field static public literal string ExceptionAxisScalePositionToValueCallFailed = "ExceptionAxisScalePositionToValueCallFailed"
			.field static public literal string ExceptionAxisScaleSegmentsPositionInvalid = "ExceptionAxisScaleSegmentsPositionInvalid"
			.field static public literal string ExceptionAxisScaleSegmentsSizeInvalid = "ExceptionAxisScaleSegmentsSizeInvalid"
			.field static public literal string ExceptionAxisScaleSegmentsSpacingInvalid = "ExceptionAxisScaleSegmentsSpacingInvalid"
			.field static public literal string ExceptionAxisSeriesNotAligned = "ExceptionAxisSeriesNotAligned"
			.field static public literal string ExceptionAxisStackedChartsDataPointsNumberMismatch = "ExceptionAxisStackedChartsDataPointsNumberMismatch"
			.field static public literal string ExceptionAxisWidthIsNegative = "ExceptionAxisWidthIsNegative"
			.field static public literal string ExceptionBackSecondaryColorIsTransparent = "ExceptionBackSecondaryColorIsTransparent"
			.field static public literal string ExceptionBorderTypeHasNoInterface = "ExceptionBorderTypeHasNoInterface"
			.field static public literal string ExceptionBorderTypeNameIsNotUnique = "ExceptionBorderTypeNameIsNotUnique"
			.field static public literal string ExceptionBorderTypeRegistryUnsupportedType = "ExceptionBorderTypeRegistryUnsupportedType"
			.field static public literal string ExceptionBorderTypeUnknown = "ExceptionBorderTypeUnknown"
			.field static public literal string ExceptionBorderWidthIsNegative = "ExceptionBorderWidthIsNegative"
			.field static public literal string ExceptionBorderWidthIsNotPositive = "ExceptionBorderWidthIsNotPositive"
			.field static public literal string ExceptionBorderWidthIsZero = "ExceptionBorderWidthIsZero"
			.field static public literal string ExceptionChartArea3DInclinationInvalid = "ExceptionChartArea3DInclinationInvalid"
			.field static public literal string ExceptionChartArea3DPerspectiveInvalid = "ExceptionChartArea3DPerspectiveInvalid"
			.field static public literal string ExceptionChartArea3DPointsDepthInvalid = "ExceptionChartArea3DPointsDepthInvalid"
			.field static public literal string ExceptionChartArea3DPointsGapInvalid = "ExceptionChartArea3DPointsGapInvalid"
			.field static public literal string ExceptionChartArea3DRotationInvalid = "ExceptionChartArea3DRotationInvalid"
			.field static public literal string ExceptionChartArea3DWallWidthInvalid = "ExceptionChartArea3DWallWidthInvalid"
			.field static public literal string ExceptionChartAreaAddedIsNotUnique = "ExceptionChartAreaAddedIsNotUnique"
			.field static public literal string ExceptionChartAreaAlreadyExistsInCollection = "ExceptionChartAreaAlreadyExistsInCollection"
			.field static public literal string ExceptionChartAreaAlreadyExistsShort = "ExceptionChartAreaAlreadyExistsShort"
			.field static public literal string ExceptionChartAreaAxisScaleLogarithmicUnsuitable = "ExceptionChartAreaAxisScaleLogarithmicUnsuitable"
			.field static public literal string ExceptionChartAreaChartTypesCanNotCombine = "ExceptionChartAreaChartTypesCanNotCombine"
			.field static public literal string ExceptionChartAreaInsertedHasWrongType = "ExceptionChartAreaInsertedHasWrongType"
			.field static public literal string ExceptionChartAreaInsertedIsNotUnique = "ExceptionChartAreaInsertedIsNotUnique"
			.field static public literal string ExceptionChartAreaNameIsEmpty = "ExceptionChartAreaNameIsEmpty"
			.field static public literal string ExceptionChartAreaNameReferenceInvalid = "ExceptionChartAreaNameReferenceInvalid"
			.field static public literal string ExceptionChartAreaObjectRequired = "ExceptionChartAreaObjectRequired"
			.field static public literal string ExceptionChartAreaSeriesNotFound = "ExceptionChartAreaSeriesNotFound"
			.field static public literal string ExceptionChartBorderIsNegative = "ExceptionChartBorderIsNegative"
			.field static public literal string ExceptionChartCanNotCombine = "ExceptionChartCanNotCombine"
			.field static public literal string ExceptionChartCompressionInvalid = "ExceptionChartCompressionInvalid"
			.field static public literal string ExceptionChartDataPointsAlignmentFaild = "ExceptionChartDataPointsAlignmentFaild"
			.field static public literal string ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid = "ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid"
			.field static public literal string ExceptionChartDataPointsInsertionFailedYValuesEmpty = "ExceptionChartDataPointsInsertionFailedYValuesEmpty"
			.field static public literal string ExceptionChartHeightIsNotInPixels = "ExceptionChartHeightIsNotInPixels"
			.field static public literal string ExceptionChartOutOfLimits = "ExceptionChartOutOfLimits"
			.field static public literal string ExceptionChartPictureUnsupportedType = "ExceptionChartPictureUnsupportedType"
			.field static public literal string ExceptionChartPreviewNotAvailable = "ExceptionChartPreviewNotAvailable"
			.field static public literal string ExceptionChartPreviewNotAvailableShort = "ExceptionChartPreviewNotAvailableShort"
			.field static public literal string ExceptionChartSerializerBinaryFromatInvalid = "ExceptionChartSerializerBinaryFromatInvalid"
			.field static public literal string ExceptionChartSerializerBinaryHashCodeDuplicate = "ExceptionChartSerializerBinaryHashCodeDuplicate"
			.field static public literal string ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported = "ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported"
			.field static public literal string ExceptionChartSerializerBinaryTypeUnsupported = "ExceptionChartSerializerBinaryTypeUnsupported"
			.field static public literal string ExceptionChartSerializerClassNameUndefined = "ExceptionChartSerializerClassNameUndefined"
			.field static public literal string ExceptionChartSerializerContentFlagUnsupported = "ExceptionChartSerializerContentFlagUnsupported"
			.field static public literal string ExceptionChartSerializerContentStringFormatInvalid = "ExceptionChartSerializerContentStringFormatInvalid"
			.field static public literal string ExceptionChartSerializerDefaultConstructorUndefined = "ExceptionChartSerializerDefaultConstructorUndefined"
			.field static public literal string ExceptionChartSerializerDestinationObjectInvalid = "ExceptionChartSerializerDestinationObjectInvalid"
			.field static public literal string ExceptionChartSerializerPropertyNameUndefined = "ExceptionChartSerializerPropertyNameUndefined"
			.field static public literal string ExceptionChartSerializerPropertyNameUnknown = "ExceptionChartSerializerPropertyNameUnknown"
			.field static public literal string ExceptionChartSerializerPropertyNotFound = "ExceptionChartSerializerPropertyNotFound"
			.field static public literal string ExceptionChartSerializerReaderObjectInvalid = "ExceptionChartSerializerReaderObjectInvalid"
			.field static public literal string ExceptionChartSerializerSourceObjectInvalid = "ExceptionChartSerializerSourceObjectInvalid"
			.field static public literal string ExceptionChartSerializerTypeUnsupported = "ExceptionChartSerializerTypeUnsupported"
			.field static public literal string ExceptionChartSerializerUnsupportedType = "ExceptionChartSerializerUnsupportedType"
			.field static public literal string ExceptionChartSerializerWriterObjectInvalid = "ExceptionChartSerializerWriterObjectInvalid"
			.field static public literal string ExceptionChartTitleAddedIsNotUnique = "ExceptionChartTitleAddedIsNotUnique"
			.field static public literal string ExceptionChartTitleDockedChartAreaIsMissing = "ExceptionChartTitleDockedChartAreaIsMissing"
			.field static public literal string ExceptionChartTitleSetIsNotUnique = "ExceptionChartTitleSetIsNotUnique"
			.field static public literal string ExceptionChartTypeCanNotCombine = "ExceptionChartTypeCanNotCombine"
			.field static public literal string ExceptionChartTypeHasNoInterface = "ExceptionChartTypeHasNoInterface"
			.field static public literal string ExceptionChartTypeNameIsNotUnique = "ExceptionChartTypeNameIsNotUnique"
			.field static public literal string ExceptionChartTypeRegistryUnsupportedType = "ExceptionChartTypeRegistryUnsupportedType"
			.field static public literal string ExceptionChartTypeRequiresYValues = "ExceptionChartTypeRequiresYValues"
			.field static public literal string ExceptionChartTypeSecondaryXAxisUnsupported = "ExceptionChartTypeSecondaryXAxisUnsupported"
			.field static public literal string ExceptionChartTypeSecondaryYAxisUnsupported = "ExceptionChartTypeSecondaryYAxisUnsupported"
			.field static public literal string ExceptionChartTypeUnknown = "ExceptionChartTypeUnknown"
			.field static public literal string ExceptionChartWidthIsNotInPixels = "ExceptionChartWidthIsNotInPixels"
			.field static public literal string ExceptionColumnNameNotFound = "ExceptionColumnNameNotFound"
			.field static public literal string ExceptionCursorIntervalOffsetIsNegative = "ExceptionCursorIntervalOffsetIsNegative"
			.field static public literal string ExceptionCursorLineWidthIsNegative = "ExceptionCursorLineWidthIsNegative"
			.field static public literal string ExceptionCustomAttributeAngleOutOfRange = "ExceptionCustomAttributeAngleOutOfRange"
			.field static public literal string ExceptionCustomAttributeDefaultValueTypeInvalid = "ExceptionCustomAttributeDefaultValueTypeInvalid"
			.field static public literal string ExceptionCustomAttributeIsNotInRange0to1 = "ExceptionCustomAttributeIsNotInRange0to1"
			.field static public literal string ExceptionCustomAttributeIsNotInRange0to100 = "ExceptionCustomAttributeIsNotInRange0to100"
			.field static public literal string ExceptionCustomAttributeIsNotInRange0to50 = "ExceptionCustomAttributeIsNotInRange0to50"
			.field static public literal string ExceptionCustomAttributeIsNotLargerThenZiro = "ExceptionCustomAttributeIsNotLargerThenZiro"
			.field static public literal string ExceptionCustomAttributeMustBeBiggerThenValue = "ExceptionCustomAttributeMustBeBiggerThenValue"
			.field static public literal string ExceptionCustomAttributeMustBeInRange = "ExceptionCustomAttributeMustBeInRange"
			.field static public literal string ExceptionCustomAttributeMustBeMoreThenValue = "ExceptionCustomAttributeMustBeMoreThenValue"
			.field static public literal string ExceptionCustomAttributeSeriesNameNotFound = "ExceptionCustomAttributeSeriesNameNotFound"
			.field static public literal string ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid = "ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid"
			.field static public literal string ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid = "ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid"
			.field static public literal string ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported = "ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported"
			.field static public literal string ExceptionCustomAttributeTypeUnsupported = "ExceptionCustomAttributeTypeUnsupported"
			.field static public literal string ExceptionCustomAttributeValueInvalid = "ExceptionCustomAttributeValueInvalid"
			.field static public literal string ExceptionCustomAttributeValueInvalid2 = "ExceptionCustomAttributeValueInvalid2"
			.field static public literal string ExceptionCustomAttributesRegistryUnsupportedType = "ExceptionCustomAttributesRegistryUnsupportedType"
			.field static public literal string ExceptionCustomLabelAddedHasWrongType = "ExceptionCustomLabelAddedHasWrongType"
			.field static public literal string ExceptionCustomLabelInsertedHasWrongType = "ExceptionCustomLabelInsertedHasWrongType"
			.field static public literal string ExceptionDataBindSeriesGroupByParameterIsEmpty = "ExceptionDataBindSeriesGroupByParameterIsEmpty"
			.field static public literal string ExceptionDataBindSeriesToString = "ExceptionDataBindSeriesToString"
			.field static public literal string ExceptionDataBindXValuesToString = "ExceptionDataBindXValuesToString"
			.field static public literal string ExceptionDataBindYValuesToString = "ExceptionDataBindYValuesToString"
			.field static public literal string ExceptionDataManager100StackedSeriesPointsNumeberMismatch = "ExceptionDataManager100StackedSeriesPointsNumeberMismatch"
			.field static public literal string ExceptionDataManagerUnsupportedType = "ExceptionDataManagerUnsupportedType"
			.field static public literal string ExceptionDataManipulatorGroupedSeriesNotSorted = "ExceptionDataManipulatorGroupedSeriesNotSorted"
			.field static public literal string ExceptionDataManipulatorGroupingFormulaAlreadyDefined = "ExceptionDataManipulatorGroupingFormulaAlreadyDefined"
			.field static public literal string ExceptionDataManipulatorGroupingFormulaFormatInvalid = "ExceptionDataManipulatorGroupingFormulaFormatInvalid"
			.field static public literal string ExceptionDataManipulatorGroupingFormulaNameInvalid = "ExceptionDataManipulatorGroupingFormulaNameInvalid"
			.field static public literal string ExceptionDataManipulatorGroupingFormulaUndefined = "ExceptionDataManipulatorGroupingFormulaUndefined"
			.field static public literal string ExceptionDataManipulatorGroupingFormulaUnsupported = "ExceptionDataManipulatorGroupingFormulaUnsupported"
			.field static public literal string ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch = "ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch"
			.field static public literal string ExceptionDataManipulatorGroupingInputSeriesUndefined = "ExceptionDataManipulatorGroupingInputSeriesUndefined"
			.field static public literal string ExceptionDataManipulatorIndexFormatInvalid = "ExceptionDataManipulatorIndexFormatInvalid"
			.field static public literal string ExceptionDataManipulatorIndexUndefined = "ExceptionDataManipulatorIndexUndefined"
			.field static public literal string ExceptionDataManipulatorPointCountIsZero = "ExceptionDataManipulatorPointCountIsZero"
			.field static public literal string ExceptionDataManipulatorYValuesIndexExceeded = "ExceptionDataManipulatorYValuesIndexExceeded"
			.field static public literal string ExceptionDataPointBindingYValueNotSpecified = "ExceptionDataPointBindingYValueNotSpecified"
			.field static public literal string ExceptionDataPointConverterInvalidSorting = "ExceptionDataPointConverterInvalidSorting"
			.field static public literal string ExceptionDataPointConverterUnavailableSorting = "ExceptionDataPointConverterUnavailableSorting"
			.field static public literal string ExceptionDataPointConverterWrongTypes = "ExceptionDataPointConverterWrongTypes"
			.field static public literal string ExceptionDataPointInsertionNoDataSource = "ExceptionDataPointInsertionNoDataSource"
			.field static public literal string ExceptionDataPointInsertionXValuesQtyIsLessYValues = "ExceptionDataPointInsertionXValuesQtyIsLessYValues"
			.field static public literal string ExceptionDataPointInsertionYValueNotSpecified = "ExceptionDataPointInsertionYValueNotSpecified"
			.field static public literal string ExceptionDataPointValueNameInvalid = "ExceptionDataPointValueNameInvalid"
			.field static public literal string ExceptionDataPointValueNameYIndexIsNotPositive = "ExceptionDataPointValueNameYIndexIsNotPositive"
			.field static public literal string ExceptionDataPointValueNameYIndexOutOfRange = "ExceptionDataPointValueNameYIndexOutOfRange"
			.field static public literal string ExceptionDataPointYValueStringFormat = "ExceptionDataPointYValueStringFormat"
			.field static public literal string ExceptionDataPointYValuesBindingCountMismatch = "ExceptionDataPointYValuesBindingCountMismatch"
			.field static public literal string ExceptionDataPointYValuesCountMismatch = "ExceptionDataPointYValuesCountMismatch"
			.field static public literal string ExceptionDataPointYValuesSettingCountMismatch = "ExceptionDataPointYValuesSettingCountMismatch"
			.field static public literal string ExceptionDataSeriesChartAreaInvalid = "ExceptionDataSeriesChartAreaInvalid"
			.field static public literal string ExceptionDataSeriesKeywordFormatInvalid = "ExceptionDataSeriesKeywordFormatInvalid"
			.field static public literal string ExceptionDataSeriesNameIsEmpty = "ExceptionDataSeriesNameIsEmpty"
			.field static public literal string ExceptionDataSeriesNameNotFound = "ExceptionDataSeriesNameNotFound"
			.field static public literal string ExceptionDataSeriesObjectRequired = "ExceptionDataSeriesObjectRequired"
			.field static public literal string ExceptionDataSeriesPointTypeUnsupported = "ExceptionDataSeriesPointTypeUnsupported"
			.field static public literal string ExceptionDataSeriesYValueIndexNotExists = "ExceptionDataSeriesYValueIndexNotExists"
			.field static public literal string ExceptionDataSeriesYValueNumberInvalid = "ExceptionDataSeriesYValueNumberInvalid"
			.field static public literal string ExceptionDataSeriesYValuesPerPointIsZero = "ExceptionDataSeriesYValuesPerPointIsZero"
			.field static public literal string ExceptionDoughnutCollectedColorInvalidFormat = "ExceptionDoughnutCollectedColorInvalidFormat"
			.field static public literal string ExceptionDoughnutCollectedThresholdInvalidFormat = "ExceptionDoughnutCollectedThresholdInvalidFormat"
			.field static public literal string ExceptionDoughnutCollectedThresholdInvalidRange = "ExceptionDoughnutCollectedThresholdInvalidRange"
			.field static public literal string ExceptionDoughnutCollectedThresholdUsePercentInvalid = "ExceptionDoughnutCollectedThresholdUsePercentInvalid"
			.field static public literal string ExceptionDoughnutNullReference = "ExceptionDoughnutNullReference"
			.field static public literal string ExceptionDoughnutThresholdInvalid = "ExceptionDoughnutThresholdInvalid"
			.field static public literal string ExceptionEditorChartTypeRegistryServiceInObjectInaccessible = "ExceptionEditorChartTypeRegistryServiceInObjectInaccessible"
			.field static public literal string ExceptionEditorChartTypeRegistryServiceInaccessible = "ExceptionEditorChartTypeRegistryServiceInaccessible"
			.field static public literal string ExceptionEditorContectInstantsIsNotChartObject = "ExceptionEditorContectInstantsIsNotChartObject"
			.field static public literal string ExceptionEditorMultipleSeriesEditiingUnsupported = "ExceptionEditorMultipleSeriesEditiingUnsupported"
			.field static public literal string ExceptionEditorUITypeEditorInapplicable = "ExceptionEditorUITypeEditorInapplicable"
			.field static public literal string ExceptionEditorUITypeEditorInt32ApplicableOnly = "ExceptionEditorUITypeEditorInt32ApplicableOnly"
			.field static public literal string ExceptionElementPositionArgumentOutOfRange = "ExceptionElementPositionArgumentOutOfRange"
			.field static public literal string ExceptionElementPositionConverter = "ExceptionElementPositionConverter"
			.field static public literal string ExceptionEnumInvalid = "ExceptionEnumInvalid"
			.field static public literal string ExceptionErrorBarParameterUndefined = "ExceptionErrorBarParameterUndefined"
			.field static public literal string ExceptionErrorBarTypeFormatInvalid = "ExceptionErrorBarTypeFormatInvalid"
			.field static public literal string ExceptionErrorBarTypeInvalid = "ExceptionErrorBarTypeInvalid"
			.field static public literal string ExceptionFastPointMarkerStyleUnknown = "ExceptionFastPointMarkerStyleUnknown"
			.field static public literal string ExceptionForecastingDegreeInvalid = "ExceptionForecastingDegreeInvalid"
			.field static public literal string ExceptionForecastingExponentialRegressionHasZeroYValues = "ExceptionForecastingExponentialRegressionHasZeroYValues"
			.field static public literal string ExceptionForecastingNotEnoughDataPoints = "ExceptionForecastingNotEnoughDataPoints"
			.field static public literal string ExceptionForecastingPowerRegressionHasZeroYValues = "ExceptionForecastingPowerRegressionHasZeroYValues"
			.field static public literal string ExceptionFormulaDataFormatInvalid = "ExceptionFormulaDataFormatInvalid"
			.field static public literal string ExceptionFormulaDataItemsNumberMismatch = "ExceptionFormulaDataItemsNumberMismatch"
			.field static public literal string ExceptionFormulaDataItemsNumberMismatch2 = "ExceptionFormulaDataItemsNumberMismatch2"
			.field static public literal string ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect = "ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect"
			.field static public literal string ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints = "ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints"
			.field static public literal string ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues = "ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues"
			.field static public literal string ExceptionFormulaDataSeriesNameNotFound = "ExceptionFormulaDataSeriesNameNotFound"
			.field static public literal string ExceptionFormulaDataSeriesNameNotFoundInCollection = "ExceptionFormulaDataSeriesNameNotFoundInCollection"
			.field static public literal string ExceptionFormulaInputOutputSeriesMismatch = "ExceptionFormulaInputOutputSeriesMismatch"
			.field static public literal string ExceptionFormulaInvalidPeriod = "ExceptionFormulaInvalidPeriod"
			.field static public literal string ExceptionFormulaModuleHasNoInterface = "ExceptionFormulaModuleHasNoInterface"
			.field static public literal string ExceptionFormulaModuleNameIsNotUnique = "ExceptionFormulaModuleNameIsNotUnique"
			.field static public literal string ExceptionFormulaModuleNameUnknown = "ExceptionFormulaModuleNameUnknown"
			.field static public literal string ExceptionFormulaModuleRegistryUnsupportedType = "ExceptionFormulaModuleRegistryUnsupportedType"
			.field static public literal string ExceptionFormulaNotEnoughDataPoints = "ExceptionFormulaNotEnoughDataPoints"
			.field static public literal string ExceptionFormulaNotFound = "ExceptionFormulaNotFound"
			.field static public literal string ExceptionFormulaXValuesNotAligned = "ExceptionFormulaXValuesNotAligned"
			.field static public literal string ExceptionFormulaYIndexInvalid = "ExceptionFormulaYIndexInvalid"
			.field static public literal string ExceptionFunnelAngleRangeInvalid = "ExceptionFunnelAngleRangeInvalid"
			.field static public literal string ExceptionFunnelCanNotCombine = "ExceptionFunnelCanNotCombine"
			.field static public literal string ExceptionFunnelMinimumPointHeightAttributeInvalid = "ExceptionFunnelMinimumPointHeightAttributeInvalid"
			.field static public literal string ExceptionFunnelNeckHeightInvalid = "ExceptionFunnelNeckHeightInvalid"
			.field static public literal string ExceptionFunnelNeckWidthInvalid = "ExceptionFunnelNeckWidthInvalid"
			.field static public literal string ExceptionFunnelStyleUnknown = "ExceptionFunnelStyleUnknown"
			.field static public literal string ExceptionGraphics3DCoordinatesInvalid = "ExceptionGraphics3DCoordinatesInvalid"
			.field static public literal string ExceptionGraphics3DMarkerStyleUnknown = "ExceptionGraphics3DMarkerStyleUnknown"
			.field static public literal string ExceptionGraphicsMarkerStyleUnknown = "ExceptionGraphicsMarkerStyleUnknown"
			.field static public literal string ExceptionHttpHandlerCanNotLoadType = "ExceptionHttpHandlerCanNotLoadType"
			.field static public literal string ExceptionHttpHandlerCanNotSave = "ExceptionHttpHandlerCanNotSave"
			.field static public literal string ExceptionHttpHandlerImageHandlerInterfaceUnsupported = "ExceptionHttpHandlerImageHandlerInterfaceUnsupported"
			.field static public literal string ExceptionHttpHandlerImageNotFound = "ExceptionHttpHandlerImageNotFound"
			.field static public literal string ExceptionHttpHandlerInvalidLocation = "ExceptionHttpHandlerInvalidLocation"
			.field static public literal string ExceptionHttpHandlerParameterInvalid = "ExceptionHttpHandlerParameterInvalid"
			.field static public literal string ExceptionHttpHandlerParameterUnknown = "ExceptionHttpHandlerParameterUnknown"
			.field static public literal string ExceptionHttpHandlerPrivacyKeyInvalid = "ExceptionHttpHandlerPrivacyKeyInvalid"
			.field static public literal string ExceptionHttpHandlerStorageTypeUnsupported = "ExceptionHttpHandlerStorageTypeUnsupported"
			.field static public literal string ExceptionHttpHandlerTempDirectoryInvalid = "ExceptionHttpHandlerTempDirectoryInvalid"
			.field static public literal string ExceptionHttpHandlerTempDirectoryUnaccesible = "ExceptionHttpHandlerTempDirectoryUnaccesible"
			.field static public literal string ExceptionHttpHandlerTimeoutParameterInvalid = "ExceptionHttpHandlerTimeoutParameterInvalid"
			.field static public literal string ExceptionHttpHandlerUrlInvalid = "ExceptionHttpHandlerUrlInvalid"
			.field static public literal string ExceptionHttpHandlerUrlMissing = "ExceptionHttpHandlerUrlMissing"
			.field static public literal string ExceptionHttpHandlerValueInvalid = "ExceptionHttpHandlerValueInvalid"
			.field static public literal string ExceptionImageLoaderIncorrectImageLocation = "ExceptionImageLoaderIncorrectImageLocation"
			.field static public literal string ExceptionImageLoaderIncorrectImageUrl = "ExceptionImageLoaderIncorrectImageUrl"
			.field static public literal string ExceptionImageLoaderInvalidServiceContainer = "ExceptionImageLoaderInvalidServiceContainer"
			.field static public literal string ExceptionImageLoaderUnsupportedType = "ExceptionImageLoaderUnsupportedType"
			.field static public literal string ExceptionImageMapAddedHasWrongType = "ExceptionImageMapAddedHasWrongType"
			.field static public literal string ExceptionImageMapCircleShapeInvalid = "ExceptionImageMapCircleShapeInvalid"
			.field static public literal string ExceptionImageMapInsertedHasWrongType = "ExceptionImageMapInsertedHasWrongType"
			.field static public literal string ExceptionImageMapPolygonShapeInvalid = "ExceptionImageMapPolygonShapeInvalid"
			.field static public literal string ExceptionImageMapRectangleShapeInvalid = "ExceptionImageMapRectangleShapeInvalid"
			.field static public literal string ExceptionImageUrlInvalidFormat = "ExceptionImageUrlInvalidFormat"
			.field static public literal string ExceptionImageUrlInvalidFormatters = "ExceptionImageUrlInvalidFormatters"
			.field static public literal string ExceptionImageUrlIsEmpty = "ExceptionImageUrlIsEmpty"
			.field static public literal string ExceptionImageUrlMissedFormatter = "ExceptionImageUrlMissedFormatter"
			.field static public literal string ExceptionIndicatorsDeviationMissing = "ExceptionIndicatorsDeviationMissing"
			.field static public literal string ExceptionIndicatorsLongPeriodLessThenShortPeriod = "ExceptionIndicatorsLongPeriodLessThenShortPeriod"
			.field static public literal string ExceptionInvalidIndexerArgumentType = "ExceptionInvalidIndexerArgumentType"
			.field static public literal string ExceptionInvalidServiceContainer = "ExceptionInvalidServiceContainer"
			.field static public literal string ExceptionKagiAttributeFormatInvalid = "ExceptionKagiAttributeFormatInvalid"
			.field static public literal string ExceptionKagiAttributeOutOfRange = "ExceptionKagiAttributeOutOfRange"
			.field static public literal string ExceptionKagiCanNotCombine = "ExceptionKagiCanNotCombine"
			.field static public literal string ExceptionKagiNullReference = "ExceptionKagiNullReference"
			.field static public literal string ExceptionKeywordsRegistryUnsupportedType = "ExceptionKeywordsRegistryUnsupportedType"
			.field static public literal string ExceptionLabelBorderIsNotPositive = "ExceptionLabelBorderIsNotPositive"
			.field static public literal string ExceptionLegendAddedHasWrongType = "ExceptionLegendAddedHasWrongType"
			.field static public literal string ExceptionLegendAddedIsNotUnique = "ExceptionLegendAddedIsNotUnique"
			.field static public literal string ExceptionLegendAutoFitMinFontSizeInvalid = "ExceptionLegendAutoFitMinFontSizeInvalid"
			.field static public literal string ExceptionLegendBorderWidthIsNegative = "ExceptionLegendBorderWidthIsNegative"
			.field static public literal string ExceptionLegendCellColumnAlreadyExistsInCollection = "ExceptionLegendCellColumnAlreadyExistsInCollection"
			.field static public literal string ExceptionLegendCellColumnNotFound = "ExceptionLegendCellColumnNotFound"
			.field static public literal string ExceptionLegendCellImageSizeIsNegative = "ExceptionLegendCellImageSizeIsNegative"
			.field static public literal string ExceptionLegendCellNameAlreadyExistsInCollection = "ExceptionLegendCellNameAlreadyExistsInCollection"
			.field static public literal string ExceptionLegendCellNameIsEmpty = "ExceptionLegendCellNameIsEmpty"
			.field static public literal string ExceptionLegendCellNotFound = "ExceptionLegendCellNotFound"
			.field static public literal string ExceptionLegendCellSeriesSymbolSizeIsNegative = "ExceptionLegendCellSeriesSymbolSizeIsNegative"
			.field static public literal string ExceptionLegendCellSpanIsLessThenOne = "ExceptionLegendCellSpanIsLessThenOne"
			.field static public literal string ExceptionLegendCellTypeUnknown = "ExceptionLegendCellTypeUnknown"
			.field static public literal string ExceptionLegendColumnAlreadyExistsInCollection = "ExceptionLegendColumnAlreadyExistsInCollection"
			.field static public literal string ExceptionLegendColumnIsEmpty = "ExceptionLegendColumnIsEmpty"
			.field static public literal string ExceptionLegendColumnSpacingInvalid = "ExceptionLegendColumnSpacingInvalid"
			.field static public literal string ExceptionLegendDesignerMarginObjectInvalid = "ExceptionLegendDesignerMarginObjectInvalid"
			.field static public literal string ExceptionLegendDockedChartAreaIsMissing = "ExceptionLegendDockedChartAreaIsMissing"
			.field static public literal string ExceptionLegendInsertedHasWrongType = "ExceptionLegendInsertedHasWrongType"
			.field static public literal string ExceptionLegendItemAddedHasWrongType = "ExceptionLegendItemAddedHasWrongType"
			.field static public literal string ExceptionLegendItemInsertedHasWrongType = "ExceptionLegendItemInsertedHasWrongType"
			.field static public literal string ExceptionLegendMarkerBorderWidthIsNegative = "ExceptionLegendMarkerBorderWidthIsNegative"
			.field static public literal string ExceptionLegendMaximumAutoSizeInvalid = "ExceptionLegendMaximumAutoSizeInvalid"
			.field static public literal string ExceptionLegendNameIsEmpty = "ExceptionLegendNameIsEmpty"
			.field static public literal string ExceptionLegendNameIsNotUnique = "ExceptionLegendNameIsNotUnique"
			.field static public literal string ExceptionLegendNotFound = "ExceptionLegendNotFound"
			.field static public literal string ExceptionLegendReferencedInSeriesNotFound = "ExceptionLegendReferencedInSeriesNotFound"
			.field static public literal string ExceptionLegendSeparatorTypeUnknown = "ExceptionLegendSeparatorTypeUnknown"
			.field static public literal string ExceptionMarginBottomIsNegative = "ExceptionMarginBottomIsNegative"
			.field static public literal string ExceptionMarginLeftIsNegative = "ExceptionMarginLeftIsNegative"
			.field static public literal string ExceptionMarginRightIsNegative = "ExceptionMarginRightIsNegative"
			.field static public literal string ExceptionMarginTopIsNegative = "ExceptionMarginTopIsNegative"
			.field static public literal string ExceptionMarkerStepNegativeValue = "ExceptionMarkerStepNegativeValue"
			.field static public literal string ExceptionMatrix3DNotinitialized = "ExceptionMatrix3DNotinitialized"
			.field static public literal string ExceptionMaximumCellWidthIsWrong = "ExceptionMaximumCellWidthIsWrong"
			.field static public literal string ExceptionMinimumCellWidthIsWrong = "ExceptionMinimumCellWidthIsWrong"
			.field static public literal string ExceptionNameAlreadyExistsInCollection = "ExceptionNameAlreadyExistsInCollection"
			.field static public literal string ExceptionNameIsEmpty = "ExceptionNameIsEmpty"
			.field static public literal string ExceptionNameNotFound = "ExceptionNameNotFound"
			.field static public literal string ExceptionNamedImageAddedIsNotUnique = "ExceptionNamedImageAddedIsNotUnique"
			.field static public literal string ExceptionNamedImageInsertedHasWrongType = "ExceptionNamedImageInsertedHasWrongType"
			.field static public literal string ExceptionNamedImageInsertedIsNotUnique = "ExceptionNamedImageInsertedIsNotUnique"
			.field static public literal string ExceptionNamedImageNotFound = "ExceptionNamedImageNotFound"
			.field static public literal string ExceptionNamedImageObjectRequired = "ExceptionNamedImageObjectRequired"
			.field static public literal string ExceptionObjectReferenceIsNull = "ExceptionObjectReferenceIsNull"
			.field static public literal string ExceptionOscillatorNegativePeriodParameter = "ExceptionOscillatorNegativePeriodParameter"
			.field static public literal string ExceptionOscillatorNegativeSignalPeriod = "ExceptionOscillatorNegativeSignalPeriod"
			.field static public literal string ExceptionOscillatorObjectInvalidPeriod = "ExceptionOscillatorObjectInvalidPeriod"
			.field static public literal string ExceptionPaletteIsEmpty = "ExceptionPaletteIsEmpty"
			.field static public literal string ExceptionParameterFormatInvalid = "ExceptionParameterFormatInvalid"
			.field static public literal string ExceptionPeriodAverageParameterIsNegative = "ExceptionPeriodAverageParameterIsNegative"
			.field static public literal string ExceptionPeriodLongParameterIsNegative = "ExceptionPeriodLongParameterIsNegative"
			.field static public literal string ExceptionPeriodParameterIsNegative = "ExceptionPeriodParameterIsNegative"
			.field static public literal string ExceptionPeriodShortParameterIsNegative = "ExceptionPeriodShortParameterIsNegative"
			.field static public literal string ExceptionPie3DLabelLineSizeInvalid = "ExceptionPie3DLabelLineSizeInvalid"
			.field static public literal string ExceptionPieHorizontalLineSizeInvalid = "ExceptionPieHorizontalLineSizeInvalid"
			.field static public literal string ExceptionPieIntervalsInvalid = "ExceptionPieIntervalsInvalid"
			.field static public literal string ExceptionPieIntervalsOverlapping = "ExceptionPieIntervalsOverlapping"
			.field static public literal string ExceptionPieMinimumRelativePieSizeInvalid = "ExceptionPieMinimumRelativePieSizeInvalid"
			.field static public literal string ExceptionPieOrderOperationInvalid = "ExceptionPieOrderOperationInvalid"
			.field static public literal string ExceptionPiePointOrderInvalid = "ExceptionPiePointOrderInvalid"
			.field static public literal string ExceptionPieRadialLineSizeInvalid = "ExceptionPieRadialLineSizeInvalid"
			.field static public literal string ExceptionPieRadiusInvalid = "ExceptionPieRadiusInvalid"
			.field static public literal string ExceptionPieUnassignedFrontBackPoints = "ExceptionPieUnassignedFrontBackPoints"
			.field static public literal string ExceptionPointAndFigureCanNotCombine = "ExceptionPointAndFigureCanNotCombine"
			.field static public literal string ExceptionPointAndFigureNullReference = "ExceptionPointAndFigureNullReference"
			.field static public literal string ExceptionPointAndFigureReversalAmountInvalidFormat = "ExceptionPointAndFigureReversalAmountInvalidFormat"
			.field static public literal string ExceptionPointAndFigureUpBrickColorInvalidFormat = "ExceptionPointAndFigureUpBrickColorInvalidFormat"
			.field static public literal string ExceptionPointAndFigureUsedYValueHighInvalidFormat = "ExceptionPointAndFigureUsedYValueHighInvalidFormat"
			.field static public literal string ExceptionPointAndFigureUsedYValueHighOutOfRange = "ExceptionPointAndFigureUsedYValueHighOutOfRange"
			.field static public literal string ExceptionPointAndFigureUsedYValueLowInvalidFormat = "ExceptionPointAndFigureUsedYValueLowInvalidFormat"
			.field static public literal string ExceptionPointAndFigureUsedYValueLowOutOfrange = "ExceptionPointAndFigureUsedYValueLowOutOfrange"
			.field static public literal string ExceptionPriceIndicatorsFormulaRequiresFourArrays = "ExceptionPriceIndicatorsFormulaRequiresFourArrays"
			.field static public literal string ExceptionPriceIndicatorsFormulaRequiresOneArray = "ExceptionPriceIndicatorsFormulaRequiresOneArray"
			.field static public literal string ExceptionPriceIndicatorsFormulaRequiresThreeArrays = "ExceptionPriceIndicatorsFormulaRequiresThreeArrays"
			.field static public literal string ExceptionPriceIndicatorsFormulaRequiresTwoArrays = "ExceptionPriceIndicatorsFormulaRequiresTwoArrays"
			.field static public literal string ExceptionPriceIndicatorsNotEnoughPoints = "ExceptionPriceIndicatorsNotEnoughPoints"
			.field static public literal string ExceptionPriceIndicatorsPeriodMissing = "ExceptionPriceIndicatorsPeriodMissing"
			.field static public literal string ExceptionPriceIndicatorsSameXYNumber = "ExceptionPriceIndicatorsSameXYNumber"
			.field static public literal string ExceptionPriceIndicatorsSameYNumber = "ExceptionPriceIndicatorsSameYNumber"
			.field static public literal string ExceptionPriceIndicatorsShiftParameterMissing = "ExceptionPriceIndicatorsShiftParameterMissing"
			.field static public literal string ExceptionRectangleConverterStringFormatInvalid = "ExceptionRectangleConverterStringFormatInvalid"
			.field static public literal string ExceptionRenkoBoxSizeFormatInvalid = "ExceptionRenkoBoxSizeFormatInvalid"
			.field static public literal string ExceptionRenkoCanNotCobine = "ExceptionRenkoCanNotCobine"
			.field static public literal string ExceptionRenkoNullReference = "ExceptionRenkoNullReference"
			.field static public literal string ExceptionRenkoUpBrickColorInvalid = "ExceptionRenkoUpBrickColorInvalid"
			.field static public literal string ExceptionRenkoUsedYValueFormatInvalid = "ExceptionRenkoUsedYValueFormatInvalid"
			.field static public literal string ExceptionRenkoUsedYValueOutOfRange = "ExceptionRenkoUsedYValueOutOfRange"
			.field static public literal string ExceptionScrollBarSizeInvalid = "ExceptionScrollBarSizeInvalid"
			.field static public literal string ExceptionScrollBarZoomResetsNumberInvalid = "ExceptionScrollBarZoomResetsNumberInvalid"
			.field static public literal string ExceptionSeriesNameAddedIsNotUnique = "ExceptionSeriesNameAddedIsNotUnique"
			.field static public literal string ExceptionSeriesNameIsEmpty = "ExceptionSeriesNameIsEmpty"
			.field static public literal string ExceptionSeriesNameIsNotUnique = "ExceptionSeriesNameIsNotUnique"
			.field static public literal string ExceptionSeriesSymbolSizeIsNegative = "ExceptionSeriesSymbolSizeIsNegative"
			.field static public literal string ExceptionSmartLabelsDirectionUndefined = "ExceptionSmartLabelsDirectionUndefined"
			.field static public literal string ExceptionSmartLabelsMaxMovingDistanceIsNegative = "ExceptionSmartLabelsMaxMovingDistanceIsNegative"
			.field static public literal string ExceptionSmartLabelsMinMovingDistanceIsNegative = "ExceptionSmartLabelsMinMovingDistanceIsNegative"
			.field static public literal string ExceptionStackedAreaChartSeriesDataPointsNumberMismatch = "ExceptionStackedAreaChartSeriesDataPointsNumberMismatch"
			.field static public literal string ExceptionStatisticalAnalysesCovariance = "ExceptionStatisticalAnalysesCovariance"
			.field static public literal string ExceptionStatisticalAnalysesGammaBetaNegativeParameters = "ExceptionStatisticalAnalysesGammaBetaNegativeParameters"
			.field static public literal string ExceptionStatisticalAnalysesIncompleteBetaFunction = "ExceptionStatisticalAnalysesIncompleteBetaFunction"
			.field static public literal string ExceptionStatisticalAnalysesInvalidAlphaValue = "ExceptionStatisticalAnalysesInvalidAlphaValue"
			.field static public literal string ExceptionStatisticalAnalysesInvalidAnovaTest = "ExceptionStatisticalAnalysesInvalidAnovaTest"
			.field static public literal string ExceptionStatisticalAnalysesInvalidDegreeOfFreedom = "ExceptionStatisticalAnalysesInvalidDegreeOfFreedom"
			.field static public literal string ExceptionStatisticalAnalysesInvalidInputParameter = "ExceptionStatisticalAnalysesInvalidInputParameter"
			.field static public literal string ExceptionStatisticalAnalysesInvalidMeanConditions = "ExceptionStatisticalAnalysesInvalidMeanConditions"
			.field static public literal string ExceptionStatisticalAnalysesInvalidMeanDifference = "ExceptionStatisticalAnalysesInvalidMeanDifference"
			.field static public literal string ExceptionStatisticalAnalysesInvalidMedianConditions = "ExceptionStatisticalAnalysesInvalidMedianConditions"
			.field static public literal string ExceptionStatisticalAnalysesInvalidProbabilityValue = "ExceptionStatisticalAnalysesInvalidProbabilityValue"
			.field static public literal string ExceptionStatisticalAnalysesInvalidSeriesNumber = "ExceptionStatisticalAnalysesInvalidSeriesNumber"
			.field static public literal string ExceptionStatisticalAnalysesInvalidTValue = "ExceptionStatisticalAnalysesInvalidTValue"
			.field static public literal string ExceptionStatisticalAnalysesInvalidTailedParameter = "ExceptionStatisticalAnalysesInvalidTailedParameter"
			.field static public literal string ExceptionStatisticalAnalysesInvalidVariableRanges = "ExceptionStatisticalAnalysesInvalidVariableRanges"
			.field static public literal string ExceptionStatisticalAnalysesInvalidVariance = "ExceptionStatisticalAnalysesInvalidVariance"
			.field static public literal string ExceptionStatisticalAnalysesInvalidVarianceConditions = "ExceptionStatisticalAnalysesInvalidVarianceConditions"
			.field static public literal string ExceptionStatisticalAnalysesInvalidZValue = "ExceptionStatisticalAnalysesInvalidZValue"
			.field static public literal string ExceptionStatisticalAnalysesNegativeMeanDifference = "ExceptionStatisticalAnalysesNegativeMeanDifference"
			.field static public literal string ExceptionStatisticalAnalysesNormalInvalidProbabilityValue = "ExceptionStatisticalAnalysesNormalInvalidProbabilityValue"
			.field static public literal string ExceptionStatisticalAnalysesNotEnoughDataPoints = "ExceptionStatisticalAnalysesNotEnoughDataPoints"
			.field static public literal string ExceptionStatisticalAnalysesNotEnoughInputSeries = "ExceptionStatisticalAnalysesNotEnoughInputSeries"
			.field static public literal string ExceptionStatisticalAnalysesStudentsInvalidTValue = "ExceptionStatisticalAnalysesStudentsInvalidTValue"
			.field static public literal string ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree = "ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree"
			.field static public literal string ExceptionStatisticalAnalysesZeroVariance = "ExceptionStatisticalAnalysesZeroVariance"
			.field static public literal string ExceptionStripLineAddedHasWrongType = "ExceptionStripLineAddedHasWrongType"
			.field static public literal string ExceptionStripLineWidthIsNegative = "ExceptionStripLineWidthIsNegative"
			.field static public literal string ExceptionSubAxisNameAlreadyExistsInCollection = "ExceptionSubAxisNameAlreadyExistsInCollection"
			.field static public literal string ExceptionSubAxisNameIsNotUnique = "ExceptionSubAxisNameIsNotUnique"
			.field static public literal string ExceptionSubAxisNameNotFound = "ExceptionSubAxisNameNotFound"
			.field static public literal string ExceptionSubAxisNameNotFoundShort = "ExceptionSubAxisNameNotFoundShort"
			.field static public literal string ExceptionTextThresholdIsNegative = "ExceptionTextThresholdIsNegative"
			.field static public literal string ExceptionThreeLineBreakCanNotCobine = "ExceptionThreeLineBreakCanNotCobine"
			.field static public literal string ExceptionThreeLineBreakNullReference = "ExceptionThreeLineBreakNullReference"
			.field static public literal string ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid = "ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid"
			.field static public literal string ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid = "ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid"
			.field static public literal string ExceptionThreeLineBreakUpBrickColorInvalid = "ExceptionThreeLineBreakUpBrickColorInvalid"
			.field static public literal string ExceptionThreeLineBreakUsedYValueInvalid = "ExceptionThreeLineBreakUsedYValueInvalid"
			.field static public literal string ExceptionThreeLineBreakUsedYValueOutOfRange = "ExceptionThreeLineBreakUsedYValueOutOfRange"
			.field static public literal string ExceptionTickMarksIntervalIsNegative = "ExceptionTickMarksIntervalIsNegative"
			.field static public literal string ExceptionTickMarksIntervalIsZero = "ExceptionTickMarksIntervalIsZero"
			.field static public literal string ExceptionTitleBorderWidthIsNegative = "ExceptionTitleBorderWidthIsNegative"
			.field static public literal string ExceptionTitleNameAddedIsNotUnique = "ExceptionTitleNameAddedIsNotUnique"
			.field static public literal string ExceptionTitleNameIsEmpty = "ExceptionTitleNameIsEmpty"
			.field static public literal string ExceptionTitleNameIsNotUnique = "ExceptionTitleNameIsNotUnique"
			.field static public literal string ExceptionTitleNameNotFound = "ExceptionTitleNameNotFound"
			.field static public literal string ExceptionTraceManagerUnsupportedType = "ExceptionTraceManagerUnsupportedType"
			.field static public literal string ExceptionValueMustBeGreaterThan = "ExceptionValueMustBeGreaterThan"
			.field static public literal string ExceptionValueMustBeInRange = "ExceptionValueMustBeInRange"
			.field static public literal string ExceptionValueMustBeLessThan = "ExceptionValueMustBeLessThan"
			.field static public literal string ExceptionVolumeIndicatorStartValueMissing = "ExceptionVolumeIndicatorStartValueMissing"
			.field static public literal string ExceptionWebConfigUpdateFailed = "ExceptionWebConfigUpdateFailed"
			.field static public literal string FormatErrorString = "FormatErrorString"
			.field static public literal string FormulaNameGeneralFormulas = "FormulaNameGeneralFormulas"
			.field static public literal string FormulaNameGeneralTechnicalIndicators = "FormulaNameGeneralTechnicalIndicators"
			.field static public literal string FormulaNameOscillator = "FormulaNameOscillator"
			.field static public literal string FormulaNamePriceIndicators = "FormulaNamePriceIndicators"
			.field static public literal string FormulaNameStatisticalAnalysis = "FormulaNameStatisticalAnalysis"
			.field static public literal string FormulaNameTechnicalVolumeIndicators = "FormulaNameTechnicalVolumeIndicators"
			.field static public literal string FormulaNameTimeSeriesAndForecasting = "FormulaNameTimeSeriesAndForecasting"
			.field static public literal string FormulaNameVolumeIndicators = "FormulaNameVolumeIndicators"
			.field static public literal string LabelButtonCancel = "LabelButtonCancel"
			.field static public literal string LabelButtonOk = "LabelButtonOk"
			.field static public literal string LabelDescription = "LabelDescription"
			.field static public literal string LabelEditKeyword = "LabelEditKeyword"
			.field static public literal string LabelFormatKeySample = "LabelFormatKeySample"
			.field static public literal string LabelInsertNewKeyword = "LabelInsertNewKeyword"
			.field static public literal string LabelKeyCustomFormat = "LabelKeyCustomFormat"
			.field static public literal string LabelKeyFormat = "LabelKeyFormat"
			.field static public literal string LabelKeyKeywords = "LabelKeyKeywords"
			.field static public literal string LabelKeyPrecision = "LabelKeyPrecision"
			.field static public literal string LabelKeyYValueIndex = "LabelKeyYValueIndex"
			.field static public literal string LabelKeywordEditor = "LabelKeywordEditor"
			.field static public literal string LabelStatisticalAverage = "LabelStatisticalAverage"
			.field static public literal string LabelStatisticalBetaFunction = "LabelStatisticalBetaFunction"
			.field static public literal string LabelStatisticalCorrelation = "LabelStatisticalCorrelation"
			.field static public literal string LabelStatisticalCovariance = "LabelStatisticalCovariance"
			.field static public literal string LabelStatisticalDegreeOfFreedom = "LabelStatisticalDegreeOfFreedom"
			.field static public literal string LabelStatisticalDegreesOfFreedomBetweenGroups = "LabelStatisticalDegreesOfFreedomBetweenGroups"
			.field static public literal string LabelStatisticalDegreesOfFreedomTotal = "LabelStatisticalDegreesOfFreedomTotal"
			.field static public literal string LabelStatisticalDegreesOfFreedomWithinGroups = "LabelStatisticalDegreesOfFreedomWithinGroups"
			.field static public literal string LabelStatisticalFCriteria = "LabelStatisticalFCriteria"
			.field static public literal string LabelStatisticalFCriticalValueOneTail = "LabelStatisticalFCriticalValueOneTail"
			.field static public literal string LabelStatisticalFRatio = "LabelStatisticalFRatio"
			.field static public literal string LabelStatisticalFValue = "LabelStatisticalFValue"
			.field static public literal string LabelStatisticalGammaFunction = "LabelStatisticalGammaFunction"
			.field static public literal string LabelStatisticalMeanSquareVarianceBetweenGroups = "LabelStatisticalMeanSquareVarianceBetweenGroups"
			.field static public literal string LabelStatisticalMeanSquareVarianceWithinGroups = "LabelStatisticalMeanSquareVarianceWithinGroups"
			.field static public literal string LabelStatisticalMedian = "LabelStatisticalMedian"
			.field static public literal string LabelStatisticalPFLessEqualSmallFOneTail = "LabelStatisticalPFLessEqualSmallFOneTail"
			.field static public literal string LabelStatisticalPTLessEqualSmallTOneTail = "LabelStatisticalPTLessEqualSmallTOneTail"
			.field static public literal string LabelStatisticalPTLessEqualSmallTTwoTail = "LabelStatisticalPTLessEqualSmallTTwoTail"
			.field static public literal string LabelStatisticalPZLessEqualSmallZOneTail = "LabelStatisticalPZLessEqualSmallZOneTail"
			.field static public literal string LabelStatisticalPZLessEqualSmallZTwoTail = "LabelStatisticalPZLessEqualSmallZTwoTail"
			.field static public literal string LabelStatisticalProbability = "LabelStatisticalProbability"
			.field static public literal string LabelStatisticalSmallTCrititcalOneTail = "LabelStatisticalSmallTCrititcalOneTail"
			.field static public literal string LabelStatisticalSmallTCrititcalTwoTail = "LabelStatisticalSmallTCrititcalTwoTail"
			.field static public literal string LabelStatisticalSumOfSquaresBetweenGroups = "LabelStatisticalSumOfSquaresBetweenGroups"
			.field static public literal string LabelStatisticalSumOfSquaresTotal = "LabelStatisticalSumOfSquaresTotal"
			.field static public literal string LabelStatisticalSumOfSquaresWithinGroups = "LabelStatisticalSumOfSquaresWithinGroups"
			.field static public literal string LabelStatisticalTValue = "LabelStatisticalTValue"
			.field static public literal string LabelStatisticalTheFirstGroupMean = "LabelStatisticalTheFirstGroupMean"
			.field static public literal string LabelStatisticalTheFirstGroupVariance = "LabelStatisticalTheFirstGroupVariance"
			.field static public literal string LabelStatisticalTheSecondGroupMean = "LabelStatisticalTheSecondGroupMean"
			.field static public literal string LabelStatisticalTheSecondGroupVariance = "LabelStatisticalTheSecondGroupVariance"
			.field static public literal string LabelStatisticalVariance = "LabelStatisticalVariance"
			.field static public literal string LabelStatisticalZCriticalValueOneTail = "LabelStatisticalZCriticalValueOneTail"
			.field static public literal string LabelStatisticalZCriticalValueTwoTail = "LabelStatisticalZCriticalValueTwoTail"
			.field static public literal string LabelStatisticalZValue = "LabelStatisticalZValue"
			.field static public literal string LabelStringKeywordsEditor = "LabelStringKeywordsEditor"
			.field static public literal string LabelStringWithKeywords = "LabelStringWithKeywords"
			.field static public literal string LabelTextRow = "LabelTextRow"
			.field static public literal string LabelValueFormatting = "LabelValueFormatting"
			.field static public literal string MessageChangingChartAreaPositionConfirmAutomatic = "MessageChangingChartAreaPositionConfirmAutomatic"
			.field static public literal string MessageChangingChartAreaPositionConfirmCustom = "MessageChangingChartAreaPositionConfirmCustom"
			.field static public literal string MessageChangingChartAreaPositionProperty = "MessageChangingChartAreaPositionProperty"
			.field static public literal string MessageChartException = "MessageChartException"
			.field static public literal string MessageChartTitle = "MessageChartTitle"
			.field static public literal string MessagePrecisionInvalid = "MessagePrecisionInvalid"
			.field static public literal string MessageSite = "MessageSite"
			.field static public literal string MessageStackTrace = "MessageStackTrace"
			.field static public literal string MessageYValueIndexInvalid = "MessageYValueIndexInvalid"
			.field static public literal string TitleAxisX = "TitleAxisX"
			.field static public literal string TitleAxisX2 = "TitleAxisX2"
			.field static public literal string TitleAxisY = "TitleAxisY"
			.field static public literal string TitleAxisY2 = "TitleAxisY2"
			.property class [mscorlib]System.Globalization.CultureInfo Culture()
			{
				.get class [mscorlib]System.Globalization.CultureInfo 'System.Web.UI.DataVisualization.Charting.SR'/Keys::get_Culture()
				.set void 'System.Web.UI.DataVisualization.Charting.SR'/Keys::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
			}
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionElementPositionConverter()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionInvalidServiceContainer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageLoaderInvalidServiceContainer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageMapAddedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageMapInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageMapCircleShapeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageMapRectangleShapeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageMapPolygonShapeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationPathAddLineAsSegmentsInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationLineWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationAnchorOffsetInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationGroupedUnableToStartPlacement()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationNotInCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationGroupedAxisMustBeEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationArrowSizeIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationArrowSizeMustBeLessThen100()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAnnotationArrowStyleUnknown()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionInvalidIndexerArgumentType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionTitleNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataSeriesObjectRequired()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataSeriesNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataSeriesYValuesPerPointIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataSeriesYValueNumberInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionSeriesNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionEditorChartTypeRegistryServiceInaccessible()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionEditorMultipleSeriesEditiingUnsupported()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionEditorContectInstantsIsNotChartObject()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionEditorUITypeEditorInapplicable()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionEditorUITypeEditorInt32ApplicableOnly()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRectangleConverterStringFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaObjectRequired()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaAlreadyExistsShort()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DPerspectiveInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DInclinationInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DRotationInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DWallWidthInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DPointsDepthInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartArea3DPointsGapInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionCursorIntervalOffsetIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionCursorLineWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionGraphicsMarkerStyleUnknown()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionGraphics3DMarkerStyleUnknown()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionGraphics3DCoordinatesInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelRowIndexIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelRowIndexMustBe1Or2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelIndexIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelFontAngleInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionCustomLabelAddedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionCustomLabelInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionSmartLabelsDirectionUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionSmartLabelsMinMovingDistanceIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionSmartLabelsMaxMovingDistanceIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStripLineAddedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStripLineWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisDynamicIntervalCalculationFailed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisIntervalDecreasingFailed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisIntervalIncreasingFailed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisLabelsAutoFitMaxFontSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisMinimumMaximumInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisStackedChartsDataPointsNumberMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisSeriesNotAligned()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleLogarithmBaseInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScalePositionInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScalePositionToValueCallFailed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleIntervalIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleMinimumMaximumInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleIntervalIsLessThen1Year()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleAutoIntervalInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleLogarithmicNegativeValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaAxisScaleLogarithmicUnsuitable()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaChartTypesCanNotCombine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartAreaSeriesNotFound()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleBreaksNumberInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleBreaksCollapsibleSpaceInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleBreaksSpacingInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleBreaksLineWidthInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleSegmentsPositionInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleSegmentsSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAxisScaleSegmentsSpacingInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionTickMarksIntervalIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionTickMarksIntervalIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionScrollBarSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionScrollBarZoomResetsNumberInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMarkerStepNegativeValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionTextThresholdIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionNamedImageObjectRequired()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionNamedImageInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendAddedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionBackSecondaryColorIsTransparent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendAutoFitMinFontSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendMaximumAutoSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendColumnSpacingInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendMarkerBorderWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendItemAddedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendItemInsertedHasWrongType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendColumnIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionSeriesSymbolSizeIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMinimumCellWidthIsWrong()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMaximumCellWidthIsWrong()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendCellNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendCellImageSizeIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendCellSeriesSymbolSizeIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendCellSpanIsLessThenOne()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMarginTopIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMarginBottomIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMarginLeftIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMarginRightIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionElementPositionArgumentOutOfRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartHeightIsNotInPixels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartWidthIsNotInPixels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartBorderIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartCompressionInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartDataPointsAlignmentFaild()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartDataPointsInsertionFailedYValuesEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartTypeHasNoInterface()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionBorderTypeHasNoInterface()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerContentFlagUnsupported()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerContentStringFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerClassNameUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerPropertyNameUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerWriterObjectInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerReaderObjectInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerDestinationObjectInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerSourceObjectInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerBinaryFromatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartSerializerPropertyNotFound()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorPointCountIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorIndexUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorIndexFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorGroupedSeriesNotSorted()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorGroupingFormulaUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorGroupingFormulaUnsupported()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorGroupingInputSeriesUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataBindYValuesToString()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataBindXValuesToString()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataBindSeriesToString()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataBindSeriesGroupByParameterIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageUrlIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageUrlInvalidFormatters()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageUrlInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionImageUrlMissedFormatter()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataManager100StackedSeriesPointsNumeberMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaModuleHasNoInterface()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointConverterInvalidSorting()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointConverterWrongTypes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointInsertionXValuesQtyIsLessYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointValueNameInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointValueNameYIndexOutOfRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointValueNameYIndexIsNotPositive()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointInsertionNoDataSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointBindingYValueNotSpecified()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointInsertionYValueNotSpecified()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAttributeUnableToDelete()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAttributeNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAttributeInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAttributeDrawSideBySideInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLabelBorderIsNotPositive()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionBorderWidthIsNotPositive()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionAngleRangeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDataPointYValueStringFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionParameterFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidAlphaValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidProbabilityValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidDegreeOfFreedom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesNegativeMeanDifference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidSeriesNumber()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidMeanDifference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesNotEnoughDataPoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidVariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidTValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesGammaBetaNegativeParameters()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidZValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesZeroVariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesNotEnoughInputSeries()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidVariableRanges()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesStudentsInvalidTValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesNormalInvalidProbabilityValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidTailedParameter()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidInputParameter()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesIncompleteBetaFunction()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidAnovaTest()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesCovariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidMedianConditions()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidMeanConditions()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStatisticalAnalysesInvalidVarianceConditions()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPeriodParameterIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPeriodAverageParameterIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPeriodShortParameterIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPeriodLongParameterIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionIndicatorsDeviationMissing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionIndicatorsLongPeriodLessThenShortPeriod()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionOscillatorObjectInvalidPeriod()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionOscillatorNegativeSignalPeriod()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionOscillatorNegativePeriodParameter()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionVolumeIndicatorStartValueMissing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsShiftParameterMissing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsSameYNumber()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsSameXYNumber()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsPeriodMissing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsNotEnoughPoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsFormulaRequiresOneArray()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsFormulaRequiresTwoArrays()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsFormulaRequiresThreeArrays()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPriceIndicatorsFormulaRequiresFourArrays()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionObjectReferenceIsNull()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakCanNotCobine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakNullReference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakUsedYValueOutOfRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakUpBrickColorInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakUsedYValueInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoCanNotCobine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoNullReference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoUsedYValueOutOfRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoBoxSizeFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoUpBrickColorInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionRenkoUsedYValueFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieIntervalsInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieUnassignedFrontBackPoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPiePointOrderInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieHorizontalLineSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieRadialLineSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPie3DLabelLineSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieRadiusInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieMinimumRelativePieSizeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieOrderOperationInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPieIntervalsOverlapping()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutNullReference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutThresholdInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutCollectedThresholdUsePercentInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutCollectedColorInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutCollectedThresholdInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionDoughnutCollectedThresholdInvalidRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureUpBrickColorInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureCanNotCombine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureNullReference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureUsedYValueHighOutOfRange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureUsedYValueLowOutOfrange()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureReversalAmountInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureUsedYValueHighInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPointAndFigureUsedYValueLowInvalidFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFastPointMarkerStyleUnknown()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFunnelAngleRangeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFunnelCanNotCombine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFunnelNeckHeightInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFunnelNeckWidthInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionKagiNullReference()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionKagiCanNotCombine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionStackedAreaChartSeriesDataPointsNumberMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_Exception3DPieLabelsIndexInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_Exception3DChartPointsXValuesUnsorted()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFunnelMinimumPointHeightAttributeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionErrorBarParameterUndefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_Exception3DSplineY1ValueIsLessThenY2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionCustomAttributeDefaultValueTypeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaDataItemsNumberMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaDataItemsNumberMismatch2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaYIndexInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaXValuesNotAligned()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionFormulaInputOutputSeriesMismatch()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionForecastingDegreeInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionForecastingExponentialRegressionHasZeroYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionForecastingPowerRegressionHasZeroYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionBorderWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionBorderWidthIsZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionLegendBorderWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionTitleBorderWidthIsNegative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionMatrix3DNotinitialized()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionPaletteIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartPreviewNotAvailable()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartPreviewNotAvailableShort()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionChartOutOfLimits()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerCanNotSave()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerValueInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerTimeoutParameterInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerUrlMissing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerUrlInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerInvalidLocation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionHttpHandlerImageNotFound()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeEmptyPointValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeIsXAxisQuantitive()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePieDonutExploded()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeProportionalSymbols()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeDrawSideBySide()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeShowMarkerLines()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeShowOpenClose()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotShowAverage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBubbleUseSizeForLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotShowMedian()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotShowUnusualValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotSeries()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePieStartAngle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePolarDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeRadarDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedLegendText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedLegendDefaultText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedLabelDefaultText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedToolTip()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidValueType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttribute_3DLabelLineSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnel3DRotationAngle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramid3DRotationAngle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePixelPointDepth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePixelPointGapDepth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeErrorBarCenterMarkerStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePointFigureBoxSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBubbleScaleMax()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBubbleScaleMin()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedThreshold()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePieLineColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCalloutLineColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePieLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnel3DDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramid3DDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePieDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedSliceExploded()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCollectedThresholdUsePercent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelNeckHeight()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelNeckWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidPointGap()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelPointGap()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeLabelsHorizontalLineSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeDoughnutRadius()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePolarCircularLabelsStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeRadarCircularLabelsStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeOpenCloseStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBubbleMaxSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeMaxPixelPointWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidMinPointHeight()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelMinPointHeight()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeMinimumRelativePieSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeMinPixelPointWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeErrorBarSeries()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeNumberOfLinesInBreak()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidOutsideLabelPlacement()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelOutsideLabelPlacement()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotPercentile()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBoxPlotWhiskerPercentile()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBarLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeLabelsRadialLineSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePointWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeReversalAmount()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePolarAreaDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeRadarAreaDrawingStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeStackedGroupName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeLineTension()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeCandlePriceUpColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeBarsPriceUpColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePriceDownColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeUsedYValueHigh()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeUsedYValueLow()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeRenkoUsedYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeThreeLineBreakUsedYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePyramidInsideLabelAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeFunnelInsideLabelAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeErrorBarStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributePixelPointWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeLabelValueType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeUsedYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeKagiReversalAmount()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionCustomAttributeErrorBarType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_ImageStorageMode()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordAverageYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordAxisLabelDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordIndexDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordLabelDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordYValuePercentTotal()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordIndexDataPoint2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordLegendText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordMaximumYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordMinimumYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordSeriesName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordTotalYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordXValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordFirstPointYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordLastPointYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameIndexDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameXValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameTotalYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameYValuePercentTotal()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameIndexTheDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameLabelDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameAxisLabelDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameLegendText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameSeriesName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameAverageYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameMaximumYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameMinimumYValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameLastPointYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionKeyWordNameFirstPointYValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeCurrency()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeDecimal()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeScientific()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeFixedPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeGeneral()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypeNumber()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionNumberFormatTypePercent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionTypeNone()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionTypeCustom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionTypeEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionTypePoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeyFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeyCustomFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStringWithKeywords()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelEditKeyword()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelInsertNewKeyword()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStringKeywordsEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeywordEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelDescription()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelFormatKeySample()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeyYValueIndex()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeyPrecision()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelKeyKeywords()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelValueFormatting()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelButtonOk()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelButtonCancel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionToolTipCustomFormatCharacters()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DesciptionCustomLabelEditorTitle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DesciptionCustomLabelFormatInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalSumOfSquaresBetweenGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalSumOfSquaresWithinGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalSumOfSquaresTotal()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalDegreesOfFreedomBetweenGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalDegreesOfFreedomWithinGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalDegreesOfFreedomTotal()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalMeanSquareVarianceBetweenGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalMeanSquareVarianceWithinGroups()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalFRatio()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalFCriteria()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalCorrelation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalCovariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalProbability()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalAverage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalVariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalMedian()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalBetaFunction()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalGammaFunction()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalTheFirstGroupMean()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalTheSecondGroupMean()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalTheFirstGroupVariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalTheSecondGroupVariance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalFValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalFCriticalValueOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalZValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalZCriticalValueOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalZCriticalValueTwoTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalPZLessEqualSmallZOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalPZLessEqualSmallZTwoTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalPFLessEqualSmallFOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalTValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalDegreeOfFreedom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalPTLessEqualSmallTOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalSmallTCrititcalOneTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalPTLessEqualSmallTTwoTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelStatisticalSmallTCrititcalTwoTail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessagePrecisionInvalid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageChangingChartAreaPositionProperty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageChangingChartAreaPositionConfirmAutomatic()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageChangingChartAreaPositionConfirmCustom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageChartException()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageSite()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageStackTrace()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_MessageChartTitle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_TitleAxisX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_TitleAxisY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_TitleAxisX2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_TitleAxisY2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNamePriceIndicators()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameGeneralTechnicalIndicators()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameTechnicalVolumeIndicators()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameOscillator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameGeneralFormulas()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameTimeSeriesAndForecasting()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameStatisticalAnalysis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormulaNameVolumeIndicators()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_LabelTextRow()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackImage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerImage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationBaseY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationHeight()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationClipToChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationBaseX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartImageType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMultiValueSeparator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataSeriesGroupID()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSuppressCodeExceptions()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeNoDataMessage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeReverseSeriesOrder()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeUserDefined()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_GetToolTipText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArrowAnnotation_ArrowSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_Content()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeEnabled5()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeEnabled7()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScrollBar_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeEnabled13()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Enabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_CellSpan()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_SelectionColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeInterlaced()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapArea_Coordinates()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_PostPaint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_Title()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Title()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle5()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle6()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotation_Annotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitleFont()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_Axes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_NonSerializableContent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeShadowOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutLineAnchorCap()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapAreaAttributes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxis_SubAxis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMajorGrid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_Y()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPoint_Y()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeToolTipEventArgs_Y()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePoint3D_Y()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePoint3D_Z()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMajorTickMark()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDrawInfinitive()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_MinSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerOverlapping()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_OnCustomizeLegend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_HeaderTextAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScrollBarEventArgs_MousePositionY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeNamedImage_NamedImage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScrollBar()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapArea_MapArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_CustomItems()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePolylineAnnotation_PolylineAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AxisViewChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCrossing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargins_Top()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_HeaderFont()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_InterlacedRows()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_MinSizeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLineWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPoint_XValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AxisY2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AxisX2()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AnnotationPositionChanging()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_StripLine()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerBorderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_LabelMark()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextAntiAliasingQuality()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowMoving()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutAnnotation_CalloutAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeName4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPoint_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapArea_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxis_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeNamedImage_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxis_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPoint_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_Name()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_Cursor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeToolTip()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TableStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPoint_Empty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScrollBarEventArgs_Handled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_AllowPathEditing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowPathEditing3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_OnPaint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutAnnotation_AnchorOffsetX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorOffsetX3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutAnnotation_AnchorOffsetY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorOffsetY3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_CursorPositionChanging()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScrollBarEventArgs_ButtonType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelsAutoFitStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_IntervalOffsetType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_IntervalOffsetType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalOffsetType4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_IntervalOffsetType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalOffsetType6()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_IntervalOffsetType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeReverse()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Points()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_SkinStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Clustered()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorDataPointName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AnnotationPositionChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_PointGapDepth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Reversed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotation_AnnotationType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextAnnotation_AnnotationType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_FrameBorderDashStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_HeaderSeparatorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AnnotationSelectionChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeFont()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Font()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_Font()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_Font()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Font()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Font()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_ValueMemberX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArrows()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Type()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorder3DAnnotation_Border3DAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Images()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendToolTip()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_CustomLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AnnotationPlaced()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeFrameBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitleBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeHeaderBackColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_ShowEndLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelToolTip()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_MarkerStep()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTickMark_Style()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttribute_TextOrientation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Style()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Rotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSizeAlwaysRelative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSizeAlwaysRelative3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_SizeAlwaysRelative()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_BorderlineWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_XValueIndexed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeEllipseAnnotation_EllipseAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_Width()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisXName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Inclination()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCollection_LegendCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisYName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_Spacing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_Spacing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSelected()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_Selected()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelsAutoFitMaxFontSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeFreeDrawPlacement()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLinesCollection_StripLinesCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_IsZoomed()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Perspective()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_OnCustomize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_Label()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStartCap3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeFontColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendFontColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_OffsetLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargin()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursorEventArgs_NewSelectionStart()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_XSubAxisName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeHideOverlapped()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_MaximumWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_InsideChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageTransparentColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_EquallySpacedItems()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_CursorY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Printing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxis_Axis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackImageAlign()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeShowInLegend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_ChartSerializer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Compression()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartImage_Compression()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_AutoScroll()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_Height()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeHeight3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_ViewStateContent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_SmallScrollSizeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_CellColumns()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScrollBar_Buttons()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegends()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_X()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPoint_X()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePoint3D_X()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeToolTipEventArgs_X()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomAttributesExtended()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargins_Left()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScrollBar_PositionInside()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_ValueMembersY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_SelectionRangeChanging()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelsAutoFitMinFontSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMaxMovingDistance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_DockToChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_DockToChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_RightAngleAxes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_LegendStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_AxisDataView()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderDashStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelBorderDashStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackSecondaryColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_FrameBackSecondaryColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TitleSeparator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_InnerPlotPosition()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_CustomizeLegend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPoint_YValues()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_RowIndex()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_YSubAxisName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AlignType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowResizing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeShowLabelAsValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeForeColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePathPoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeViewEventArgs_NewSizeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_BuildNumber()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_MarkerSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_SeriesSymbolSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_SeriesSymbolSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDisabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_ResetWhenLoading()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackGradientStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArrowAnnotation_ArrowAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_AxisType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Cells()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_BorderSkin()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxisCollection_SubAxisCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowSelecting()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_Customize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_Click()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageAnnotation_ImageAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_SmallScrollSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_Interval()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_Interval()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeInterval4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_Interval()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeInterval6()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_Interval()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_TitleLineAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMaximum()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_Auto()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_YAxisType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLineDashStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLogarithmBase()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAntiAlias()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageWrapMode()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_Tag()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTag()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Legend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Legend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPointComparer_DataPointComparer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBackHatchStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeFrameBackHatchStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartAreaCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxisCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeriesCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPointCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumnCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegmentCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeNamedImagesCollection_Item()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_ScaleMinimum()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSmartLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_SmartLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSmartLabels_SmartLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMinorTickMark()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapAreasCollection_MapAreasCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMovingDirection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_UserSelection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_ChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_ChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeToolTipEventArgs_HitTestResult()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_AxisScaleSegment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_ItemColumnSeparatorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataManipulator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Color()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Color()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeColor4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargins_Right()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeRight3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_OnBackPaint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLineColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutLineColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArrowAnnotation_ArrowStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArrowStyle_ArrowStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_XValueType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_Annotations()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotations3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMinorGrid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapArea_Custom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_EnableViewState()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Enable3D()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeInterlacedColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_Margins()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargins_Margins()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Margins()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_MarkerColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerColor3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Size()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTickMark_Size()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_Size()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_Size()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScrollBar_Size()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeViewEventArgs_NewSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_XAxisType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowOutsidePlotArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_MarkerStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerStyle4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_ImageSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeView()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeriesCollection_SeriesCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursorEventArgs_NewPosition()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeViewEventArgs_NewPosition()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Image()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeNamedImage_Image()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageAnnotation_Image()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Image()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_Image()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_IntervalOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalOffset3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_IntervalOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_IntervalOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalOffset6()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_IntervalOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_DockInsideChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_DockInsideChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_RenderType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AxisViewChanging()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePath()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_SeriesPointIndex()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapAreas()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTickMark_TickMark()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_LegendCellColumn()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_LegendItem()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitleAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_TitleAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TitleAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeElementPosition_ElementPosition()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_To()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_FontAngle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalAutoMode()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_StripWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_UserEnabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_FrameBorderWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_Position()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxis_ParentAxis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBottom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMargins_Bottom()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_HeaderSeparator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_PointDepth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_AnnotationGroup()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_StripWidthType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_From()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePoint3D_PointF()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarkerBorderWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_SelectionEnd()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLineAnnotation_LineAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_Visible()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_Visible()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Visible()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeVisible()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_Separator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_CellType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Serializer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AxisX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_SelectionStart()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelsAutoFit()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_HeaderText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapEnabled()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_Zoomable()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataManager_PaletteCustomColors()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_PaletteCustomColors()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_ItemColumnSeparator()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursorEventArgs_NewSelectionEnd()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_SeriesName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartAreas()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AlignWithChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_MaxAutoSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxis_MaxAutoSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeGrid_Grid()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_EquallySizedAxesFont()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_CustomizeMapAreas()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_WallWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_Row()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TitleSeparatorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_TemplateMode()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeShadowColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AxisScrollBarClicked()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_AutoFitMinFontSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_AnnotationTextChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Series()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_Series()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMapArea_Shape()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TextWrapThreshold()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_StartFromZero()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStartFromZero3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeRectangleAnnotation_RectangleAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeUrl()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleBreakStyle_BreakLineType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_CursorPositionChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_SerializableContent()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutAnnotation_CalloutStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutStyle3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutStyle_CalloutStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Docking()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Docking()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_AllowAnchorMoving()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowAnchorMoving3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitleColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_TitleColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_TitleColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitles()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePolygonAnnotation_PolygonAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_IntervalType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalType3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIntervalType4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLine_IntervalType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_IntervalType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCursor_IntervalType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendItem_SeparatorColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_YValuesPerPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_PrePaint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendUrl()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_ImageUrl()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_Format()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartSerializer_Format()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeStripLines()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_ViewStateData()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_DockOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnchorDataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabelFormat()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSuppressExceptions()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_EmptyPointStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomAttributes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellCollection_LegendCellCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_MarkColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePalette()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScaleBreakStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_ImageUrl()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_InterlacedRowsColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_ColumnType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AlignOrientation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_SoftShadows()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSoftShadows3()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePrintingManager_PrintDocument()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMinimum()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScaleSegment_ScaleMaximum()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeScrollBarEventArgs_MousePositionX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLabel_TruncatedLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_GridTicks()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeImageAnnotation_Alignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_Alignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Alignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Alignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_Alignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_OnCustomizeMapAreas()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSubAxis_LocationOffset()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_MinimumWidth()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSelectionPointsStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_AxisY()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextFont()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextFont4()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_SizeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMinMovingDistance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea_CursorX()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_SmallScrollMinSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisDataView_SmallScrollMinSizeType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAxisScrollBar_ButtonColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeArea3DStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChart_Chart()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeBorderSkin_PageColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPoint_DataPoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartArea3DStyle_Light()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_AutoFitText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAllowTextEditing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCustomLabel_Text()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_Text()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTitle_Text()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_Text()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeToolTipEventArgs_Text()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMultiline()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextAnnotation_TextAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeAnnotationGroup_ClipToChartArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeSeries_YValueType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeInternalIntervalType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeCalloutAnnotation_CalloutAnchorCap()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLogarithmic()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegend_ItemColumnSpacing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeMarksNextToAxis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartEvent_SelectionRangeChanged()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeDataPointCollection_DataPointCollection()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCellColumn_HeaderColor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeLegendCell_LegendCell()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartImageDescriptionUrl()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeChartImageAlternateText()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributePostBackValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeTextStyle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeIsMapAreaAttributesEncoded()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DescriptionAttributeRightToLeft()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeCellColumns()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAxis()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeEditing()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributePosition()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeViewState()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeInterval()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAppearance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeDocking()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeDataSource()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAxisView()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLayout()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttribute3D()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeData()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeTitle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeToolTips()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLabels()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeGridTickMarks()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLabelAppearance()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAxes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeImage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeEmptyPoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAlignment()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAnnotation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeMarker()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeChart()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLocation()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeToolTip()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeMap()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeMapArea()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLabel()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeShape()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeMisc()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeSerializer()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeSubAxes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeSeriesItems()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeDataView()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeCharttitle()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeLegend()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAction()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeScale()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAnnotations()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAnchor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeBehavior()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeCursor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAnchorAxes()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_CategoryAttributeAccessibility()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_FormatErrorString()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ExceptionNameIsEmpty()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ActionListSeriesChartType()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ActionListSeriesXValueMember()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_ActionListSeriesYValueMembers()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticSettingsHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticSettingsKey()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticSettingsValue()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticSettingsInfo()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateName()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateAccess()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateAccessOK()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateAccessFail()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticQueueStateAccessInfo()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticActivityHeader()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticActivityTime()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticActivityMessage()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticActivityError()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DiagnosticChartImageServedFailNotFound()
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionImageLoaderUnsupportedType(string typeName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionImageLoaderIncorrectImageUrl(string url)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionImageLoaderIncorrectImageLocation(string location)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionAnnotationNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionAnnotationNameAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionAnnotationNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionTitleNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionTitleNameAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionTitleNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataSeriesNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataSeriesPointTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataSeriesYValueIndexNotExists(string yValueIndex, string seriesName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataSeriesKeywordFormatInvalid(string format)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataSeriesChartAreaInvalid(string chartArea, string seriesName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSeriesNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSeriesNameAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionEditorChartTypeRegistryServiceInObjectInaccessible(string objectName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendDesignerMarginObjectInvalid(string 'string')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartAreaAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartAreaInsertedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartAreaAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionAxisLabelsIntervalTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSubAxisNameNotFoundShort(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSubAxisNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionEnumInvalid(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionNamedImageNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionNamedImageAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionNamedImageInsertedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendDockedChartAreaIsMissing(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendReferencedInSeriesNotFound(string seriesName, string legendName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendSeparatorTypeUnknown(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendCellTypeUnknown(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendColumnAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendCellNameAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendCellNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendCellColumnNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionLegendCellColumnAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartAreaNameReferenceInvalid(string chartArea1, string chartArea2)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionTraceManagerUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeRegistryUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeUnknown(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeRequiresYValues(string name, string yValues)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeSecondaryYAxisUnsupported(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeSecondaryXAxisUnsupported(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTypeCanNotCombine(string type1, string type2)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionBorderTypeRegistryUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionBorderTypeNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionBorderTypeUnknown(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerDefaultConstructorUndefined(string 'property')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerPropertyNameUnknown(string 'property', string 'object')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerBinaryTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartSerializerBinaryHashCodeDuplicate(string anem1, string name2)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataManipulatorYValuesIndexExceeded(string formula)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataManipulatorGroupingFormulaAlreadyDefined(string formulaName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataManipulatorGroupingFormulaFormatInvalid(string formula)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataManipulatorGroupingFormulaNameInvalid(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartPictureUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSubAxisNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionSubAxisNameAlreadyExistsInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTitleSetIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTitleAddedIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartTitleDockedChartAreaIsMissing(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataManagerUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionKeywordsRegistryUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributesRegistryUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaModuleNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaModuleRegistryUnsupportedType(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaModuleNameUnknown(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionColumnNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataPointConverterUnavailableSorting(string 'value', string count)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataPointYValuesCountMismatch(string count)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataPointYValuesBindingCountMismatch(string count)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionDataPointYValuesSettingCountMismatch(string count)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionAttributeNameIsNotUnique(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaInvalidPeriod(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaNotEnoughDataPoints(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionKagiAttributeFormatInvalid(string attribute)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionKagiAttributeOutOfRange(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFunnelStyleUnknown(string style)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionErrorBarTypeInvalid(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionErrorBarTypeFormatInvalid(string format)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionChartCanNotCombine(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeValueInvalid(string 'value', string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeValueInvalid2(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeAngleOutOfRange(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeIsNotInRange0to1(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeIsNotInRange0to100(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeIsNotLargerThenZiro(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeIsNotInRange0to50(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeSeriesNameNotFound(string attributeName, string seriesName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeMustBeMoreThenValue(string attributeName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeMustBeBiggerThenValue(string attributeName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeMustBeInRange(string attributeName, string fromValue, string toValue)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid(string attributeName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid(string attributeName)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaDataSeriesNameNotFoundInCollection(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaDataSeriesNameNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaDataFormatInvalid(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues(string series1, string series2)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints(string series1, string series2)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionFormulaNotFound(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionForecastingNotEnoughDataPoints(string minimum)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionValueMustBeGreaterThan(string propertyName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionValueMustBeLessThan(string propertyName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionValueMustBeInRange(string propertyName, string fromValue, string toValue)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerCanNotLoadType(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerImageHandlerInterfaceUnsupported(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerParameterUnknown(string name, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerParameterInvalid(string name, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerPrivacyKeyInvalid(string name, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerTempDirectoryInvalid(string directory)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerTempDirectoryUnaccesible(string directory)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionHttpHandlerStorageTypeUnsupported(string 'type')
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionWebConfigUpdateFailed(string message)
		{
			ret
		}
		.method public static hidebysig 
			string EvenLogMessageChartImageFileTimeToLive(string minutes)
		{
			ret
		}
		.method public static hidebysig 
			string MessageYValueIndexInvalid(string maxIndex)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityTitleName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityAnnotationName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityLegendName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilitySeriesName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityDataPointName(int32 index)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityDataPointLabelName(int32 index)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityLegendTitleName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityChartAreaName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityChartAxisTitleName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityChartAxisMajorGridlinesName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string AccessibilityChartAxisMinorGridlinesName(string name)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionNameAlreadyExistsInCollection(string name, string collection)
		{
			ret
		}
		.method public static hidebysig 
			string ExceptionNameNotFound(string name, string collection)
		{
			ret
		}
		.method public static hidebysig 
			string ActionListSeriesDataGroup(string name)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticSettingsConfig(string s)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageSaved(string name)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageSavedPrivate(string name, string keyType)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageDeleted(string name)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageServed(string name)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageServedFail(string name, string reason)
		{
			ret
		}
		.method public static hidebysig 
			string DiagnosticChartImageServedFailPrivacyFail(string keyType)
		{
			ret
		}
		.property string ActionListSeriesChartType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ActionListSeriesChartType()
		}
		.property string ActionListSeriesXValueMember()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ActionListSeriesXValueMember()
		}
		.property string ActionListSeriesYValueMembers()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ActionListSeriesYValueMembers()
		}
		.property string CategoryAttribute3D()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttribute3D()
		}
		.property string CategoryAttributeAccessibility()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAccessibility()
		}
		.property string CategoryAttributeAction()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAction()
		}
		.property string CategoryAttributeAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAlignment()
		}
		.property string CategoryAttributeAnchor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAnchor()
		}
		.property string CategoryAttributeAnchorAxes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAnchorAxes()
		}
		.property string CategoryAttributeAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAnnotation()
		}
		.property string CategoryAttributeAnnotations()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAnnotations()
		}
		.property string CategoryAttributeAppearance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAppearance()
		}
		.property string CategoryAttributeAxes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAxes()
		}
		.property string CategoryAttributeAxis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAxis()
		}
		.property string CategoryAttributeAxisView()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeAxisView()
		}
		.property string CategoryAttributeBehavior()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeBehavior()
		}
		.property string CategoryAttributeCellColumns()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeCellColumns()
		}
		.property string CategoryAttributeChart()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeChart()
		}
		.property string CategoryAttributeCharttitle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeCharttitle()
		}
		.property string CategoryAttributeCursor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeCursor()
		}
		.property string CategoryAttributeData()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeData()
		}
		.property string CategoryAttributeDataSource()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeDataSource()
		}
		.property string CategoryAttributeDataView()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeDataView()
		}
		.property string CategoryAttributeDocking()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeDocking()
		}
		.property string CategoryAttributeEditing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeEditing()
		}
		.property string CategoryAttributeEmptyPoints()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeEmptyPoints()
		}
		.property string CategoryAttributeGridTickMarks()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeGridTickMarks()
		}
		.property string CategoryAttributeHeader()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeHeader()
		}
		.property string CategoryAttributeImage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeImage()
		}
		.property string CategoryAttributeInterval()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeInterval()
		}
		.property string CategoryAttributeLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLabel()
		}
		.property string CategoryAttributeLabelAppearance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLabelAppearance()
		}
		.property string CategoryAttributeLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLabels()
		}
		.property string CategoryAttributeLayout()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLayout()
		}
		.property string CategoryAttributeLegend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLegend()
		}
		.property string CategoryAttributeLocation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeLocation()
		}
		.property string CategoryAttributeMap()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeMap()
		}
		.property string CategoryAttributeMapArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeMapArea()
		}
		.property string CategoryAttributeMarker()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeMarker()
		}
		.property string CategoryAttributeMisc()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeMisc()
		}
		.property string CategoryAttributePosition()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributePosition()
		}
		.property string CategoryAttributeScale()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeScale()
		}
		.property string CategoryAttributeSerializer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeSerializer()
		}
		.property string CategoryAttributeSeriesItems()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeSeriesItems()
		}
		.property string CategoryAttributeShape()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeShape()
		}
		.property string CategoryAttributeSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeSize()
		}
		.property string CategoryAttributeSubAxes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeSubAxes()
		}
		.property string CategoryAttributeTitle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeTitle()
		}
		.property string CategoryAttributeToolTip()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeToolTip()
		}
		.property string CategoryAttributeToolTips()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeToolTips()
		}
		.property string CategoryAttributeViewState()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_CategoryAttributeViewState()
		}
		.property class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.get class [mscorlib]System.Globalization.CultureInfo 'System.Web.UI.DataVisualization.Charting.SR'::get_Culture()
			.set void 'System.Web.UI.DataVisualization.Charting.SR'::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property string DesciptionCustomLabelEditorTitle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DesciptionCustomLabelEditorTitle()
		}
		.property string DesciptionCustomLabelFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DesciptionCustomLabelFormatInvalid()
		}
		.property string DescriptionAttributeAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAlignment()
		}
		.property string DescriptionAttributeAllowAnchorMoving3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowAnchorMoving3()
		}
		.property string DescriptionAttributeAllowMoving()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowMoving()
		}
		.property string DescriptionAttributeAllowOutsidePlotArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowOutsidePlotArea()
		}
		.property string DescriptionAttributeAllowPathEditing3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowPathEditing3()
		}
		.property string DescriptionAttributeAllowResizing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowResizing()
		}
		.property string DescriptionAttributeAllowSelecting()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowSelecting()
		}
		.property string DescriptionAttributeAllowTextEditing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAllowTextEditing()
		}
		.property string DescriptionAttributeAnchorAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorAlignment()
		}
		.property string DescriptionAttributeAnchorDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorDataPoint()
		}
		.property string DescriptionAttributeAnchorDataPointName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorDataPointName()
		}
		.property string DescriptionAttributeAnchorOffsetX3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorOffsetX3()
		}
		.property string DescriptionAttributeAnchorOffsetY3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorOffsetY3()
		}
		.property string DescriptionAttributeAnchorX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorX()
		}
		.property string DescriptionAttributeAnchorY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnchorY()
		}
		.property string DescriptionAttributeAnnotationBaseX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationBaseX()
		}
		.property string DescriptionAttributeAnnotationBaseY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationBaseY()
		}
		.property string DescriptionAttributeAnnotationClipToChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationClipToChartArea()
		}
		.property string DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor()
		}
		.property string DescriptionAttributeAnnotationCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationCollection_Item()
		}
		.property string DescriptionAttributeAnnotationGroup_AllowAnchorMoving()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_AllowAnchorMoving()
		}
		.property string DescriptionAttributeAnnotationGroup_AllowPathEditing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_AllowPathEditing()
		}
		.property string DescriptionAttributeAnnotationGroup_AnnotationGroup()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_AnnotationGroup()
		}
		.property string DescriptionAttributeAnnotationGroup_Annotations()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_Annotations()
		}
		.property string DescriptionAttributeAnnotationGroup_ClipToChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_ClipToChartArea()
		}
		.property string DescriptionAttributeAnnotationGroup_Selected()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_Selected()
		}
		.property string DescriptionAttributeAnnotationGroup_SizeAlwaysRelative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_SizeAlwaysRelative()
		}
		.property string DescriptionAttributeAnnotationGroup_Visible()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationGroup_Visible()
		}
		.property string DescriptionAttributeAnnotationHeight()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationHeight()
		}
		.property string DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection()
		}
		.property string DescriptionAttributeAnnotationPathPointCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPointCollection_Item()
		}
		.property string DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint()
		}
		.property string DescriptionAttributeAnnotationPathPoint_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPoint_Name()
		}
		.property string DescriptionAttributeAnnotationPathPoint_X()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPoint_X()
		}
		.property string DescriptionAttributeAnnotationPathPoint_Y()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPathPoint_Y()
		}
		.property string DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs()
		}
		.property string DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle()
		}
		.property string DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels()
		}
		.property string DescriptionAttributeAnnotationType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationType()
		}
		.property string DescriptionAttributeAnnotationWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotationWidth()
		}
		.property string DescriptionAttributeAnnotation_Annotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotation_Annotation()
		}
		.property string DescriptionAttributeAnnotation_AnnotationType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotation_AnnotationType()
		}
		.property string DescriptionAttributeAnnotations3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAnnotations3()
		}
		.property string DescriptionAttributeAntiAlias()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAntiAlias()
		}
		.property string DescriptionAttributeArea3DStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArea3DStyle()
		}
		.property string DescriptionAttributeArrowAnnotation_ArrowAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArrowAnnotation_ArrowAnnotation()
		}
		.property string DescriptionAttributeArrowAnnotation_ArrowSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArrowAnnotation_ArrowSize()
		}
		.property string DescriptionAttributeArrowAnnotation_ArrowStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArrowAnnotation_ArrowStyle()
		}
		.property string DescriptionAttributeArrowStyle_ArrowStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArrowStyle_ArrowStyle()
		}
		.property string DescriptionAttributeArrows()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeArrows()
		}
		.property string DescriptionAttributeAxis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxis()
		}
		.property string DescriptionAttributeAxisDataView_AxisDataView()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_AxisDataView()
		}
		.property string DescriptionAttributeAxisDataView_IsZoomed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_IsZoomed()
		}
		.property string DescriptionAttributeAxisDataView_MinSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_MinSize()
		}
		.property string DescriptionAttributeAxisDataView_MinSizeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_MinSizeType()
		}
		.property string DescriptionAttributeAxisDataView_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_Position()
		}
		.property string DescriptionAttributeAxisDataView_Size()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_Size()
		}
		.property string DescriptionAttributeAxisDataView_SizeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_SizeType()
		}
		.property string DescriptionAttributeAxisDataView_SmallScrollMinSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_SmallScrollMinSize()
		}
		.property string DescriptionAttributeAxisDataView_SmallScrollMinSizeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_SmallScrollMinSizeType()
		}
		.property string DescriptionAttributeAxisDataView_SmallScrollSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_SmallScrollSize()
		}
		.property string DescriptionAttributeAxisDataView_SmallScrollSizeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_SmallScrollSizeType()
		}
		.property string DescriptionAttributeAxisDataView_Zoomable()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisDataView_Zoomable()
		}
		.property string DescriptionAttributeAxisLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisLabel()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_BreakLineType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_BreakLineType()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_Enabled()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_Spacing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_Spacing()
		}
		.property string DescriptionAttributeAxisScaleBreakStyle_StartFromZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleBreakStyle_StartFromZero()
		}
		.property string DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection()
		}
		.property string DescriptionAttributeAxisScaleSegmentCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegmentCollection_Item()
		}
		.property string DescriptionAttributeAxisScaleSegment_AxisScaleSegment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_AxisScaleSegment()
		}
		.property string DescriptionAttributeAxisScaleSegment_Interval()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_Interval()
		}
		.property string DescriptionAttributeAxisScaleSegment_IntervalOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_IntervalOffset()
		}
		.property string DescriptionAttributeAxisScaleSegment_IntervalOffsetType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_IntervalOffsetType()
		}
		.property string DescriptionAttributeAxisScaleSegment_IntervalType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_IntervalType()
		}
		.property string DescriptionAttributeAxisScaleSegment_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_Position()
		}
		.property string DescriptionAttributeAxisScaleSegment_ScaleMaximum()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_ScaleMaximum()
		}
		.property string DescriptionAttributeAxisScaleSegment_ScaleMinimum()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_ScaleMinimum()
		}
		.property string DescriptionAttributeAxisScaleSegment_Size()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_Size()
		}
		.property string DescriptionAttributeAxisScaleSegment_Spacing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_Spacing()
		}
		.property string DescriptionAttributeAxisScaleSegment_Tag()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScaleSegment_Tag()
		}
		.property string DescriptionAttributeAxisScrollBar_ButtonColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScrollBar_ButtonColor()
		}
		.property string DescriptionAttributeAxisScrollBar_Buttons()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScrollBar_Buttons()
		}
		.property string DescriptionAttributeAxisScrollBar_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScrollBar_Enabled()
		}
		.property string DescriptionAttributeAxisScrollBar_PositionInside()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScrollBar_PositionInside()
		}
		.property string DescriptionAttributeAxisScrollBar_Size()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisScrollBar_Size()
		}
		.property string DescriptionAttributeAxisX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisX()
		}
		.property string DescriptionAttributeAxisXName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisXName()
		}
		.property string DescriptionAttributeAxisY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisY()
		}
		.property string DescriptionAttributeAxisYName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxisYName()
		}
		.property string DescriptionAttributeAxis_Axis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxis_Axis()
		}
		.property string DescriptionAttributeAxis_MaxAutoSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxis_MaxAutoSize()
		}
		.property string DescriptionAttributeAxis_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeAxis_Name()
		}
		.property string DescriptionAttributeBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackColor()
		}
		.property string DescriptionAttributeBackGradientStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackGradientStyle()
		}
		.property string DescriptionAttributeBackHatchStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackHatchStyle()
		}
		.property string DescriptionAttributeBackImage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackImage()
		}
		.property string DescriptionAttributeBackImageAlign()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackImageAlign()
		}
		.property string DescriptionAttributeBackSecondaryColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBackSecondaryColor()
		}
		.property string DescriptionAttributeBorder3DAnnotation_Border3DAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorder3DAnnotation_Border3DAnnotation()
		}
		.property string DescriptionAttributeBorderColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderColor()
		}
		.property string DescriptionAttributeBorderDashStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderDashStyle()
		}
		.property string DescriptionAttributeBorderSkin()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin()
		}
		.property string DescriptionAttributeBorderSkin_BorderSkin()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_BorderSkin()
		}
		.property string DescriptionAttributeBorderSkin_FrameBackSecondaryColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_FrameBackSecondaryColor()
		}
		.property string DescriptionAttributeBorderSkin_FrameBorderDashStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_FrameBorderDashStyle()
		}
		.property string DescriptionAttributeBorderSkin_FrameBorderWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_FrameBorderWidth()
		}
		.property string DescriptionAttributeBorderSkin_PageColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_PageColor()
		}
		.property string DescriptionAttributeBorderSkin_SkinStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderSkin_SkinStyle()
		}
		.property string DescriptionAttributeBorderWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBorderWidth()
		}
		.property string DescriptionAttributeBottom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeBottom()
		}
		.property string DescriptionAttributeCalloutAnnotation_AnchorOffsetX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutAnnotation_AnchorOffsetX()
		}
		.property string DescriptionAttributeCalloutAnnotation_AnchorOffsetY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutAnnotation_AnchorOffsetY()
		}
		.property string DescriptionAttributeCalloutAnnotation_CalloutAnchorCap()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutAnnotation_CalloutAnchorCap()
		}
		.property string DescriptionAttributeCalloutAnnotation_CalloutAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutAnnotation_CalloutAnnotation()
		}
		.property string DescriptionAttributeCalloutAnnotation_CalloutStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutAnnotation_CalloutStyle()
		}
		.property string DescriptionAttributeCalloutBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutBackColor()
		}
		.property string DescriptionAttributeCalloutLineAnchorCap()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutLineAnchorCap()
		}
		.property string DescriptionAttributeCalloutLineColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutLineColor()
		}
		.property string DescriptionAttributeCalloutStyle3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutStyle3()
		}
		.property string DescriptionAttributeCalloutStyle_CalloutStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCalloutStyle_CalloutStyle()
		}
		.property string DescriptionAttributeChart()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart()
		}
		.property string DescriptionAttributeChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea()
		}
		.property string DescriptionAttributeChartArea3DStyle_Clustered()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Clustered()
		}
		.property string DescriptionAttributeChartArea3DStyle_Enable3D()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Enable3D()
		}
		.property string DescriptionAttributeChartArea3DStyle_Inclination()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Inclination()
		}
		.property string DescriptionAttributeChartArea3DStyle_Light()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Light()
		}
		.property string DescriptionAttributeChartArea3DStyle_Perspective()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Perspective()
		}
		.property string DescriptionAttributeChartArea3DStyle_PointDepth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_PointDepth()
		}
		.property string DescriptionAttributeChartArea3DStyle_PointGapDepth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_PointGapDepth()
		}
		.property string DescriptionAttributeChartArea3DStyle_RightAngleAxes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_RightAngleAxes()
		}
		.property string DescriptionAttributeChartArea3DStyle_Rotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_Rotation()
		}
		.property string DescriptionAttributeChartArea3DStyle_WallWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea3DStyle_WallWidth()
		}
		.property string DescriptionAttributeChartAreaCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartAreaCollection_Item()
		}
		.property string DescriptionAttributeChartArea_AlignOrientation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AlignOrientation()
		}
		.property string DescriptionAttributeChartArea_AlignType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AlignType()
		}
		.property string DescriptionAttributeChartArea_AlignWithChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AlignWithChartArea()
		}
		.property string DescriptionAttributeChartArea_Axes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_Axes()
		}
		.property string DescriptionAttributeChartArea_AxisX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AxisX()
		}
		.property string DescriptionAttributeChartArea_AxisX2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AxisX2()
		}
		.property string DescriptionAttributeChartArea_AxisY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AxisY()
		}
		.property string DescriptionAttributeChartArea_AxisY2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_AxisY2()
		}
		.property string DescriptionAttributeChartArea_ChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_ChartArea()
		}
		.property string DescriptionAttributeChartArea_CursorX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_CursorX()
		}
		.property string DescriptionAttributeChartArea_CursorY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_CursorY()
		}
		.property string DescriptionAttributeChartArea_EquallySizedAxesFont()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_EquallySizedAxesFont()
		}
		.property string DescriptionAttributeChartArea_InnerPlotPosition()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_InnerPlotPosition()
		}
		.property string DescriptionAttributeChartArea_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_Name()
		}
		.property string DescriptionAttributeChartArea_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_Position()
		}
		.property string DescriptionAttributeChartArea_Visible()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartArea_Visible()
		}
		.property string DescriptionAttributeChartAreas()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartAreas()
		}
		.property string DescriptionAttributeChartEvent_AnnotationPlaced()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AnnotationPlaced()
		}
		.property string DescriptionAttributeChartEvent_AnnotationPositionChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AnnotationPositionChanged()
		}
		.property string DescriptionAttributeChartEvent_AnnotationPositionChanging()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AnnotationPositionChanging()
		}
		.property string DescriptionAttributeChartEvent_AnnotationSelectionChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AnnotationSelectionChanged()
		}
		.property string DescriptionAttributeChartEvent_AnnotationTextChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AnnotationTextChanged()
		}
		.property string DescriptionAttributeChartEvent_AxisScrollBarClicked()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AxisScrollBarClicked()
		}
		.property string DescriptionAttributeChartEvent_AxisViewChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AxisViewChanged()
		}
		.property string DescriptionAttributeChartEvent_AxisViewChanging()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_AxisViewChanging()
		}
		.property string DescriptionAttributeChartEvent_Click()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_Click()
		}
		.property string DescriptionAttributeChartEvent_CursorPositionChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_CursorPositionChanged()
		}
		.property string DescriptionAttributeChartEvent_CursorPositionChanging()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_CursorPositionChanging()
		}
		.property string DescriptionAttributeChartEvent_Customize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_Customize()
		}
		.property string DescriptionAttributeChartEvent_CustomizeLegend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_CustomizeLegend()
		}
		.property string DescriptionAttributeChartEvent_CustomizeMapAreas()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_CustomizeMapAreas()
		}
		.property string DescriptionAttributeChartEvent_GetToolTipText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_GetToolTipText()
		}
		.property string DescriptionAttributeChartEvent_PostPaint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_PostPaint()
		}
		.property string DescriptionAttributeChartEvent_PrePaint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_PrePaint()
		}
		.property string DescriptionAttributeChartEvent_SelectionRangeChanged()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_SelectionRangeChanged()
		}
		.property string DescriptionAttributeChartEvent_SelectionRangeChanging()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartEvent_SelectionRangeChanging()
		}
		.property string DescriptionAttributeChartImageAlternateText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartImageAlternateText()
		}
		.property string DescriptionAttributeChartImageDescriptionUrl()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartImageDescriptionUrl()
		}
		.property string DescriptionAttributeChartImageType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartImageType()
		}
		.property string DescriptionAttributeChartImage_Compression()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartImage_Compression()
		}
		.property string DescriptionAttributeChartSerializer_ChartSerializer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_ChartSerializer()
		}
		.property string DescriptionAttributeChartSerializer_Content()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_Content()
		}
		.property string DescriptionAttributeChartSerializer_Format()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_Format()
		}
		.property string DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes()
		}
		.property string DescriptionAttributeChartSerializer_NonSerializableContent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_NonSerializableContent()
		}
		.property string DescriptionAttributeChartSerializer_ResetWhenLoading()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_ResetWhenLoading()
		}
		.property string DescriptionAttributeChartSerializer_SerializableContent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_SerializableContent()
		}
		.property string DescriptionAttributeChartSerializer_TemplateMode()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChartSerializer_TemplateMode()
		}
		.property string DescriptionAttributeChart_BorderlineWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_BorderlineWidth()
		}
		.property string DescriptionAttributeChart_BuildNumber()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_BuildNumber()
		}
		.property string DescriptionAttributeChart_Chart()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Chart()
		}
		.property string DescriptionAttributeChart_Compression()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Compression()
		}
		.property string DescriptionAttributeChart_EnableViewState()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_EnableViewState()
		}
		.property string DescriptionAttributeChart_ImageStorageMode()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_ImageStorageMode()
		}
		.property string DescriptionAttributeChart_ImageUrl()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_ImageUrl()
		}
		.property string DescriptionAttributeChart_Images()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Images()
		}
		.property string DescriptionAttributeChart_OnBackPaint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_OnBackPaint()
		}
		.property string DescriptionAttributeChart_OnCustomize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_OnCustomize()
		}
		.property string DescriptionAttributeChart_OnCustomizeLegend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_OnCustomizeLegend()
		}
		.property string DescriptionAttributeChart_OnCustomizeMapAreas()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_OnCustomizeMapAreas()
		}
		.property string DescriptionAttributeChart_OnPaint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_OnPaint()
		}
		.property string DescriptionAttributeChart_PaletteCustomColors()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_PaletteCustomColors()
		}
		.property string DescriptionAttributeChart_Printing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Printing()
		}
		.property string DescriptionAttributeChart_RenderType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_RenderType()
		}
		.property string DescriptionAttributeChart_Serializer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Serializer()
		}
		.property string DescriptionAttributeChart_Series()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Series()
		}
		.property string DescriptionAttributeChart_Size()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_Size()
		}
		.property string DescriptionAttributeChart_SoftShadows()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_SoftShadows()
		}
		.property string DescriptionAttributeChart_ViewStateContent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_ViewStateContent()
		}
		.property string DescriptionAttributeChart_ViewStateData()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeChart_ViewStateData()
		}
		.property string DescriptionAttributeColor4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeColor4()
		}
		.property string DescriptionAttributeCrossing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCrossing()
		}
		.property string DescriptionAttributeCursorEventArgs_NewPosition()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursorEventArgs_NewPosition()
		}
		.property string DescriptionAttributeCursorEventArgs_NewSelectionEnd()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursorEventArgs_NewSelectionEnd()
		}
		.property string DescriptionAttributeCursorEventArgs_NewSelectionStart()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursorEventArgs_NewSelectionStart()
		}
		.property string DescriptionAttributeCursor_AutoScroll()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_AutoScroll()
		}
		.property string DescriptionAttributeCursor_AxisType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_AxisType()
		}
		.property string DescriptionAttributeCursor_Cursor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_Cursor()
		}
		.property string DescriptionAttributeCursor_Interval()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_Interval()
		}
		.property string DescriptionAttributeCursor_IntervalOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_IntervalOffset()
		}
		.property string DescriptionAttributeCursor_IntervalOffsetType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_IntervalOffsetType()
		}
		.property string DescriptionAttributeCursor_IntervalType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_IntervalType()
		}
		.property string DescriptionAttributeCursor_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_Position()
		}
		.property string DescriptionAttributeCursor_SelectionColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_SelectionColor()
		}
		.property string DescriptionAttributeCursor_SelectionEnd()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_SelectionEnd()
		}
		.property string DescriptionAttributeCursor_SelectionStart()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_SelectionStart()
		}
		.property string DescriptionAttributeCursor_UserEnabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_UserEnabled()
		}
		.property string DescriptionAttributeCursor_UserSelection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCursor_UserSelection()
		}
		.property string DescriptionAttributeCustomAttributes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomAttributes()
		}
		.property string DescriptionAttributeCustomAttributesExtended()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomAttributesExtended()
		}
		.property string DescriptionAttributeCustomLabel_CustomLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_CustomLabel()
		}
		.property string DescriptionAttributeCustomLabel_From()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_From()
		}
		.property string DescriptionAttributeCustomLabel_GridTicks()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_GridTicks()
		}
		.property string DescriptionAttributeCustomLabel_Image()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_Image()
		}
		.property string DescriptionAttributeCustomLabel_ImageUrl()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_ImageUrl()
		}
		.property string DescriptionAttributeCustomLabel_LabelMark()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_LabelMark()
		}
		.property string DescriptionAttributeCustomLabel_MarkColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_MarkColor()
		}
		.property string DescriptionAttributeCustomLabel_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_Name()
		}
		.property string DescriptionAttributeCustomLabel_Row()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_Row()
		}
		.property string DescriptionAttributeCustomLabel_RowIndex()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_RowIndex()
		}
		.property string DescriptionAttributeCustomLabel_Text()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_Text()
		}
		.property string DescriptionAttributeCustomLabel_To()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabel_To()
		}
		.property string DescriptionAttributeCustomLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabels()
		}
		.property string DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection()
		}
		.property string DescriptionAttributeDataManager_PaletteCustomColors()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataManager_PaletteCustomColors()
		}
		.property string DescriptionAttributeDataManipulator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataManipulator()
		}
		.property string DescriptionAttributeDataPointCollection_DataPointCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPointCollection_DataPointCollection()
		}
		.property string DescriptionAttributeDataPointComparer_DataPointComparer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPointComparer_DataPointComparer()
		}
		.property string DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties()
		}
		.property string DescriptionAttributeDataPoint_DataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPoint_DataPoint()
		}
		.property string DescriptionAttributeDataPoint_Empty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPoint_Empty()
		}
		.property string DescriptionAttributeDataPoint_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPoint_Name()
		}
		.property string DescriptionAttributeDataPoint_XValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPoint_XValue()
		}
		.property string DescriptionAttributeDataPoint_YValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataPoint_YValues()
		}
		.property string DescriptionAttributeDataSeriesGroupID()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataSeriesGroupID()
		}
		.property string DescriptionAttributeDataSource()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDataSource()
		}
		.property string DescriptionAttributeDisabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDisabled()
		}
		.property string DescriptionAttributeDrawInfinitive()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeDrawInfinitive()
		}
		.property string DescriptionAttributeElementPosition_Auto()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_Auto()
		}
		.property string DescriptionAttributeElementPosition_ElementPosition()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_ElementPosition()
		}
		.property string DescriptionAttributeElementPosition_Height()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_Height()
		}
		.property string DescriptionAttributeElementPosition_Width()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_Width()
		}
		.property string DescriptionAttributeElementPosition_X()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_X()
		}
		.property string DescriptionAttributeElementPosition_Y()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeElementPosition_Y()
		}
		.property string DescriptionAttributeEllipseAnnotation_EllipseAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeEllipseAnnotation_EllipseAnnotation()
		}
		.property string DescriptionAttributeEnabled13()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeEnabled13()
		}
		.property string DescriptionAttributeEnabled5()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeEnabled5()
		}
		.property string DescriptionAttributeEnabled7()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeEnabled7()
		}
		.property string DescriptionAttributeFont()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeFont()
		}
		.property string DescriptionAttributeFontColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeFontColor()
		}
		.property string DescriptionAttributeForeColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeForeColor()
		}
		.property string DescriptionAttributeFrameBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeFrameBackColor()
		}
		.property string DescriptionAttributeFrameBackHatchStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeFrameBackHatchStyle()
		}
		.property string DescriptionAttributeFreeDrawPlacement()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeFreeDrawPlacement()
		}
		.property string DescriptionAttributeGrid_Grid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeGrid_Grid()
		}
		.property string DescriptionAttributeHeaderBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeHeaderBackColor()
		}
		.property string DescriptionAttributeHeight3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeHeight3()
		}
		.property string DescriptionAttributeHideOverlapped()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeHideOverlapped()
		}
		.property string DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation()
		}
		.property string DescriptionAttributeImageAnnotation_Alignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageAnnotation_Alignment()
		}
		.property string DescriptionAttributeImageAnnotation_Image()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageAnnotation_Image()
		}
		.property string DescriptionAttributeImageAnnotation_ImageAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageAnnotation_ImageAnnotation()
		}
		.property string DescriptionAttributeImageTransparentColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageTransparentColor()
		}
		.property string DescriptionAttributeImageType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageType()
		}
		.property string DescriptionAttributeImageWrapMode()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeImageWrapMode()
		}
		.property string DescriptionAttributeInterlaced()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeInterlaced()
		}
		.property string DescriptionAttributeInterlacedColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeInterlacedColor()
		}
		.property string DescriptionAttributeInternalIntervalType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeInternalIntervalType()
		}
		.property string DescriptionAttributeInterval4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeInterval4()
		}
		.property string DescriptionAttributeInterval6()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeInterval6()
		}
		.property string DescriptionAttributeIntervalAutoMode()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalAutoMode()
		}
		.property string DescriptionAttributeIntervalOffset3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalOffset3()
		}
		.property string DescriptionAttributeIntervalOffset6()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalOffset6()
		}
		.property string DescriptionAttributeIntervalOffsetType4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalOffsetType4()
		}
		.property string DescriptionAttributeIntervalOffsetType6()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalOffsetType6()
		}
		.property string DescriptionAttributeIntervalType3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalType3()
		}
		.property string DescriptionAttributeIntervalType4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIntervalType4()
		}
		.property string DescriptionAttributeIsMapAreaAttributesEncoded()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeIsMapAreaAttributesEncoded()
		}
		.property string DescriptionAttributeLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel()
		}
		.property string DescriptionAttributeLabelBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelBackColor()
		}
		.property string DescriptionAttributeLabelBorderDashStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelBorderDashStyle()
		}
		.property string DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle()
		}
		.property string DescriptionAttributeLabelFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelFormat()
		}
		.property string DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle()
		}
		.property string DescriptionAttributeLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelStyle()
		}
		.property string DescriptionAttributeLabelToolTip()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelToolTip()
		}
		.property string DescriptionAttributeLabel_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_Enabled()
		}
		.property string DescriptionAttributeLabel_Font()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_Font()
		}
		.property string DescriptionAttributeLabel_FontAngle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_FontAngle()
		}
		.property string DescriptionAttributeLabel_Format()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_Format()
		}
		.property string DescriptionAttributeLabel_Interval()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_Interval()
		}
		.property string DescriptionAttributeLabel_IntervalOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_IntervalOffset()
		}
		.property string DescriptionAttributeLabel_IntervalOffsetType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_IntervalOffsetType()
		}
		.property string DescriptionAttributeLabel_IntervalType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_IntervalType()
		}
		.property string DescriptionAttributeLabel_Label()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_Label()
		}
		.property string DescriptionAttributeLabel_OffsetLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_OffsetLabels()
		}
		.property string DescriptionAttributeLabel_ShowEndLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_ShowEndLabels()
		}
		.property string DescriptionAttributeLabel_TruncatedLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabel_TruncatedLabels()
		}
		.property string DescriptionAttributeLabelsAutoFit()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelsAutoFit()
		}
		.property string DescriptionAttributeLabelsAutoFitMaxFontSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelsAutoFitMaxFontSize()
		}
		.property string DescriptionAttributeLabelsAutoFitMinFontSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelsAutoFitMinFontSize()
		}
		.property string DescriptionAttributeLabelsAutoFitStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLabelsAutoFitStyle()
		}
		.property string DescriptionAttributeLegend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend()
		}
		.property string DescriptionAttributeLegendCellCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellCollection_Item()
		}
		.property string DescriptionAttributeLegendCellCollection_LegendCellCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellCollection_LegendCellCollection()
		}
		.property string DescriptionAttributeLegendCellColumnCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumnCollection_Item()
		}
		.property string DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection()
		}
		.property string DescriptionAttributeLegendCellColumn_Alignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_Alignment()
		}
		.property string DescriptionAttributeLegendCellColumn_ColumnType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_ColumnType()
		}
		.property string DescriptionAttributeLegendCellColumn_Font()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_Font()
		}
		.property string DescriptionAttributeLegendCellColumn_HeaderColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_HeaderColor()
		}
		.property string DescriptionAttributeLegendCellColumn_HeaderFont()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_HeaderFont()
		}
		.property string DescriptionAttributeLegendCellColumn_HeaderText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_HeaderText()
		}
		.property string DescriptionAttributeLegendCellColumn_HeaderTextAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_HeaderTextAlignment()
		}
		.property string DescriptionAttributeLegendCellColumn_LegendCellColumn()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_LegendCellColumn()
		}
		.property string DescriptionAttributeLegendCellColumn_Margins()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_Margins()
		}
		.property string DescriptionAttributeLegendCellColumn_MaximumWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_MaximumWidth()
		}
		.property string DescriptionAttributeLegendCellColumn_MinimumWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_MinimumWidth()
		}
		.property string DescriptionAttributeLegendCellColumn_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_Name()
		}
		.property string DescriptionAttributeLegendCellColumn_SeriesSymbolSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_SeriesSymbolSize()
		}
		.property string DescriptionAttributeLegendCellColumn_Text()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCellColumn_Text()
		}
		.property string DescriptionAttributeLegendCell_Alignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Alignment()
		}
		.property string DescriptionAttributeLegendCell_CellSpan()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_CellSpan()
		}
		.property string DescriptionAttributeLegendCell_CellType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_CellType()
		}
		.property string DescriptionAttributeLegendCell_Font()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Font()
		}
		.property string DescriptionAttributeLegendCell_Image()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Image()
		}
		.property string DescriptionAttributeLegendCell_ImageSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_ImageSize()
		}
		.property string DescriptionAttributeLegendCell_LegendCell()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_LegendCell()
		}
		.property string DescriptionAttributeLegendCell_Margins()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Margins()
		}
		.property string DescriptionAttributeLegendCell_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Name()
		}
		.property string DescriptionAttributeLegendCell_SeriesSymbolSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_SeriesSymbolSize()
		}
		.property string DescriptionAttributeLegendCell_Text()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCell_Text()
		}
		.property string DescriptionAttributeLegendCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCollection_Item()
		}
		.property string DescriptionAttributeLegendCollection_LegendCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendCollection_LegendCollection()
		}
		.property string DescriptionAttributeLegendFontColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendFontColor()
		}
		.property string DescriptionAttributeLegendItem_Cells()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Cells()
		}
		.property string DescriptionAttributeLegendItem_Color()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Color()
		}
		.property string DescriptionAttributeLegendItem_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Enabled()
		}
		.property string DescriptionAttributeLegendItem_Image()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Image()
		}
		.property string DescriptionAttributeLegendItem_LegendItem()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_LegendItem()
		}
		.property string DescriptionAttributeLegendItem_MarkerColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_MarkerColor()
		}
		.property string DescriptionAttributeLegendItem_MarkerSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_MarkerSize()
		}
		.property string DescriptionAttributeLegendItem_MarkerStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_MarkerStyle()
		}
		.property string DescriptionAttributeLegendItem_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Name()
		}
		.property string DescriptionAttributeLegendItem_Separator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Separator()
		}
		.property string DescriptionAttributeLegendItem_SeparatorColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_SeparatorColor()
		}
		.property string DescriptionAttributeLegendItem_SeriesName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_SeriesName()
		}
		.property string DescriptionAttributeLegendItem_SeriesPointIndex()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_SeriesPointIndex()
		}
		.property string DescriptionAttributeLegendItem_Style()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendItem_Style()
		}
		.property string DescriptionAttributeLegendText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendText()
		}
		.property string DescriptionAttributeLegendToolTip()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendToolTip()
		}
		.property string DescriptionAttributeLegendUrl()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegendUrl()
		}
		.property string DescriptionAttributeLegend_Alignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Alignment()
		}
		.property string DescriptionAttributeLegend_AutoFitMinFontSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_AutoFitMinFontSize()
		}
		.property string DescriptionAttributeLegend_AutoFitText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_AutoFitText()
		}
		.property string DescriptionAttributeLegend_CellColumns()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_CellColumns()
		}
		.property string DescriptionAttributeLegend_CustomItems()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_CustomItems()
		}
		.property string DescriptionAttributeLegend_DockInsideChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_DockInsideChartArea()
		}
		.property string DescriptionAttributeLegend_DockToChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_DockToChartArea()
		}
		.property string DescriptionAttributeLegend_Docking()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Docking()
		}
		.property string DescriptionAttributeLegend_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Enabled()
		}
		.property string DescriptionAttributeLegend_EquallySpacedItems()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_EquallySpacedItems()
		}
		.property string DescriptionAttributeLegend_Font()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Font()
		}
		.property string DescriptionAttributeLegend_HeaderSeparator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_HeaderSeparator()
		}
		.property string DescriptionAttributeLegend_HeaderSeparatorColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_HeaderSeparatorColor()
		}
		.property string DescriptionAttributeLegend_InsideChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_InsideChartArea()
		}
		.property string DescriptionAttributeLegend_InterlacedRows()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_InterlacedRows()
		}
		.property string DescriptionAttributeLegend_InterlacedRowsColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_InterlacedRowsColor()
		}
		.property string DescriptionAttributeLegend_ItemColumnSeparator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_ItemColumnSeparator()
		}
		.property string DescriptionAttributeLegend_ItemColumnSeparatorColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_ItemColumnSeparatorColor()
		}
		.property string DescriptionAttributeLegend_ItemColumnSpacing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_ItemColumnSpacing()
		}
		.property string DescriptionAttributeLegend_Legend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Legend()
		}
		.property string DescriptionAttributeLegend_LegendStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_LegendStyle()
		}
		.property string DescriptionAttributeLegend_MaxAutoSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_MaxAutoSize()
		}
		.property string DescriptionAttributeLegend_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Name()
		}
		.property string DescriptionAttributeLegend_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Position()
		}
		.property string DescriptionAttributeLegend_Reversed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Reversed()
		}
		.property string DescriptionAttributeLegend_TableStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TableStyle()
		}
		.property string DescriptionAttributeLegend_TextWrapThreshold()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TextWrapThreshold()
		}
		.property string DescriptionAttributeLegend_Title()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_Title()
		}
		.property string DescriptionAttributeLegend_TitleAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TitleAlignment()
		}
		.property string DescriptionAttributeLegend_TitleColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TitleColor()
		}
		.property string DescriptionAttributeLegend_TitleSeparator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TitleSeparator()
		}
		.property string DescriptionAttributeLegend_TitleSeparatorColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegend_TitleSeparatorColor()
		}
		.property string DescriptionAttributeLegends()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLegends()
		}
		.property string DescriptionAttributeLineAnnotation_LineAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLineAnnotation_LineAnnotation()
		}
		.property string DescriptionAttributeLineColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLineColor()
		}
		.property string DescriptionAttributeLineDashStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLineDashStyle()
		}
		.property string DescriptionAttributeLineWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLineWidth()
		}
		.property string DescriptionAttributeLogarithmBase()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLogarithmBase()
		}
		.property string DescriptionAttributeLogarithmic()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeLogarithmic()
		}
		.property string DescriptionAttributeMajorGrid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMajorGrid()
		}
		.property string DescriptionAttributeMajorTickMark()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMajorTickMark()
		}
		.property string DescriptionAttributeMapAreaAttributes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapAreaAttributes()
		}
		.property string DescriptionAttributeMapArea_Coordinates()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapArea_Coordinates()
		}
		.property string DescriptionAttributeMapArea_Custom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapArea_Custom()
		}
		.property string DescriptionAttributeMapArea_MapArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapArea_MapArea()
		}
		.property string DescriptionAttributeMapArea_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapArea_Name()
		}
		.property string DescriptionAttributeMapArea_Shape()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapArea_Shape()
		}
		.property string DescriptionAttributeMapAreas()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapAreas()
		}
		.property string DescriptionAttributeMapAreasCollection_MapAreasCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapAreasCollection_MapAreasCollection()
		}
		.property string DescriptionAttributeMapEnabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMapEnabled()
		}
		.property string DescriptionAttributeMargin()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargin()
		}
		.property string DescriptionAttributeMargins_Bottom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargins_Bottom()
		}
		.property string DescriptionAttributeMargins_Left()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargins_Left()
		}
		.property string DescriptionAttributeMargins_Margins()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargins_Margins()
		}
		.property string DescriptionAttributeMargins_Right()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargins_Right()
		}
		.property string DescriptionAttributeMargins_Top()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMargins_Top()
		}
		.property string DescriptionAttributeMarkerBorderColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerBorderColor()
		}
		.property string DescriptionAttributeMarkerBorderWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerBorderWidth()
		}
		.property string DescriptionAttributeMarkerColor3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerColor3()
		}
		.property string DescriptionAttributeMarkerImage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerImage()
		}
		.property string DescriptionAttributeMarkerOverlapping()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerOverlapping()
		}
		.property string DescriptionAttributeMarkerSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerSize()
		}
		.property string DescriptionAttributeMarkerStyle4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarkerStyle4()
		}
		.property string DescriptionAttributeMarksNextToAxis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMarksNextToAxis()
		}
		.property string DescriptionAttributeMaxMovingDistance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMaxMovingDistance()
		}
		.property string DescriptionAttributeMaximum()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMaximum()
		}
		.property string DescriptionAttributeMinMovingDistance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMinMovingDistance()
		}
		.property string DescriptionAttributeMinimum()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMinimum()
		}
		.property string DescriptionAttributeMinorGrid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMinorGrid()
		}
		.property string DescriptionAttributeMinorTickMark()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMinorTickMark()
		}
		.property string DescriptionAttributeMovingDirection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMovingDirection()
		}
		.property string DescriptionAttributeMultiValueSeparator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMultiValueSeparator()
		}
		.property string DescriptionAttributeMultiline()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeMultiline()
		}
		.property string DescriptionAttributeName4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeName4()
		}
		.property string DescriptionAttributeNamedImage_Image()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeNamedImage_Image()
		}
		.property string DescriptionAttributeNamedImage_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeNamedImage_Name()
		}
		.property string DescriptionAttributeNamedImage_NamedImage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeNamedImage_NamedImage()
		}
		.property string DescriptionAttributeNamedImagesCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeNamedImagesCollection_Item()
		}
		.property string DescriptionAttributeNoDataMessage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeNoDataMessage()
		}
		.property string DescriptionAttributePalette()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePalette()
		}
		.property string DescriptionAttributePath()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePath()
		}
		.property string DescriptionAttributePathPoints()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePathPoints()
		}
		.property string DescriptionAttributePoint3D_PointF()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePoint3D_PointF()
		}
		.property string DescriptionAttributePoint3D_X()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePoint3D_X()
		}
		.property string DescriptionAttributePoint3D_Y()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePoint3D_Y()
		}
		.property string DescriptionAttributePoint3D_Z()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePoint3D_Z()
		}
		.property string DescriptionAttributePolygonAnnotation_PolygonAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePolygonAnnotation_PolygonAnnotation()
		}
		.property string DescriptionAttributePolylineAnnotation_PolylineAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePolylineAnnotation_PolylineAnnotation()
		}
		.property string DescriptionAttributePostBackValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePostBackValue()
		}
		.property string DescriptionAttributePrintingManager_PrintDocument()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributePrintingManager_PrintDocument()
		}
		.property string DescriptionAttributeRectangleAnnotation_RectangleAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeRectangleAnnotation_RectangleAnnotation()
		}
		.property string DescriptionAttributeReverse()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeReverse()
		}
		.property string DescriptionAttributeReverseSeriesOrder()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeReverseSeriesOrder()
		}
		.property string DescriptionAttributeRight3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeRight3()
		}
		.property string DescriptionAttributeRightToLeft()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeRightToLeft()
		}
		.property string DescriptionAttributeScaleBreakStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScaleBreakStyle()
		}
		.property string DescriptionAttributeScrollBar()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScrollBar()
		}
		.property string DescriptionAttributeScrollBarEventArgs_ButtonType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScrollBarEventArgs_ButtonType()
		}
		.property string DescriptionAttributeScrollBarEventArgs_Handled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScrollBarEventArgs_Handled()
		}
		.property string DescriptionAttributeScrollBarEventArgs_MousePositionX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScrollBarEventArgs_MousePositionX()
		}
		.property string DescriptionAttributeScrollBarEventArgs_MousePositionY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeScrollBarEventArgs_MousePositionY()
		}
		.property string DescriptionAttributeSelected()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSelected()
		}
		.property string DescriptionAttributeSelectionPointsStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSelectionPointsStyle()
		}
		.property string DescriptionAttributeSeriesCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeriesCollection_Item()
		}
		.property string DescriptionAttributeSeriesCollection_SeriesCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeriesCollection_SeriesCollection()
		}
		.property string DescriptionAttributeSeries_ChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_ChartArea()
		}
		.property string DescriptionAttributeSeries_EmptyPointStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_EmptyPointStyle()
		}
		.property string DescriptionAttributeSeries_Enabled()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Enabled()
		}
		.property string DescriptionAttributeSeries_Legend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Legend()
		}
		.property string DescriptionAttributeSeries_MarkerStep()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_MarkerStep()
		}
		.property string DescriptionAttributeSeries_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Name()
		}
		.property string DescriptionAttributeSeries_Points()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Points()
		}
		.property string DescriptionAttributeSeries_Series()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Series()
		}
		.property string DescriptionAttributeSeries_SmartLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_SmartLabels()
		}
		.property string DescriptionAttributeSeries_Type()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_Type()
		}
		.property string DescriptionAttributeSeries_ValueMemberX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_ValueMemberX()
		}
		.property string DescriptionAttributeSeries_ValueMembersY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_ValueMembersY()
		}
		.property string DescriptionAttributeSeries_XAxisType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_XAxisType()
		}
		.property string DescriptionAttributeSeries_XSubAxisName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_XSubAxisName()
		}
		.property string DescriptionAttributeSeries_XValueIndexed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_XValueIndexed()
		}
		.property string DescriptionAttributeSeries_XValueType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_XValueType()
		}
		.property string DescriptionAttributeSeries_YAxisType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_YAxisType()
		}
		.property string DescriptionAttributeSeries_YSubAxisName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_YSubAxisName()
		}
		.property string DescriptionAttributeSeries_YValueType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_YValueType()
		}
		.property string DescriptionAttributeSeries_YValuesPerPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSeries_YValuesPerPoint()
		}
		.property string DescriptionAttributeShadowColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeShadowColor()
		}
		.property string DescriptionAttributeShadowOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeShadowOffset()
		}
		.property string DescriptionAttributeShowInLegend()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeShowInLegend()
		}
		.property string DescriptionAttributeShowLabelAsValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeShowLabelAsValue()
		}
		.property string DescriptionAttributeSizeAlwaysRelative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSizeAlwaysRelative()
		}
		.property string DescriptionAttributeSizeAlwaysRelative3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSizeAlwaysRelative3()
		}
		.property string DescriptionAttributeSmartLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSmartLabels()
		}
		.property string DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle()
		}
		.property string DescriptionAttributeSmartLabels_SmartLabels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSmartLabels_SmartLabels()
		}
		.property string DescriptionAttributeSoftShadows3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSoftShadows3()
		}
		.property string DescriptionAttributeStartCap3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStartCap3()
		}
		.property string DescriptionAttributeStartFromZero3()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStartFromZero3()
		}
		.property string DescriptionAttributeStripLine_Interval()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_Interval()
		}
		.property string DescriptionAttributeStripLine_IntervalOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_IntervalOffset()
		}
		.property string DescriptionAttributeStripLine_IntervalOffsetType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_IntervalOffsetType()
		}
		.property string DescriptionAttributeStripLine_IntervalType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_IntervalType()
		}
		.property string DescriptionAttributeStripLine_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_Name()
		}
		.property string DescriptionAttributeStripLine_StripLine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_StripLine()
		}
		.property string DescriptionAttributeStripLine_StripWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_StripWidth()
		}
		.property string DescriptionAttributeStripLine_StripWidthType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_StripWidthType()
		}
		.property string DescriptionAttributeStripLine_Title()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_Title()
		}
		.property string DescriptionAttributeStripLine_TitleAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_TitleAlignment()
		}
		.property string DescriptionAttributeStripLine_TitleColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_TitleColor()
		}
		.property string DescriptionAttributeStripLine_TitleLineAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLine_TitleLineAlignment()
		}
		.property string DescriptionAttributeStripLines()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLines()
		}
		.property string DescriptionAttributeStripLinesCollection_StripLinesCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeStripLinesCollection_StripLinesCollection()
		}
		.property string DescriptionAttributeSubAxes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxes()
		}
		.property string DescriptionAttributeSubAxisCollection_Item()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxisCollection_Item()
		}
		.property string DescriptionAttributeSubAxisCollection_SubAxisCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxisCollection_SubAxisCollection()
		}
		.property string DescriptionAttributeSubAxis_LocationOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxis_LocationOffset()
		}
		.property string DescriptionAttributeSubAxis_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxis_Name()
		}
		.property string DescriptionAttributeSubAxis_ParentAxis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxis_ParentAxis()
		}
		.property string DescriptionAttributeSubAxis_SubAxis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSubAxis_SubAxis()
		}
		.property string DescriptionAttributeSuppressCodeExceptions()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSuppressCodeExceptions()
		}
		.property string DescriptionAttributeSuppressExceptions()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeSuppressExceptions()
		}
		.property string DescriptionAttributeTag()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTag()
		}
		.property string DescriptionAttributeText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeText()
		}
		.property string DescriptionAttributeTextAnnotation_AnnotationType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextAnnotation_AnnotationType()
		}
		.property string DescriptionAttributeTextAnnotation_TextAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextAnnotation_TextAnnotation()
		}
		.property string DescriptionAttributeTextAntiAliasingQuality()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextAntiAliasingQuality()
		}
		.property string DescriptionAttributeTextFont()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextFont()
		}
		.property string DescriptionAttributeTextFont4()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextFont4()
		}
		.property string DescriptionAttributeTextStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTextStyle()
		}
		.property string DescriptionAttributeTickMark_Size()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTickMark_Size()
		}
		.property string DescriptionAttributeTickMark_Style()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTickMark_Style()
		}
		.property string DescriptionAttributeTickMark_TickMark()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTickMark_TickMark()
		}
		.property string DescriptionAttributeTitle5()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle5()
		}
		.property string DescriptionAttributeTitle6()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle6()
		}
		.property string DescriptionAttributeTitleAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitleAlignment()
		}
		.property string DescriptionAttributeTitleBackColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitleBackColor()
		}
		.property string DescriptionAttributeTitleColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitleColor()
		}
		.property string DescriptionAttributeTitleFont()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitleFont()
		}
		.property string DescriptionAttributeTitle_Alignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Alignment()
		}
		.property string DescriptionAttributeTitle_Color()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Color()
		}
		.property string DescriptionAttributeTitle_DockInsideChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_DockInsideChartArea()
		}
		.property string DescriptionAttributeTitle_DockOffset()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_DockOffset()
		}
		.property string DescriptionAttributeTitle_DockToChartArea()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_DockToChartArea()
		}
		.property string DescriptionAttributeTitle_Docking()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Docking()
		}
		.property string DescriptionAttributeTitle_Font()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Font()
		}
		.property string DescriptionAttributeTitle_Name()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Name()
		}
		.property string DescriptionAttributeTitle_Position()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Position()
		}
		.property string DescriptionAttributeTitle_Text()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Text()
		}
		.property string DescriptionAttributeTitle_Visible()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitle_Visible()
		}
		.property string DescriptionAttributeTitles()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeTitles()
		}
		.property string DescriptionAttributeToolTip()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeToolTip()
		}
		.property string DescriptionAttributeToolTipEventArgs_HitTestResult()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeToolTipEventArgs_HitTestResult()
		}
		.property string DescriptionAttributeToolTipEventArgs_Text()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeToolTipEventArgs_Text()
		}
		.property string DescriptionAttributeToolTipEventArgs_X()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeToolTipEventArgs_X()
		}
		.property string DescriptionAttributeToolTipEventArgs_Y()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeToolTipEventArgs_Y()
		}
		.property string DescriptionAttributeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeType()
		}
		.property string DescriptionAttributeUrl()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeUrl()
		}
		.property string DescriptionAttributeUserDefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeUserDefined()
		}
		.property string DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation()
		}
		.property string DescriptionAttributeView()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeView()
		}
		.property string DescriptionAttributeViewEventArgs_NewPosition()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeViewEventArgs_NewPosition()
		}
		.property string DescriptionAttributeViewEventArgs_NewSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeViewEventArgs_NewSize()
		}
		.property string DescriptionAttributeViewEventArgs_NewSizeType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeViewEventArgs_NewSizeType()
		}
		.property string DescriptionAttributeVisible()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeVisible()
		}
		.property string DescriptionAttributeWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttributeWidth()
		}
		.property string DescriptionAttribute_TextOrientation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionAttribute_TextOrientation()
		}
		.property string DescriptionCustomAttributeBarLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBarLabelStyle()
		}
		.property string DescriptionCustomAttributeBarsPriceUpColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBarsPriceUpColor()
		}
		.property string DescriptionCustomAttributeBoxPlotPercentile()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotPercentile()
		}
		.property string DescriptionCustomAttributeBoxPlotSeries()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotSeries()
		}
		.property string DescriptionCustomAttributeBoxPlotShowAverage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotShowAverage()
		}
		.property string DescriptionCustomAttributeBoxPlotShowMedian()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotShowMedian()
		}
		.property string DescriptionCustomAttributeBoxPlotShowUnusualValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotShowUnusualValues()
		}
		.property string DescriptionCustomAttributeBoxPlotWhiskerPercentile()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxPlotWhiskerPercentile()
		}
		.property string DescriptionCustomAttributeBoxSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBoxSize()
		}
		.property string DescriptionCustomAttributeBubbleMaxSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBubbleMaxSize()
		}
		.property string DescriptionCustomAttributeBubbleScaleMax()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBubbleScaleMax()
		}
		.property string DescriptionCustomAttributeBubbleScaleMin()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBubbleScaleMin()
		}
		.property string DescriptionCustomAttributeBubbleUseSizeForLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeBubbleUseSizeForLabel()
		}
		.property string DescriptionCustomAttributeCalloutLineColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCalloutLineColor()
		}
		.property string DescriptionCustomAttributeCandlePriceUpColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCandlePriceUpColor()
		}
		.property string DescriptionCustomAttributeCollectedColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedColor()
		}
		.property string DescriptionCustomAttributeCollectedLabel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedLabel()
		}
		.property string DescriptionCustomAttributeCollectedLabelDefaultText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedLabelDefaultText()
		}
		.property string DescriptionCustomAttributeCollectedLegendDefaultText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedLegendDefaultText()
		}
		.property string DescriptionCustomAttributeCollectedLegendText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedLegendText()
		}
		.property string DescriptionCustomAttributeCollectedSliceExploded()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedSliceExploded()
		}
		.property string DescriptionCustomAttributeCollectedThreshold()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedThreshold()
		}
		.property string DescriptionCustomAttributeCollectedThresholdUsePercent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedThresholdUsePercent()
		}
		.property string DescriptionCustomAttributeCollectedToolTip()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeCollectedToolTip()
		}
		.property string DescriptionCustomAttributeDoughnutRadius()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeDoughnutRadius()
		}
		.property string DescriptionCustomAttributeDrawSideBySide()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeDrawSideBySide()
		}
		.property string DescriptionCustomAttributeDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeDrawingStyle()
		}
		.property string DescriptionCustomAttributeEmptyPointValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeEmptyPointValue()
		}
		.property string DescriptionCustomAttributeErrorBarCenterMarkerStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeErrorBarCenterMarkerStyle()
		}
		.property string DescriptionCustomAttributeErrorBarSeries()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeErrorBarSeries()
		}
		.property string DescriptionCustomAttributeErrorBarStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeErrorBarStyle()
		}
		.property string DescriptionCustomAttributeErrorBarType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeErrorBarType()
		}
		.property string DescriptionCustomAttributeFunnel3DDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnel3DDrawingStyle()
		}
		.property string DescriptionCustomAttributeFunnel3DRotationAngle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnel3DRotationAngle()
		}
		.property string DescriptionCustomAttributeFunnelInsideLabelAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelInsideLabelAlignment()
		}
		.property string DescriptionCustomAttributeFunnelLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelLabelStyle()
		}
		.property string DescriptionCustomAttributeFunnelMinPointHeight()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelMinPointHeight()
		}
		.property string DescriptionCustomAttributeFunnelNeckHeight()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelNeckHeight()
		}
		.property string DescriptionCustomAttributeFunnelNeckWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelNeckWidth()
		}
		.property string DescriptionCustomAttributeFunnelOutsideLabelPlacement()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelOutsideLabelPlacement()
		}
		.property string DescriptionCustomAttributeFunnelPointGap()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelPointGap()
		}
		.property string DescriptionCustomAttributeFunnelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeFunnelStyle()
		}
		.property string DescriptionCustomAttributeIsXAxisQuantitive()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeIsXAxisQuantitive()
		}
		.property string DescriptionCustomAttributeKagiReversalAmount()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeKagiReversalAmount()
		}
		.property string DescriptionCustomAttributeLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeLabelStyle()
		}
		.property string DescriptionCustomAttributeLabelValueType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeLabelValueType()
		}
		.property string DescriptionCustomAttributeLabelsHorizontalLineSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeLabelsHorizontalLineSize()
		}
		.property string DescriptionCustomAttributeLabelsRadialLineSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeLabelsRadialLineSize()
		}
		.property string DescriptionCustomAttributeLineTension()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeLineTension()
		}
		.property string DescriptionCustomAttributeMaxPixelPointWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeMaxPixelPointWidth()
		}
		.property string DescriptionCustomAttributeMinPixelPointWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeMinPixelPointWidth()
		}
		.property string DescriptionCustomAttributeMinimumRelativePieSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeMinimumRelativePieSize()
		}
		.property string DescriptionCustomAttributeNumberOfLinesInBreak()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeNumberOfLinesInBreak()
		}
		.property string DescriptionCustomAttributeOpenCloseStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeOpenCloseStyle()
		}
		.property string DescriptionCustomAttributePieDonutExploded()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePieDonutExploded()
		}
		.property string DescriptionCustomAttributePieDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePieDrawingStyle()
		}
		.property string DescriptionCustomAttributePieLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePieLabelStyle()
		}
		.property string DescriptionCustomAttributePieLineColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePieLineColor()
		}
		.property string DescriptionCustomAttributePieStartAngle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePieStartAngle()
		}
		.property string DescriptionCustomAttributePixelPointDepth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePixelPointDepth()
		}
		.property string DescriptionCustomAttributePixelPointGapDepth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePixelPointGapDepth()
		}
		.property string DescriptionCustomAttributePixelPointWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePixelPointWidth()
		}
		.property string DescriptionCustomAttributePointFigureBoxSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePointFigureBoxSize()
		}
		.property string DescriptionCustomAttributePointWidth()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePointWidth()
		}
		.property string DescriptionCustomAttributePolarAreaDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePolarAreaDrawingStyle()
		}
		.property string DescriptionCustomAttributePolarCircularLabelsStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePolarCircularLabelsStyle()
		}
		.property string DescriptionCustomAttributePolarDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePolarDrawingStyle()
		}
		.property string DescriptionCustomAttributePriceDownColor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePriceDownColor()
		}
		.property string DescriptionCustomAttributeProportionalSymbols()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeProportionalSymbols()
		}
		.property string DescriptionCustomAttributePyramid3DDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramid3DDrawingStyle()
		}
		.property string DescriptionCustomAttributePyramid3DRotationAngle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramid3DRotationAngle()
		}
		.property string DescriptionCustomAttributePyramidInsideLabelAlignment()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidInsideLabelAlignment()
		}
		.property string DescriptionCustomAttributePyramidLabelStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidLabelStyle()
		}
		.property string DescriptionCustomAttributePyramidMinPointHeight()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidMinPointHeight()
		}
		.property string DescriptionCustomAttributePyramidOutsideLabelPlacement()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidOutsideLabelPlacement()
		}
		.property string DescriptionCustomAttributePyramidPointGap()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidPointGap()
		}
		.property string DescriptionCustomAttributePyramidValueType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributePyramidValueType()
		}
		.property string DescriptionCustomAttributeRadarAreaDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeRadarAreaDrawingStyle()
		}
		.property string DescriptionCustomAttributeRadarCircularLabelsStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeRadarCircularLabelsStyle()
		}
		.property string DescriptionCustomAttributeRadarDrawingStyle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeRadarDrawingStyle()
		}
		.property string DescriptionCustomAttributeRenkoUsedYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeRenkoUsedYValue()
		}
		.property string DescriptionCustomAttributeReversalAmount()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeReversalAmount()
		}
		.property string DescriptionCustomAttributeShowMarkerLines()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeShowMarkerLines()
		}
		.property string DescriptionCustomAttributeShowOpenClose()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeShowOpenClose()
		}
		.property string DescriptionCustomAttributeStackedGroupName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeStackedGroupName()
		}
		.property string DescriptionCustomAttributeThreeLineBreakUsedYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeThreeLineBreakUsedYValue()
		}
		.property string DescriptionCustomAttributeUsedYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeUsedYValue()
		}
		.property string DescriptionCustomAttributeUsedYValueHigh()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeUsedYValueHigh()
		}
		.property string DescriptionCustomAttributeUsedYValueLow()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttributeUsedYValueLow()
		}
		.property string DescriptionCustomAttribute_3DLabelLineSize()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionCustomAttribute_3DLabelLineSize()
		}
		.property string DescriptionKeyWordAverageYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordAverageYValues()
		}
		.property string DescriptionKeyWordAxisLabelDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordAxisLabelDataPoint()
		}
		.property string DescriptionKeyWordFirstPointYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordFirstPointYValue()
		}
		.property string DescriptionKeyWordIndexDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordIndexDataPoint()
		}
		.property string DescriptionKeyWordIndexDataPoint2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordIndexDataPoint2()
		}
		.property string DescriptionKeyWordLabelDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordLabelDataPoint()
		}
		.property string DescriptionKeyWordLastPointYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordLastPointYValue()
		}
		.property string DescriptionKeyWordLegendText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordLegendText()
		}
		.property string DescriptionKeyWordMaximumYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordMaximumYValues()
		}
		.property string DescriptionKeyWordMinimumYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordMinimumYValues()
		}
		.property string DescriptionKeyWordNameAverageYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameAverageYValues()
		}
		.property string DescriptionKeyWordNameAxisLabelDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameAxisLabelDataPoint()
		}
		.property string DescriptionKeyWordNameFirstPointYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameFirstPointYValue()
		}
		.property string DescriptionKeyWordNameIndexDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameIndexDataPoint()
		}
		.property string DescriptionKeyWordNameIndexTheDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameIndexTheDataPoint()
		}
		.property string DescriptionKeyWordNameLabelDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameLabelDataPoint()
		}
		.property string DescriptionKeyWordNameLastPointYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameLastPointYValue()
		}
		.property string DescriptionKeyWordNameLegendText()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameLegendText()
		}
		.property string DescriptionKeyWordNameMaximumYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameMaximumYValues()
		}
		.property string DescriptionKeyWordNameMinimumYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameMinimumYValues()
		}
		.property string DescriptionKeyWordNameSeriesName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameSeriesName()
		}
		.property string DescriptionKeyWordNameTotalYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameTotalYValues()
		}
		.property string DescriptionKeyWordNameXValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameXValue()
		}
		.property string DescriptionKeyWordNameYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameYValue()
		}
		.property string DescriptionKeyWordNameYValuePercentTotal()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordNameYValuePercentTotal()
		}
		.property string DescriptionKeyWordSeriesName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordSeriesName()
		}
		.property string DescriptionKeyWordTotalYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordTotalYValues()
		}
		.property string DescriptionKeyWordXValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordXValue()
		}
		.property string DescriptionKeyWordYValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordYValue()
		}
		.property string DescriptionKeyWordYValuePercentTotal()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionKeyWordYValuePercentTotal()
		}
		.property string DescriptionNumberFormatTypeCurrency()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeCurrency()
		}
		.property string DescriptionNumberFormatTypeDecimal()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeDecimal()
		}
		.property string DescriptionNumberFormatTypeFixedPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeFixedPoint()
		}
		.property string DescriptionNumberFormatTypeGeneral()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeGeneral()
		}
		.property string DescriptionNumberFormatTypeNumber()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeNumber()
		}
		.property string DescriptionNumberFormatTypePercent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypePercent()
		}
		.property string DescriptionNumberFormatTypeScientific()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionNumberFormatTypeScientific()
		}
		.property string DescriptionToolTipCustomFormatCharacters()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionToolTipCustomFormatCharacters()
		}
		.property string DescriptionTypeCustom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionTypeCustom()
		}
		.property string DescriptionTypeEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionTypeEmpty()
		}
		.property string DescriptionTypeNone()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionTypeNone()
		}
		.property string DescriptionTypePoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DescriptionTypePoint()
		}
		.property string DiagnosticActivityError()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticActivityError()
		}
		.property string DiagnosticActivityHeader()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticActivityHeader()
		}
		.property string DiagnosticActivityMessage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticActivityMessage()
		}
		.property string DiagnosticActivityTime()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticActivityTime()
		}
		.property string DiagnosticChartImageServedFailNotFound()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticChartImageServedFailNotFound()
		}
		.property string DiagnosticHeader()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticHeader()
		}
		.property string DiagnosticQueueStateAccess()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateAccess()
		}
		.property string DiagnosticQueueStateAccessFail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateAccessFail()
		}
		.property string DiagnosticQueueStateAccessInfo()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateAccessInfo()
		}
		.property string DiagnosticQueueStateAccessOK()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateAccessOK()
		}
		.property string DiagnosticQueueStateHeader()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateHeader()
		}
		.property string DiagnosticQueueStateName()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticQueueStateName()
		}
		.property string DiagnosticSettingsHeader()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticSettingsHeader()
		}
		.property string DiagnosticSettingsInfo()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticSettingsInfo()
		}
		.property string DiagnosticSettingsKey()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticSettingsKey()
		}
		.property string DiagnosticSettingsValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_DiagnosticSettingsValue()
		}
		.property string Exception3DChartPointsXValuesUnsorted()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_Exception3DChartPointsXValuesUnsorted()
		}
		.property string Exception3DPieLabelsIndexInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_Exception3DPieLabelsIndexInvalid()
		}
		.property string Exception3DSplineY1ValueIsLessThenY2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_Exception3DSplineY1ValueIsLessThenY2()
		}
		.property string ExceptionAngleRangeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAngleRangeInvalid()
		}
		.property string ExceptionAnnotationAnchorOffsetInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationAnchorOffsetInvalid()
		}
		.property string ExceptionAnnotationArrowSizeIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationArrowSizeIsZero()
		}
		.property string ExceptionAnnotationArrowSizeMustBeLessThen100()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationArrowSizeMustBeLessThen100()
		}
		.property string ExceptionAnnotationArrowStyleUnknown()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationArrowStyleUnknown()
		}
		.property string ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty()
		}
		.property string ExceptionAnnotationGroupedAxisMustBeEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationGroupedAxisMustBeEmpty()
		}
		.property string ExceptionAnnotationGroupedUnableToStartPlacement()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationGroupedUnableToStartPlacement()
		}
		.property string ExceptionAnnotationLineWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationLineWidthIsNegative()
		}
		.property string ExceptionAnnotationNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationNameIsEmpty()
		}
		.property string ExceptionAnnotationNotInCollection()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationNotInCollection()
		}
		.property string ExceptionAnnotationPathAddLineAsSegmentsInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAnnotationPathAddLineAsSegmentsInvalid()
		}
		.property string ExceptionAttributeDrawSideBySideInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAttributeDrawSideBySideInvalid()
		}
		.property string ExceptionAttributeInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAttributeInvalidFormat()
		}
		.property string ExceptionAttributeNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAttributeNameIsEmpty()
		}
		.property string ExceptionAttributeUnableToDelete()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAttributeUnableToDelete()
		}
		.property string ExceptionAxisDynamicIntervalCalculationFailed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisDynamicIntervalCalculationFailed()
		}
		.property string ExceptionAxisIntervalDecreasingFailed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisIntervalDecreasingFailed()
		}
		.property string ExceptionAxisIntervalIncreasingFailed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisIntervalIncreasingFailed()
		}
		.property string ExceptionAxisLabelFontAngleInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelFontAngleInvalid()
		}
		.property string ExceptionAxisLabelIndexIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelIndexIsNegative()
		}
		.property string ExceptionAxisLabelRowIndexIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelRowIndexIsNegative()
		}
		.property string ExceptionAxisLabelRowIndexMustBe1Or2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelRowIndexMustBe1Or2()
		}
		.property string ExceptionAxisLabelsAutoFitMaxFontSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelsAutoFitMaxFontSizeInvalid()
		}
		.property string ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid()
		}
		.property string ExceptionAxisMinimumMaximumInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisMinimumMaximumInvalid()
		}
		.property string ExceptionAxisScaleAutoIntervalInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleAutoIntervalInvalid()
		}
		.property string ExceptionAxisScaleBreaksCollapsibleSpaceInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleBreaksCollapsibleSpaceInvalid()
		}
		.property string ExceptionAxisScaleBreaksLineWidthInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleBreaksLineWidthInvalid()
		}
		.property string ExceptionAxisScaleBreaksNumberInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleBreaksNumberInvalid()
		}
		.property string ExceptionAxisScaleBreaksSpacingInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleBreaksSpacingInvalid()
		}
		.property string ExceptionAxisScaleIntervalIsLessThen1Year()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleIntervalIsLessThen1Year()
		}
		.property string ExceptionAxisScaleIntervalIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleIntervalIsZero()
		}
		.property string ExceptionAxisScaleLogarithmBaseInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleLogarithmBaseInvalid()
		}
		.property string ExceptionAxisScaleLogarithmicNegativeValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleLogarithmicNegativeValues()
		}
		.property string ExceptionAxisScaleMinimumMaximumInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleMinimumMaximumInvalid()
		}
		.property string ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint()
		}
		.property string ExceptionAxisScalePositionInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScalePositionInvalid()
		}
		.property string ExceptionAxisScalePositionToValueCallFailed()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScalePositionToValueCallFailed()
		}
		.property string ExceptionAxisScaleSegmentsPositionInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleSegmentsPositionInvalid()
		}
		.property string ExceptionAxisScaleSegmentsSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleSegmentsSizeInvalid()
		}
		.property string ExceptionAxisScaleSegmentsSpacingInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisScaleSegmentsSpacingInvalid()
		}
		.property string ExceptionAxisSeriesNotAligned()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisSeriesNotAligned()
		}
		.property string ExceptionAxisStackedChartsDataPointsNumberMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisStackedChartsDataPointsNumberMismatch()
		}
		.property string ExceptionAxisWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionAxisWidthIsNegative()
		}
		.property string ExceptionBackSecondaryColorIsTransparent()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionBackSecondaryColorIsTransparent()
		}
		.property string ExceptionBorderTypeHasNoInterface()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionBorderTypeHasNoInterface()
		}
		.property string ExceptionBorderWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionBorderWidthIsNegative()
		}
		.property string ExceptionBorderWidthIsNotPositive()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionBorderWidthIsNotPositive()
		}
		.property string ExceptionBorderWidthIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionBorderWidthIsZero()
		}
		.property string ExceptionChartArea3DInclinationInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DInclinationInvalid()
		}
		.property string ExceptionChartArea3DPerspectiveInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DPerspectiveInvalid()
		}
		.property string ExceptionChartArea3DPointsDepthInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DPointsDepthInvalid()
		}
		.property string ExceptionChartArea3DPointsGapInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DPointsGapInvalid()
		}
		.property string ExceptionChartArea3DRotationInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DRotationInvalid()
		}
		.property string ExceptionChartArea3DWallWidthInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartArea3DWallWidthInvalid()
		}
		.property string ExceptionChartAreaAlreadyExistsShort()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaAlreadyExistsShort()
		}
		.property string ExceptionChartAreaAxisScaleLogarithmicUnsuitable()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaAxisScaleLogarithmicUnsuitable()
		}
		.property string ExceptionChartAreaChartTypesCanNotCombine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaChartTypesCanNotCombine()
		}
		.property string ExceptionChartAreaInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaInsertedHasWrongType()
		}
		.property string ExceptionChartAreaNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaNameIsEmpty()
		}
		.property string ExceptionChartAreaObjectRequired()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaObjectRequired()
		}
		.property string ExceptionChartAreaSeriesNotFound()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartAreaSeriesNotFound()
		}
		.property string ExceptionChartBorderIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartBorderIsNegative()
		}
		.property string ExceptionChartCompressionInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartCompressionInvalid()
		}
		.property string ExceptionChartDataPointsAlignmentFaild()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartDataPointsAlignmentFaild()
		}
		.property string ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid()
		}
		.property string ExceptionChartDataPointsInsertionFailedYValuesEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartDataPointsInsertionFailedYValuesEmpty()
		}
		.property string ExceptionChartHeightIsNotInPixels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartHeightIsNotInPixels()
		}
		.property string ExceptionChartOutOfLimits()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartOutOfLimits()
		}
		.property string ExceptionChartPreviewNotAvailable()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartPreviewNotAvailable()
		}
		.property string ExceptionChartPreviewNotAvailableShort()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartPreviewNotAvailableShort()
		}
		.property string ExceptionChartSerializerBinaryFromatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerBinaryFromatInvalid()
		}
		.property string ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported()
		}
		.property string ExceptionChartSerializerClassNameUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerClassNameUndefined()
		}
		.property string ExceptionChartSerializerContentFlagUnsupported()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerContentFlagUnsupported()
		}
		.property string ExceptionChartSerializerContentStringFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerContentStringFormatInvalid()
		}
		.property string ExceptionChartSerializerDestinationObjectInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerDestinationObjectInvalid()
		}
		.property string ExceptionChartSerializerPropertyNameUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerPropertyNameUndefined()
		}
		.property string ExceptionChartSerializerPropertyNotFound()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerPropertyNotFound()
		}
		.property string ExceptionChartSerializerReaderObjectInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerReaderObjectInvalid()
		}
		.property string ExceptionChartSerializerSourceObjectInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerSourceObjectInvalid()
		}
		.property string ExceptionChartSerializerWriterObjectInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartSerializerWriterObjectInvalid()
		}
		.property string ExceptionChartTypeHasNoInterface()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartTypeHasNoInterface()
		}
		.property string ExceptionChartWidthIsNotInPixels()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionChartWidthIsNotInPixels()
		}
		.property string ExceptionCursorIntervalOffsetIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionCursorIntervalOffsetIsNegative()
		}
		.property string ExceptionCursorLineWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionCursorLineWidthIsNegative()
		}
		.property string ExceptionCustomAttributeDefaultValueTypeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionCustomAttributeDefaultValueTypeInvalid()
		}
		.property string ExceptionCustomLabelAddedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionCustomLabelAddedHasWrongType()
		}
		.property string ExceptionCustomLabelInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionCustomLabelInsertedHasWrongType()
		}
		.property string ExceptionDataBindSeriesGroupByParameterIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataBindSeriesGroupByParameterIsEmpty()
		}
		.property string ExceptionDataBindSeriesToString()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataBindSeriesToString()
		}
		.property string ExceptionDataBindXValuesToString()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataBindXValuesToString()
		}
		.property string ExceptionDataBindYValuesToString()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataBindYValuesToString()
		}
		.property string ExceptionDataManager100StackedSeriesPointsNumeberMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManager100StackedSeriesPointsNumeberMismatch()
		}
		.property string ExceptionDataManipulatorGroupedSeriesNotSorted()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorGroupedSeriesNotSorted()
		}
		.property string ExceptionDataManipulatorGroupingFormulaUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorGroupingFormulaUndefined()
		}
		.property string ExceptionDataManipulatorGroupingFormulaUnsupported()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorGroupingFormulaUnsupported()
		}
		.property string ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch()
		}
		.property string ExceptionDataManipulatorGroupingInputSeriesUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorGroupingInputSeriesUndefined()
		}
		.property string ExceptionDataManipulatorIndexFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorIndexFormatInvalid()
		}
		.property string ExceptionDataManipulatorIndexUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorIndexUndefined()
		}
		.property string ExceptionDataManipulatorPointCountIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataManipulatorPointCountIsZero()
		}
		.property string ExceptionDataPointBindingYValueNotSpecified()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointBindingYValueNotSpecified()
		}
		.property string ExceptionDataPointConverterInvalidSorting()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointConverterInvalidSorting()
		}
		.property string ExceptionDataPointConverterWrongTypes()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointConverterWrongTypes()
		}
		.property string ExceptionDataPointInsertionNoDataSource()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointInsertionNoDataSource()
		}
		.property string ExceptionDataPointInsertionXValuesQtyIsLessYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointInsertionXValuesQtyIsLessYValues()
		}
		.property string ExceptionDataPointInsertionYValueNotSpecified()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointInsertionYValueNotSpecified()
		}
		.property string ExceptionDataPointValueNameInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointValueNameInvalid()
		}
		.property string ExceptionDataPointValueNameYIndexIsNotPositive()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointValueNameYIndexIsNotPositive()
		}
		.property string ExceptionDataPointValueNameYIndexOutOfRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointValueNameYIndexOutOfRange()
		}
		.property string ExceptionDataPointYValueStringFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataPointYValueStringFormat()
		}
		.property string ExceptionDataSeriesNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataSeriesNameIsEmpty()
		}
		.property string ExceptionDataSeriesObjectRequired()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataSeriesObjectRequired()
		}
		.property string ExceptionDataSeriesYValueNumberInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataSeriesYValueNumberInvalid()
		}
		.property string ExceptionDataSeriesYValuesPerPointIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDataSeriesYValuesPerPointIsZero()
		}
		.property string ExceptionDoughnutCollectedColorInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutCollectedColorInvalidFormat()
		}
		.property string ExceptionDoughnutCollectedThresholdInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutCollectedThresholdInvalidFormat()
		}
		.property string ExceptionDoughnutCollectedThresholdInvalidRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutCollectedThresholdInvalidRange()
		}
		.property string ExceptionDoughnutCollectedThresholdUsePercentInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutCollectedThresholdUsePercentInvalid()
		}
		.property string ExceptionDoughnutNullReference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutNullReference()
		}
		.property string ExceptionDoughnutThresholdInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionDoughnutThresholdInvalid()
		}
		.property string ExceptionEditorChartTypeRegistryServiceInaccessible()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionEditorChartTypeRegistryServiceInaccessible()
		}
		.property string ExceptionEditorContectInstantsIsNotChartObject()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionEditorContectInstantsIsNotChartObject()
		}
		.property string ExceptionEditorMultipleSeriesEditiingUnsupported()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionEditorMultipleSeriesEditiingUnsupported()
		}
		.property string ExceptionEditorUITypeEditorInapplicable()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionEditorUITypeEditorInapplicable()
		}
		.property string ExceptionEditorUITypeEditorInt32ApplicableOnly()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionEditorUITypeEditorInt32ApplicableOnly()
		}
		.property string ExceptionElementPositionArgumentOutOfRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionElementPositionArgumentOutOfRange()
		}
		.property string ExceptionElementPositionConverter()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionElementPositionConverter()
		}
		.property string ExceptionErrorBarParameterUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionErrorBarParameterUndefined()
		}
		.property string ExceptionFastPointMarkerStyleUnknown()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFastPointMarkerStyleUnknown()
		}
		.property string ExceptionForecastingDegreeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionForecastingDegreeInvalid()
		}
		.property string ExceptionForecastingExponentialRegressionHasZeroYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionForecastingExponentialRegressionHasZeroYValues()
		}
		.property string ExceptionForecastingPowerRegressionHasZeroYValues()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionForecastingPowerRegressionHasZeroYValues()
		}
		.property string ExceptionFormulaDataItemsNumberMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaDataItemsNumberMismatch()
		}
		.property string ExceptionFormulaDataItemsNumberMismatch2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaDataItemsNumberMismatch2()
		}
		.property string ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect()
		}
		.property string ExceptionFormulaInputOutputSeriesMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaInputOutputSeriesMismatch()
		}
		.property string ExceptionFormulaModuleHasNoInterface()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaModuleHasNoInterface()
		}
		.property string ExceptionFormulaXValuesNotAligned()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaXValuesNotAligned()
		}
		.property string ExceptionFormulaYIndexInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFormulaYIndexInvalid()
		}
		.property string ExceptionFunnelAngleRangeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFunnelAngleRangeInvalid()
		}
		.property string ExceptionFunnelCanNotCombine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFunnelCanNotCombine()
		}
		.property string ExceptionFunnelMinimumPointHeightAttributeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFunnelMinimumPointHeightAttributeInvalid()
		}
		.property string ExceptionFunnelNeckHeightInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFunnelNeckHeightInvalid()
		}
		.property string ExceptionFunnelNeckWidthInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionFunnelNeckWidthInvalid()
		}
		.property string ExceptionGraphics3DCoordinatesInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionGraphics3DCoordinatesInvalid()
		}
		.property string ExceptionGraphics3DMarkerStyleUnknown()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionGraphics3DMarkerStyleUnknown()
		}
		.property string ExceptionGraphicsMarkerStyleUnknown()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionGraphicsMarkerStyleUnknown()
		}
		.property string ExceptionHttpHandlerCanNotSave()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerCanNotSave()
		}
		.property string ExceptionHttpHandlerImageNotFound()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerImageNotFound()
		}
		.property string ExceptionHttpHandlerInvalidLocation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerInvalidLocation()
		}
		.property string ExceptionHttpHandlerTimeoutParameterInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerTimeoutParameterInvalid()
		}
		.property string ExceptionHttpHandlerUrlInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerUrlInvalid()
		}
		.property string ExceptionHttpHandlerUrlMissing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerUrlMissing()
		}
		.property string ExceptionHttpHandlerValueInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionHttpHandlerValueInvalid()
		}
		.property string ExceptionImageLoaderInvalidServiceContainer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageLoaderInvalidServiceContainer()
		}
		.property string ExceptionImageMapAddedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageMapAddedHasWrongType()
		}
		.property string ExceptionImageMapCircleShapeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageMapCircleShapeInvalid()
		}
		.property string ExceptionImageMapInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageMapInsertedHasWrongType()
		}
		.property string ExceptionImageMapPolygonShapeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageMapPolygonShapeInvalid()
		}
		.property string ExceptionImageMapRectangleShapeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageMapRectangleShapeInvalid()
		}
		.property string ExceptionImageUrlInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageUrlInvalidFormat()
		}
		.property string ExceptionImageUrlInvalidFormatters()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageUrlInvalidFormatters()
		}
		.property string ExceptionImageUrlIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageUrlIsEmpty()
		}
		.property string ExceptionImageUrlMissedFormatter()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionImageUrlMissedFormatter()
		}
		.property string ExceptionIndicatorsDeviationMissing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionIndicatorsDeviationMissing()
		}
		.property string ExceptionIndicatorsLongPeriodLessThenShortPeriod()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionIndicatorsLongPeriodLessThenShortPeriod()
		}
		.property string ExceptionInvalidIndexerArgumentType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionInvalidIndexerArgumentType()
		}
		.property string ExceptionInvalidServiceContainer()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionInvalidServiceContainer()
		}
		.property string ExceptionKagiCanNotCombine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionKagiCanNotCombine()
		}
		.property string ExceptionKagiNullReference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionKagiNullReference()
		}
		.property string ExceptionLabelBorderIsNotPositive()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLabelBorderIsNotPositive()
		}
		.property string ExceptionLegendAddedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendAddedHasWrongType()
		}
		.property string ExceptionLegendAutoFitMinFontSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendAutoFitMinFontSizeInvalid()
		}
		.property string ExceptionLegendBorderWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendBorderWidthIsNegative()
		}
		.property string ExceptionLegendCellImageSizeIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendCellImageSizeIsNegative()
		}
		.property string ExceptionLegendCellNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendCellNameIsEmpty()
		}
		.property string ExceptionLegendCellSeriesSymbolSizeIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendCellSeriesSymbolSizeIsNegative()
		}
		.property string ExceptionLegendCellSpanIsLessThenOne()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendCellSpanIsLessThenOne()
		}
		.property string ExceptionLegendColumnIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendColumnIsEmpty()
		}
		.property string ExceptionLegendColumnSpacingInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendColumnSpacingInvalid()
		}
		.property string ExceptionLegendInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendInsertedHasWrongType()
		}
		.property string ExceptionLegendItemAddedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendItemAddedHasWrongType()
		}
		.property string ExceptionLegendItemInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendItemInsertedHasWrongType()
		}
		.property string ExceptionLegendMarkerBorderWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendMarkerBorderWidthIsNegative()
		}
		.property string ExceptionLegendMaximumAutoSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendMaximumAutoSizeInvalid()
		}
		.property string ExceptionLegendNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionLegendNameIsEmpty()
		}
		.property string ExceptionMarginBottomIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMarginBottomIsNegative()
		}
		.property string ExceptionMarginLeftIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMarginLeftIsNegative()
		}
		.property string ExceptionMarginRightIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMarginRightIsNegative()
		}
		.property string ExceptionMarginTopIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMarginTopIsNegative()
		}
		.property string ExceptionMarkerStepNegativeValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMarkerStepNegativeValue()
		}
		.property string ExceptionMatrix3DNotinitialized()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMatrix3DNotinitialized()
		}
		.property string ExceptionMaximumCellWidthIsWrong()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMaximumCellWidthIsWrong()
		}
		.property string ExceptionMinimumCellWidthIsWrong()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionMinimumCellWidthIsWrong()
		}
		.property string ExceptionNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionNameIsEmpty()
		}
		.property string ExceptionNamedImageInsertedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionNamedImageInsertedHasWrongType()
		}
		.property string ExceptionNamedImageObjectRequired()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionNamedImageObjectRequired()
		}
		.property string ExceptionObjectReferenceIsNull()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionObjectReferenceIsNull()
		}
		.property string ExceptionOscillatorNegativePeriodParameter()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionOscillatorNegativePeriodParameter()
		}
		.property string ExceptionOscillatorNegativeSignalPeriod()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionOscillatorNegativeSignalPeriod()
		}
		.property string ExceptionOscillatorObjectInvalidPeriod()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionOscillatorObjectInvalidPeriod()
		}
		.property string ExceptionPaletteIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPaletteIsEmpty()
		}
		.property string ExceptionParameterFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionParameterFormatInvalid()
		}
		.property string ExceptionPeriodAverageParameterIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPeriodAverageParameterIsNegative()
		}
		.property string ExceptionPeriodLongParameterIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPeriodLongParameterIsNegative()
		}
		.property string ExceptionPeriodParameterIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPeriodParameterIsNegative()
		}
		.property string ExceptionPeriodShortParameterIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPeriodShortParameterIsNegative()
		}
		.property string ExceptionPie3DLabelLineSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPie3DLabelLineSizeInvalid()
		}
		.property string ExceptionPieHorizontalLineSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieHorizontalLineSizeInvalid()
		}
		.property string ExceptionPieIntervalsInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieIntervalsInvalid()
		}
		.property string ExceptionPieIntervalsOverlapping()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieIntervalsOverlapping()
		}
		.property string ExceptionPieMinimumRelativePieSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieMinimumRelativePieSizeInvalid()
		}
		.property string ExceptionPieOrderOperationInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieOrderOperationInvalid()
		}
		.property string ExceptionPiePointOrderInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPiePointOrderInvalid()
		}
		.property string ExceptionPieRadialLineSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieRadialLineSizeInvalid()
		}
		.property string ExceptionPieRadiusInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieRadiusInvalid()
		}
		.property string ExceptionPieUnassignedFrontBackPoints()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPieUnassignedFrontBackPoints()
		}
		.property string ExceptionPointAndFigureCanNotCombine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureCanNotCombine()
		}
		.property string ExceptionPointAndFigureNullReference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureNullReference()
		}
		.property string ExceptionPointAndFigureReversalAmountInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureReversalAmountInvalidFormat()
		}
		.property string ExceptionPointAndFigureUpBrickColorInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureUpBrickColorInvalidFormat()
		}
		.property string ExceptionPointAndFigureUsedYValueHighInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureUsedYValueHighInvalidFormat()
		}
		.property string ExceptionPointAndFigureUsedYValueHighOutOfRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureUsedYValueHighOutOfRange()
		}
		.property string ExceptionPointAndFigureUsedYValueLowInvalidFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureUsedYValueLowInvalidFormat()
		}
		.property string ExceptionPointAndFigureUsedYValueLowOutOfrange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPointAndFigureUsedYValueLowOutOfrange()
		}
		.property string ExceptionPriceIndicatorsFormulaRequiresFourArrays()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsFormulaRequiresFourArrays()
		}
		.property string ExceptionPriceIndicatorsFormulaRequiresOneArray()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsFormulaRequiresOneArray()
		}
		.property string ExceptionPriceIndicatorsFormulaRequiresThreeArrays()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsFormulaRequiresThreeArrays()
		}
		.property string ExceptionPriceIndicatorsFormulaRequiresTwoArrays()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsFormulaRequiresTwoArrays()
		}
		.property string ExceptionPriceIndicatorsNotEnoughPoints()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsNotEnoughPoints()
		}
		.property string ExceptionPriceIndicatorsPeriodMissing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsPeriodMissing()
		}
		.property string ExceptionPriceIndicatorsSameXYNumber()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsSameXYNumber()
		}
		.property string ExceptionPriceIndicatorsSameYNumber()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsSameYNumber()
		}
		.property string ExceptionPriceIndicatorsShiftParameterMissing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionPriceIndicatorsShiftParameterMissing()
		}
		.property string ExceptionRectangleConverterStringFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRectangleConverterStringFormatInvalid()
		}
		.property string ExceptionRenkoBoxSizeFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoBoxSizeFormatInvalid()
		}
		.property string ExceptionRenkoCanNotCobine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoCanNotCobine()
		}
		.property string ExceptionRenkoNullReference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoNullReference()
		}
		.property string ExceptionRenkoUpBrickColorInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoUpBrickColorInvalid()
		}
		.property string ExceptionRenkoUsedYValueFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoUsedYValueFormatInvalid()
		}
		.property string ExceptionRenkoUsedYValueOutOfRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionRenkoUsedYValueOutOfRange()
		}
		.property string ExceptionScrollBarSizeInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionScrollBarSizeInvalid()
		}
		.property string ExceptionScrollBarZoomResetsNumberInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionScrollBarZoomResetsNumberInvalid()
		}
		.property string ExceptionSeriesNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionSeriesNameIsEmpty()
		}
		.property string ExceptionSeriesSymbolSizeIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionSeriesSymbolSizeIsNegative()
		}
		.property string ExceptionSmartLabelsDirectionUndefined()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionSmartLabelsDirectionUndefined()
		}
		.property string ExceptionSmartLabelsMaxMovingDistanceIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionSmartLabelsMaxMovingDistanceIsNegative()
		}
		.property string ExceptionSmartLabelsMinMovingDistanceIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionSmartLabelsMinMovingDistanceIsNegative()
		}
		.property string ExceptionStackedAreaChartSeriesDataPointsNumberMismatch()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStackedAreaChartSeriesDataPointsNumberMismatch()
		}
		.property string ExceptionStatisticalAnalysesCovariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesCovariance()
		}
		.property string ExceptionStatisticalAnalysesGammaBetaNegativeParameters()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesGammaBetaNegativeParameters()
		}
		.property string ExceptionStatisticalAnalysesIncompleteBetaFunction()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesIncompleteBetaFunction()
		}
		.property string ExceptionStatisticalAnalysesInvalidAlphaValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidAlphaValue()
		}
		.property string ExceptionStatisticalAnalysesInvalidAnovaTest()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidAnovaTest()
		}
		.property string ExceptionStatisticalAnalysesInvalidDegreeOfFreedom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidDegreeOfFreedom()
		}
		.property string ExceptionStatisticalAnalysesInvalidInputParameter()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidInputParameter()
		}
		.property string ExceptionStatisticalAnalysesInvalidMeanConditions()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidMeanConditions()
		}
		.property string ExceptionStatisticalAnalysesInvalidMeanDifference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidMeanDifference()
		}
		.property string ExceptionStatisticalAnalysesInvalidMedianConditions()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidMedianConditions()
		}
		.property string ExceptionStatisticalAnalysesInvalidProbabilityValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidProbabilityValue()
		}
		.property string ExceptionStatisticalAnalysesInvalidSeriesNumber()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidSeriesNumber()
		}
		.property string ExceptionStatisticalAnalysesInvalidTValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidTValue()
		}
		.property string ExceptionStatisticalAnalysesInvalidTailedParameter()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidTailedParameter()
		}
		.property string ExceptionStatisticalAnalysesInvalidVariableRanges()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidVariableRanges()
		}
		.property string ExceptionStatisticalAnalysesInvalidVariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidVariance()
		}
		.property string ExceptionStatisticalAnalysesInvalidVarianceConditions()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidVarianceConditions()
		}
		.property string ExceptionStatisticalAnalysesInvalidZValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesInvalidZValue()
		}
		.property string ExceptionStatisticalAnalysesNegativeMeanDifference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesNegativeMeanDifference()
		}
		.property string ExceptionStatisticalAnalysesNormalInvalidProbabilityValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesNormalInvalidProbabilityValue()
		}
		.property string ExceptionStatisticalAnalysesNotEnoughDataPoints()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesNotEnoughDataPoints()
		}
		.property string ExceptionStatisticalAnalysesNotEnoughInputSeries()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesNotEnoughInputSeries()
		}
		.property string ExceptionStatisticalAnalysesStudentsInvalidTValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesStudentsInvalidTValue()
		}
		.property string ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree()
		}
		.property string ExceptionStatisticalAnalysesZeroVariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStatisticalAnalysesZeroVariance()
		}
		.property string ExceptionStripLineAddedHasWrongType()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStripLineAddedHasWrongType()
		}
		.property string ExceptionStripLineWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionStripLineWidthIsNegative()
		}
		.property string ExceptionTextThresholdIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionTextThresholdIsNegative()
		}
		.property string ExceptionThreeLineBreakCanNotCobine()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakCanNotCobine()
		}
		.property string ExceptionThreeLineBreakNullReference()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakNullReference()
		}
		.property string ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid()
		}
		.property string ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid()
		}
		.property string ExceptionThreeLineBreakUpBrickColorInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakUpBrickColorInvalid()
		}
		.property string ExceptionThreeLineBreakUsedYValueInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakUsedYValueInvalid()
		}
		.property string ExceptionThreeLineBreakUsedYValueOutOfRange()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionThreeLineBreakUsedYValueOutOfRange()
		}
		.property string ExceptionTickMarksIntervalIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionTickMarksIntervalIsNegative()
		}
		.property string ExceptionTickMarksIntervalIsZero()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionTickMarksIntervalIsZero()
		}
		.property string ExceptionTitleBorderWidthIsNegative()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionTitleBorderWidthIsNegative()
		}
		.property string ExceptionTitleNameIsEmpty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionTitleNameIsEmpty()
		}
		.property string ExceptionVolumeIndicatorStartValueMissing()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_ExceptionVolumeIndicatorStartValueMissing()
		}
		.property string FormatErrorString()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormatErrorString()
		}
		.property string FormulaNameGeneralFormulas()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameGeneralFormulas()
		}
		.property string FormulaNameGeneralTechnicalIndicators()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameGeneralTechnicalIndicators()
		}
		.property string FormulaNameOscillator()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameOscillator()
		}
		.property string FormulaNamePriceIndicators()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNamePriceIndicators()
		}
		.property string FormulaNameStatisticalAnalysis()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameStatisticalAnalysis()
		}
		.property string FormulaNameTechnicalVolumeIndicators()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameTechnicalVolumeIndicators()
		}
		.property string FormulaNameTimeSeriesAndForecasting()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameTimeSeriesAndForecasting()
		}
		.property string FormulaNameVolumeIndicators()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_FormulaNameVolumeIndicators()
		}
		.property string LabelButtonCancel()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelButtonCancel()
		}
		.property string LabelButtonOk()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelButtonOk()
		}
		.property string LabelDescription()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelDescription()
		}
		.property string LabelEditKeyword()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelEditKeyword()
		}
		.property string LabelFormatKeySample()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelFormatKeySample()
		}
		.property string LabelInsertNewKeyword()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelInsertNewKeyword()
		}
		.property string LabelKeyCustomFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeyCustomFormat()
		}
		.property string LabelKeyFormat()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeyFormat()
		}
		.property string LabelKeyKeywords()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeyKeywords()
		}
		.property string LabelKeyPrecision()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeyPrecision()
		}
		.property string LabelKeyYValueIndex()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeyYValueIndex()
		}
		.property string LabelKeywordEditor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelKeywordEditor()
		}
		.property string LabelStatisticalAverage()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalAverage()
		}
		.property string LabelStatisticalBetaFunction()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalBetaFunction()
		}
		.property string LabelStatisticalCorrelation()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalCorrelation()
		}
		.property string LabelStatisticalCovariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalCovariance()
		}
		.property string LabelStatisticalDegreeOfFreedom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalDegreeOfFreedom()
		}
		.property string LabelStatisticalDegreesOfFreedomBetweenGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalDegreesOfFreedomBetweenGroups()
		}
		.property string LabelStatisticalDegreesOfFreedomTotal()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalDegreesOfFreedomTotal()
		}
		.property string LabelStatisticalDegreesOfFreedomWithinGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalDegreesOfFreedomWithinGroups()
		}
		.property string LabelStatisticalFCriteria()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalFCriteria()
		}
		.property string LabelStatisticalFCriticalValueOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalFCriticalValueOneTail()
		}
		.property string LabelStatisticalFRatio()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalFRatio()
		}
		.property string LabelStatisticalFValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalFValue()
		}
		.property string LabelStatisticalGammaFunction()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalGammaFunction()
		}
		.property string LabelStatisticalMeanSquareVarianceBetweenGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalMeanSquareVarianceBetweenGroups()
		}
		.property string LabelStatisticalMeanSquareVarianceWithinGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalMeanSquareVarianceWithinGroups()
		}
		.property string LabelStatisticalMedian()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalMedian()
		}
		.property string LabelStatisticalPFLessEqualSmallFOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalPFLessEqualSmallFOneTail()
		}
		.property string LabelStatisticalPTLessEqualSmallTOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalPTLessEqualSmallTOneTail()
		}
		.property string LabelStatisticalPTLessEqualSmallTTwoTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalPTLessEqualSmallTTwoTail()
		}
		.property string LabelStatisticalPZLessEqualSmallZOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalPZLessEqualSmallZOneTail()
		}
		.property string LabelStatisticalPZLessEqualSmallZTwoTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalPZLessEqualSmallZTwoTail()
		}
		.property string LabelStatisticalProbability()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalProbability()
		}
		.property string LabelStatisticalSmallTCrititcalOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalSmallTCrititcalOneTail()
		}
		.property string LabelStatisticalSmallTCrititcalTwoTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalSmallTCrititcalTwoTail()
		}
		.property string LabelStatisticalSumOfSquaresBetweenGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalSumOfSquaresBetweenGroups()
		}
		.property string LabelStatisticalSumOfSquaresTotal()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalSumOfSquaresTotal()
		}
		.property string LabelStatisticalSumOfSquaresWithinGroups()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalSumOfSquaresWithinGroups()
		}
		.property string LabelStatisticalTValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalTValue()
		}
		.property string LabelStatisticalTheFirstGroupMean()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalTheFirstGroupMean()
		}
		.property string LabelStatisticalTheFirstGroupVariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalTheFirstGroupVariance()
		}
		.property string LabelStatisticalTheSecondGroupMean()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalTheSecondGroupMean()
		}
		.property string LabelStatisticalTheSecondGroupVariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalTheSecondGroupVariance()
		}
		.property string LabelStatisticalVariance()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalVariance()
		}
		.property string LabelStatisticalZCriticalValueOneTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalZCriticalValueOneTail()
		}
		.property string LabelStatisticalZCriticalValueTwoTail()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalZCriticalValueTwoTail()
		}
		.property string LabelStatisticalZValue()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStatisticalZValue()
		}
		.property string LabelStringKeywordsEditor()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStringKeywordsEditor()
		}
		.property string LabelStringWithKeywords()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelStringWithKeywords()
		}
		.property string LabelTextRow()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelTextRow()
		}
		.property string LabelValueFormatting()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_LabelValueFormatting()
		}
		.property string MessageChangingChartAreaPositionConfirmAutomatic()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageChangingChartAreaPositionConfirmAutomatic()
		}
		.property string MessageChangingChartAreaPositionConfirmCustom()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageChangingChartAreaPositionConfirmCustom()
		}
		.property string MessageChangingChartAreaPositionProperty()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageChangingChartAreaPositionProperty()
		}
		.property string MessageChartException()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageChartException()
		}
		.property string MessageChartTitle()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageChartTitle()
		}
		.property string MessagePrecisionInvalid()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessagePrecisionInvalid()
		}
		.property string MessageSite()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageSite()
		}
		.property string MessageStackTrace()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_MessageStackTrace()
		}
		.property string TitleAxisX()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_TitleAxisX()
		}
		.property string TitleAxisX2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_TitleAxisX2()
		}
		.property string TitleAxisY()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_TitleAxisY()
		}
		.property string TitleAxisY2()
		{
			.get string 'System.Web.UI.DataVisualization.Charting.SR'::get_TitleAxisY2()
		}
	}
	.class private sealed SRCategoryAttribute
		extends [System]System.ComponentModel.CategoryAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(32767) }
		.method public hidebysig specialname 
			instance void .ctor(string category)
		{
			ret
		}
		.method family virtual hidebysig 
			instance string GetLocalizedString(string 'value')
		{
			ret
		}
	}
	.class private sealed SRDescriptionAttribute
		extends [System]System.ComponentModel.DescriptionAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(32767) }
		.method public hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.SRDescriptionAttribute'::get_Description()
		}
	}
	.class private Selection
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer service)
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Chart' get_ChartControl()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartPicture' get_ChartPicture()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' get_DataManager()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_Graph()
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult'[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType'[] requestedElementTypes)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y, bool ignoreTransparent)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' HitTest(int32 x, int32 y, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' requestedElement)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.HitTestResult' GetHitTestResult(string seriesName, int32 pointIndex, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' 'type', object obj, object subObject)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartElementOutline' GetChartElementOutline(object chartObject, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Chart' ChartControl()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Chart' 'System.Web.UI.DataVisualization.Charting.Selection'::get_ChartControl()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartPicture' ChartPicture()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartPicture' 'System.Web.UI.DataVisualization.Charting.Selection'::get_ChartPicture()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' DataManager()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' 'System.Web.UI.DataVisualization.Charting.Selection'::get_DataManager()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' Graph()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.Selection'::get_Graph()
		}
	}
	.class private sealed SelectionPointsStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' Rectangle = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' TwoPoints = int32(0x00000000)
	}
	.class public sealed SerializationContents
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' All = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' Appearance = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' Data = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationContents' Default = int32(0x00000001)
	}
	.class public sealed SerializationFormat
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' Binary = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SerializationFormat' Xml = int32(0x00000000)
	}
	.class public Series
		extends 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties'
	{
		.class nested assembly sealed SeriesValuesFormulaType
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType Average = int32(0x00000001)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType First = int32(0x00000004)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType Last = int32(0x00000005)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType Maximum = int32(0x00000002)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType Minimum = int32(0x00000003)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType Total = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, int32 yValues)
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetCaption()
		{
			ret
		}
		.method assembly hidebysig 
			instance void GetPointDepthAndGap(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Axis' axis, float64& pointDepth, float64& pointGapDepth)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetPointWidth(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Axis' axis, float64 interval, float64 defaultWidth)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetChartTypeName(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsYValueDateTime()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsXValueDateTime()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsFastChartType()
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckSupportedTypes(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance void ApplyPaletteColors()
		{
			ret
		}
		.method assembly hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable GetDummyData(valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'type')
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetTotalYValue()
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetTotalYValue(int32 yValueIndex)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string ReplaceKeywords(string strOriginal)
		{
			ret
		}
		.method assembly hidebysig 
			instance string ReplaceOneKeyword(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, object obj, object objTag, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType, string strOriginal, string keyword, valuetype 'System.Web.UI.DataVisualization.Charting.Series'/SeriesValuesFormulaType formulaType, valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' valueType, string defaultFormat)
		{
			ret
		}
		.method assembly hidebysig 
			instance string ReplaceOneKeyword(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, object obj, object objTag, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType, string strOriginal, string keyword, float64 'value', valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' valueType, string defaultFormat)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder, string sortBy)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype 'System.Web.UI.DataVisualization.Charting.PointSortOrder' pointSortOrder)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Collections.Generic.IComparer`1'<class 'System.Web.UI.DataVisualization.Charting.DataPoint'> comparer)
		{
			ret
		}
		.method assembly static hidebysig 
			void MovePositionMarkers(class 'System.Web.UI.DataVisualization.Charting.Series' fromSeries, class 'System.Web.UI.DataVisualization.Charting.Series' toSeries)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool UnPrepareData(class [System]System.ComponentModel.ISite controlSite)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAutoValues()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ResetAutoValues(bool reset)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PrepareData(bool applyPaletteColors)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_XValueMember()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_XValueMember(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_YValueMembers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_YValueMembers(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Legend()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Legend(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' get_XValueType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_XValueType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsXValueIndexed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsXValueIndexed(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' get_YValueType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_YValueType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_YValuesPerPoint(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPointCollection' get_Points()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' get_EmptyPointStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EmptyPointStyle(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' get_Palette()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MarkerStep()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MarkerStep(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_YSubAxisName()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_YSubAxisName(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_XSubAxisName()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_XSubAxisName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' get_XAxisType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_XAxisType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' get_YAxisType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_YAxisType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' get_ChartType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChartType(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ChartTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChartTypeName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChartArea(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AxisLabel()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_AxisLabel(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' get_SmartLabelStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SmartLabelStyle(class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.FontCache' get_FontCache()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Invalidate(bool invalidateAreaOnly, bool invalidateLegend)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly bool autoXValueType
		.field assembly bool autoYValueType
		.field assembly string axisLabel
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle
		.field assembly string backImage
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlignment
		.field assembly valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode
		.field assembly valuetype [System.Drawing]System.Drawing.Color backSecondaryColor
		.field assembly valuetype [System.Drawing]System.Drawing.Color borderColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle
		.field assembly int32 borderWidth
		.field assembly valuetype [System.Drawing]System.Drawing.Color color
		.field static assembly class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' defaultCustomProperties
		.field assembly class 'System.Web.UI.DataVisualization.Charting.DataPointCollection' fakeDataPoints
		.field assembly class [System.Drawing]System.Drawing.Font font
		.field assembly int32 fontAngle
		.field assembly valuetype [System.Drawing]System.Drawing.Color fontColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' indexedXValueType
		.field assembly string label
		.field assembly valuetype [System.Drawing]System.Drawing.Color labelBackColor
		.field assembly valuetype [System.Drawing]System.Drawing.Color labelBorderColor
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' labelBorderDashStyle
		.field assembly int32 labelBorderWidth
		.field assembly string labelFormat
		.field assembly string labelMapAreaAttributes
		.field assembly string labelPostbackValue
		.field assembly string labelToolTip
		.field assembly string labelUrl
		.field assembly string legendMapAreaAttributes
		.field assembly string legendPostbackValue
		.field assembly string legendText
		.field assembly string legendToolTip
		.field assembly string legendUrl
		.field assembly string mapAreaAttributes
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerBorderColor
		.field assembly int32 markerBorderWidth
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerColor
		.field assembly string markerImage
		.field assembly valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor
		.field assembly int32 markerSize
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle
		.field assembly bool noLabelsInPoints
		.field assembly string postbackValue
		.field assembly bool showInLegend
		.field assembly bool showLabelAsValue
		.field assembly bool tempMarkerStyleIsSet
		.field assembly string toolTip
		.field assembly string url
		.field assembly bool xValuesZeros
		.field assembly bool xValuesZerosChecked
		.property instance string AxisLabel()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_AxisLabel()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_AxisLabel(string)
		}
		.property instance string ChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_ChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_ChartArea(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' ChartType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 72 69 65 73 43 68 61 72 74 54 79 70 65 0A 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' 'System.Web.UI.DataVisualization.Charting.Series'::get_ChartType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_ChartType(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType')
		}
		.property instance string ChartTypeName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('Column') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_ChartTypeName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_ChartTypeName(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' EmptyPointStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' 'System.Web.UI.DataVisualization.Charting.Series'::get_EmptyPointStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_EmptyPointStyle(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties')
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Series'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_Enabled(bool)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.FontCache' FontCache()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.FontCache' 'System.Web.UI.DataVisualization.Charting.Series'::get_FontCache()
		}
		.property instance bool IsXValueIndexed()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Series'::get_IsXValueIndexed()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_IsXValueIndexed(bool)
		}
		.property instance string Legend()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_Legend()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_Legend(string)
		}
		.property instance int32 MarkerStep()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Series'::get_MarkerStep()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_MarkerStep(int32)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_Name(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Palette()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3A 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 43 6F 6C 6F 72 50 61 6C 65 74 74 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'System.Web.UI.DataVisualization.Charting.Series'::get_Palette()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette')
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.DataPointCollection' Points()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.DataPointCollection' 'System.Web.UI.DataVisualization.Charting.Series'::get_Points()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128,0,0,0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Series'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Series'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_ShadowOffset(int32)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' SmartLabelStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' 'System.Web.UI.DataVisualization.Charting.Series'::get_SmartLabelStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_SmartLabelStyle(class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' XAxisType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 31 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 78 69 73 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'System.Web.UI.DataVisualization.Charting.Series'::get_XAxisType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_XAxisType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType')
		}
		.property instance string XSubAxisName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_XSubAxisName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_XSubAxisName(string)
		}
		.property instance string XValueMember()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_XValueMember()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_XValueMember(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' XValueType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 56 61 6C 75 65 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'System.Web.UI.DataVisualization.Charting.Series'::get_XValueType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_XValueType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' YAxisType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 31 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 41 78 69 73 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.AxisType' 'System.Web.UI.DataVisualization.Charting.Series'::get_YAxisType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_YAxisType(valuetype 'System.Web.UI.DataVisualization.Charting.AxisType')
		}
		.property instance string YSubAxisName()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_YSubAxisName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_YSubAxisName(string)
		}
		.property instance string YValueMembers()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Series'::get_YValueMembers()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_YValueMembers(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' YValueType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 56 61 6C 75 65 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' 'System.Web.UI.DataVisualization.Charting.Series'::get_YValueType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_YValueType(valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType')
		}
		.property instance int32 YValuesPerPoint()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Series'::get_YValuesPerPoint()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Series'::set_YValuesPerPoint(int32)
		}
	}
	.class private SeriesAreaNameConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SeriesChartType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Area = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Bar = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' BoxPlot = int32(0x0000001C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Bubble = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Candlestick = int32(0x00000014)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Column = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Doughnut = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' ErrorBar = int32(0x0000001B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' FastLine = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' FastPoint = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Funnel = int32(0x00000021)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Kagi = int32(0x0000001F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Line = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Pie = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Point = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' PointAndFigure = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Polar = int32(0x0000001A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Pyramid = int32(0x00000022)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Radar = int32(0x00000019)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Range = int32(0x00000015)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' RangeBar = int32(0x00000017)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' RangeColumn = int32(0x00000018)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Renko = int32(0x0000001D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Spline = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' SplineArea = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' SplineRange = int32(0x00000016)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedArea = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedArea100 = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedBar = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedBar100 = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedColumn = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StackedColumn100 = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' StepLine = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' Stock = int32(0x00000013)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' ThreeLineBreak = int32(0x0000001E)
	}
	.class public SeriesCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Series'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Data.DataManager' dataManager)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Series' Add(string name)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void FixNameReferences(class 'System.Web.UI.DataVisualization.Charting.Series' item)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChartAreaNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
		.method assembly hidebysig 
			instance void LegendNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
	}
	.class private SeriesDataSourceMemberConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private SeriesLegendNameConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private SeriesNameConverter
		extends [System]System.ComponentModel.StringConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private SeriesYValueTypeConverter
		extends [System]System.ComponentModel.EnumConverter
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
	}
	.class private SizeEmptyValueConverter
		extends [System.Drawing]System.Drawing.SizeConverter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private SmartLabel
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Reset()
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF AdjustSmartLabelPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF labelPosition, valuetype [System.Drawing]System.Drawing.SizeF labelSize, class [System.Drawing]System.Drawing.StringFormat format, valuetype [System.Drawing]System.Drawing.PointF markerPosition, valuetype [System.Drawing]System.Drawing.SizeF markerSize, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF AdjustSmartLabelPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF labelPosition, valuetype [System.Drawing]System.Drawing.SizeF labelSize, class [System.Drawing]System.Drawing.StringFormat format, valuetype [System.Drawing]System.Drawing.PointF markerPosition, valuetype [System.Drawing]System.Drawing.SizeF markerSize, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment, bool checkCalloutLineOverlapping)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void DrawCallout(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF labelPosition, valuetype [System.Drawing]System.Drawing.SizeF labelSize, class [System.Drawing]System.Drawing.StringFormat format, valuetype [System.Drawing]System.Drawing.PointF markerPosition, valuetype [System.Drawing]System.Drawing.SizeF markerSize, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance bool IsSmartLabelCollide(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle' smartLabelStyle, valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, valuetype [System.Drawing]System.Drawing.PointF markerPosition, class [System.Drawing]System.Drawing.StringFormat format, valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelAlignment, bool checkCalloutLineOverlapping)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void AddMarkersPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddSmartLabelPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, class [System.Drawing]System.Drawing.StringFormat format)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetLabelPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, class [System.Drawing]System.Drawing.StringFormat format, bool adjustForDrawing)
		{
			ret
		}
		.field assembly bool checkAllCollisions
		.field assembly int32 markersCount
		.field assembly class [mscorlib]System.Collections.ArrayList smartLabelsPositions
	}
	.class public SmartLabelStyle
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(object chartElement)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsMarkerOverlappingAllowed()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsMarkerOverlappingAllowed(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsOverlappedHidden()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsOverlappedHidden(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' get_MovingDirection()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MovingDirection(valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_MinMovingDistance()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MinMovingDistance(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_MaxMovingDistance()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_MaxMovingDistance(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' get_AllowOutsidePlotArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_AllowOutsidePlotArea(valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' get_CalloutStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_CalloutLineColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutLineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_CalloutLineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutLineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_CalloutBackColor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutBackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_CalloutLineWidth()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutLineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' get_CalloutLineAnchorCapStyle()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CalloutLineAnchorCapStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'value')
		{
			ret
		}
		.field assembly object chartElement
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' AllowOutsidePlotArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 42 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 61 62 65 6C 4F 75 74 73 69 64 65 50 6C 6F 74 41 72 65 61 53 74 79 6C 65 02 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle' 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_AllowOutsidePlotArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_AllowOutsidePlotArea(valuetype 'System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color CalloutBackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Transparent') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutBackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutBackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' CalloutLineAnchorCapStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 69 6E 65 41 6E 63 68 6F 72 43 61 70 53 74 79 6C 65 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle' 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutLineAnchorCapStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutLineAnchorCapStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color CalloutLineColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutLineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutLineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' CalloutLineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutLineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutLineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 CalloutLineWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutLineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutLineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' CalloutStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3A 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 4C 61 62 65 6C 43 61 6C 6C 6F 75 74 53 74 79 6C 65 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle' 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_CalloutStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_CalloutStyle(valuetype 'System.Web.UI.DataVisualization.Charting.LabelCalloutStyle')
		}
		.property instance bool Enabled()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_Enabled()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_Enabled(bool)
		}
		.property instance bool IsMarkerOverlappingAllowed()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_IsMarkerOverlappingAllowed()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_IsMarkerOverlappingAllowed(bool)
		}
		.property instance bool IsOverlappedHidden()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_IsOverlappedHidden()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_IsOverlappedHidden(bool)
		}
		.property instance float64 MaxMovingDistance()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 3E 40 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_MaxMovingDistance()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_MaxMovingDistance(float64)
		}
		.property instance float64 MinMovingDistance()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_MinMovingDistance()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_MinMovingDistance(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' MovingDirection()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type(System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles) string('Top, Bottom, Right, Left, TopLeft, TopRight, BottomLeft, BottomRight') }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::get_MovingDirection()
			.set instance void 'System.Web.UI.DataVisualization.Charting.SmartLabelStyle'::set_MovingDirection(valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles')
		}
	}
	.class public sealed StartFromZero
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' No = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.StartFromZero' Yes = int32(0x00000001)
	}
	.class public StatisticFormula
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.DataFormula' formulaData)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ZTestResult' ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.TTestResult' TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.TTestResult' TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.TTestResult' TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.FTestResult' FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.AnovaResult' Anova(float64 probability, string inputSeriesNames)
		{
			ret
		}
		.method public hidebysig 
			instance float64 NormalDistribution(float64 zValue)
		{
			ret
		}
		.method public hidebysig 
			instance float64 InverseNormalDistribution(float64 probability)
		{
			ret
		}
		.method public hidebysig 
			instance float64 FDistribution(float64 'value', int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom)
		{
			ret
		}
		.method public hidebysig 
			instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom)
		{
			ret
		}
		.method public hidebysig 
			instance float64 TDistribution(float64 'value', int32 degreeOfFreedom, bool oneTail)
		{
			ret
		}
		.method public hidebysig 
			instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom)
		{
			ret
		}
		.method public hidebysig 
			instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance float64 Mean(string inputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance float64 Median(string inputSeriesName)
		{
			ret
		}
		.method public hidebysig 
			instance float64 Variance(string inputSeriesName, bool sampleVariance)
		{
			ret
		}
		.method public hidebysig 
			instance float64 BetaFunction(float64 m, float64 n)
		{
			ret
		}
		.method public hidebysig 
			instance float64 GammaFunction(float64 'value')
		{
			ret
		}
	}
	.class public StripLine
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
		implements 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_Axis()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, bool drawLinesOnly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' get_TextOrientation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_IntervalOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffset(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalOffsetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Interval()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Interval(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_IntervalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_StripWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StripWidth(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' get_StripWidthType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StripWidthType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_TextAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.StringAlignment get_TextLineAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextLineAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly bool interlaced
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' intervalOffsetType
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' Axis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Axis()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.StripLine'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_BorderWidth(int32)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.StripLine'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance float64 Interval()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Interval()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_Interval(float64)
		}
		.property instance float64 IntervalOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.StripLine'::get_IntervalOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_IntervalOffset(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalOffsetType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_IntervalOffsetType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_IntervalOffsetType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' IntervalType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_IntervalType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_IntervalType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_MapAreaAttributes(string)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('StripLine') }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Name()
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_PostBackValue(string)
		}
		.property instance float64 StripWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float64) = (01 00 00 00 00 00 00 00 00 00 00 00)
			.get instance float64 'System.Web.UI.DataVisualization.Charting.StripLine'::get_StripWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_StripWidth(float64)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' StripWidthType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 61 74 65 54 69 6D 65 49 6E 74 65 72 76 61 6C 54 79 70 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_StripWidthType()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_StripWidthType(valuetype 'System.Web.UI.DataVisualization.Charting.DateTimeIntervalType')
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_Text(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment TextAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.StringAlignment) string('Far') }
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.StripLine'::get_TextAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_TextAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.StringAlignment TextLineAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.StringAlignment) string('Near') }
			.get instance valuetype [System.Drawing]System.Drawing.StringAlignment 'System.Web.UI.DataVisualization.Charting.StripLine'::get_TextLineAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_TextLineAlignment(valuetype [System.Drawing]System.Drawing.StringAlignment)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' TextOrientation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 54 65 78 74 4F 72 69 65 6E 74 61 74 69 6F 6E 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'System.Web.UI.DataVisualization.Charting.StripLine'::get_TextOrientation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation')
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.StripLine'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.StripLine'::set_Url(string)
		}
	}
	.class private StripLineTitleAngleConverter
		extends [System]System.ComponentModel.Int32Converter
	{
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class [System]System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public StripLinesCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.StripLine'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis)
		{
			ret
		}
	}
	.class private sealed SurfaceNames
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Back = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Bottom = int32(0x00000020)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Front = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Left = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Right = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames' Top = int32(0x00000010)
	}
	.class public TTestResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_TValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_DegreeOfFreedom()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ProbabilityTOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_TCriticalValueOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ProbabilityTTwoTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_TCriticalValueTwoTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly float64 degreeOfFreedom
		.field assembly float64 firstSeriesMean
		.field assembly float64 firstSeriesVariance
		.field assembly float64 probabilityTOneTail
		.field assembly float64 probabilityTTwoTail
		.field assembly float64 secondSeriesMean
		.field assembly float64 secondSeriesVariance
		.field assembly float64 tCriticalValueOneTail
		.field assembly float64 tCriticalValueTwoTail
		.field assembly float64 tValue
		.property instance float64 DegreeOfFreedom()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_DegreeOfFreedom()
		}
		.property instance float64 FirstSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_FirstSeriesMean()
		}
		.property instance float64 FirstSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_FirstSeriesVariance()
		}
		.property instance float64 ProbabilityTOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_ProbabilityTOneTail()
		}
		.property instance float64 ProbabilityTTwoTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_ProbabilityTTwoTail()
		}
		.property instance float64 SecondSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_SecondSeriesMean()
		}
		.property instance float64 SecondSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_SecondSeriesVariance()
		}
		.property instance float64 TCriticalValueOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_TCriticalValueOneTail()
		}
		.property instance float64 TCriticalValueTwoTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_TCriticalValueTwoTail()
		}
		.property instance float64 TValue()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.TTestResult'::get_TValue()
		}
	}
	.class public TextAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.Annotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Text()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsMultiline()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsMultiline(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_LineColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_LineWidth()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineWidth(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_LineDashStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' get_SelectionPointsStyle()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics)
		{
			ret
		}
		.method assembly hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF DrawText(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graphics, valuetype [System.Drawing]System.Drawing.RectangleF textPosition, bool noSpacingForCenteredText, bool getTextPosition)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetContentPosition()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTextSpacing([out] bool& annotationRelative)
		{
			ret
		}
		.field assembly valuetype [System.Drawing]System.Drawing.SizeF contentSize
		.field assembly bool isEllipse
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_AnnotationType()
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance bool IsMultiline()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_IsMultiline()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_IsMultiline(bool)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color LineColor()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_LineColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_LineColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' LineDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_LineDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_LineDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 LineWidth()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_LineWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_LineWidth(int32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' SelectionPointsStyle()
		{
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3D 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 53 65 6C 65 63 74 69 6F 6E 50 6F 69 6E 74 73 53 74 79 6C 65 01 00 00 00 00 00)
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.SelectionPointsStyle' 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_SelectionPointsStyle()
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TextAnnotation'::set_Text(string)
		}
	}
	.class public sealed TextAntiAliasingQuality
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' High = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' Normal = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality' SystemDefault = int32(0x00000002)
	}
	.class public sealed TextOrientation
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' Horizontal = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' Rotated270 = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' Rotated90 = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' Stacked = int32(0x00000004)
	}
	.class public sealed TextStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' Default = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' Embed = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' Emboss = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' Frame = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' Shadow = int32(0x00000001)
	}
	.class public TickMark
		extends 'System.Web.UI.DataVisualization.Charting.Grid'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Axis' axis, bool major)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool backElements)
		{
			ret
		}
		.method assembly hidebysig 
			instance void PaintCustom(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, bool backElements)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Draw3DTickLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF point1, valuetype [System.Drawing]System.Drawing.PointF point2, bool backElements)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' get_TickMarkStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TickMarkStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Size(float32 'value')
		{
			ret
		}
		.property instance float32 Size()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(float32) = (01 00 00 00 80 3F 00 00)
			.get instance float32 'System.Web.UI.DataVisualization.Charting.TickMark'::get_Size()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TickMark'::set_Size(float32)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' TickMarkStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 54 69 63 6B 4D 61 72 6B 53 74 79 6C 65 01 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' 'System.Web.UI.DataVisualization.Charting.TickMark'::get_TickMarkStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.TickMark'::set_TickMarkStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle')
		}
	}
	.class public sealed TickMarkStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' AcrossAxis = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' InsideArea = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.TickMarkStyle' OutsideArea = int32(0x00000001)
	}
	.class public Title
		extends 'System.Web.UI.DataVisualization.Charting.ChartNamedElement'
		implements [mscorlib]System.IDisposable, 'System.Web.UI.DataVisualization.Charting.IChartMapArea'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text, valuetype 'System.Web.UI.DataVisualization.Charting.Docking' docking)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text, valuetype 'System.Web.UI.DataVisualization.Charting.Docking' docking, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.Color color)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' get_TextOrientation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DockedToChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DockedToChartArea(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDockedInsideChartArea()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDockedInsideChartArea(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_DockingOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DockingOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'value')
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' get_TextStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BorderColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' get_BorderDashStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BorderWidth()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BorderWidth(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImage(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' get_BackImageWrapMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackImageTransparentColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' get_BackImageAlignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' get_BackGradientStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_BackSecondaryColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' get_BackHatchStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Drawing]System.Drawing.Font get_Font()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Font(class [System.Drawing]System.Drawing.Font 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ForeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForeColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.ContentAlignment get_Alignment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' get_Docking()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Docking(valuetype 'System.Web.UI.DataVisualization.Charting.Docking' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ShadowOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowOffset(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color get_ShadowColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ToolTip(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_ToolTip()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Url(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Url()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_MapAreaAttributes(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_MapAreaAttributes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_PostBackValue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_PostBackValue(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_BackGroundIsVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsVisible()
		{
			ret
		}
		.method assembly hidebysig 
			instance void Invalidate(bool invalidateTitleOnly)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph)
		{
			ret
		}
		.method assembly static hidebysig 
			void DrawStringWithStyle(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, string titleText, valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' textStyle, class [System.Drawing]System.Drawing.Font font, valuetype [System.Drawing]System.Drawing.RectangleF absPosition, valuetype [System.Drawing]System.Drawing.Color foreColor, valuetype [System.Drawing]System.Drawing.Color shadowColor, int32 shadowOffset, class [System.Drawing]System.Drawing.StringFormat format, valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' orientation)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CalcTitlePosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, valuetype [System.Drawing]System.Drawing.RectangleF& chartAreasRectangle, valuetype [System.Drawing]System.Drawing.RectangleF& frameTitlePosition, float32 elementSpacing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly int32 titleBorderSpacing
		.property instance valuetype [System.Drawing]System.Drawing.ContentAlignment Alignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 72 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2E 43 6F 6E 74 65 6E 74 41 6C 69 67 6E 6D 65 6E 74 2C 20 53 79 73 74 65 6D 2E 44 72 61 77 69 6E 67 2C 20 56 65 72 73 69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 20 00 00 00 00 00)
			.get instance valuetype [System.Drawing]System.Drawing.ContentAlignment 'System.Web.UI.DataVisualization.Charting.Title'::get_Alignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Alignment(valuetype [System.Drawing]System.Drawing.ContentAlignment)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_BackColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' BackGradientStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 36 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 47 72 61 64 69 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' 'System.Web.UI.DataVisualization.Charting.Title'::get_BackGradientStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackGradientStyle(valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle')
		}
		.property instance bool BackGroundIsVisible()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Title'::get_BackGroundIsVisible()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' BackHatchStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 48 61 74 63 68 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' 'System.Web.UI.DataVisualization.Charting.Title'::get_BackHatchStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackHatchStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle')
		}
		.property instance string BackImage()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_BackImage()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackImage(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' BackImageAlignment()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 41 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 41 6C 69 67 6E 6D 65 6E 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' 'System.Web.UI.DataVisualization.Charting.Title'::get_BackImageAlignment()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackImageAlignment(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackImageTransparentColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_BackImageTransparentColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackImageTransparentColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' BackImageWrapMode()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3B 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 49 6D 61 67 65 57 72 61 70 4D 6F 64 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' 'System.Web.UI.DataVisualization.Charting.Title'::get_BackImageWrapMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackImageWrapMode(valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BackSecondaryColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_BackSecondaryColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BackSecondaryColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color BorderColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_BorderColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BorderColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' BorderDashStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 37 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 44 61 73 68 53 74 79 6C 65 05 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' 'System.Web.UI.DataVisualization.Charting.Title'::get_BorderDashStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BorderDashStyle(valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle')
		}
		.property instance int32 BorderWidth()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(1) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Title'::get_BorderWidth()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_BorderWidth(int32)
		}
		.property instance string DockedToChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('NotSet') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_DockedToChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_DockedToChartArea(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' Docking()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 30 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 44 6F 63 6B 69 6E 67 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Docking' 'System.Web.UI.DataVisualization.Charting.Title'::get_Docking()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Docking(valuetype 'System.Web.UI.DataVisualization.Charting.Docking')
		}
		.property instance int32 DockingOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Title'::get_DockingOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_DockingOffset(int32)
		}
		.property instance class [System.Drawing]System.Drawing.Font Font()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Font) string('Microsoft Sans Serif, 8pt') }
			.get instance class [System.Drawing]System.Drawing.Font 'System.Web.UI.DataVisualization.Charting.Title'::get_Font()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Font(class [System.Drawing]System.Drawing.Font)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ForeColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('Black') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_ForeColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_ForeColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance bool IsDockedInsideChartArea()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Title'::get_IsDockedInsideChartArea()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_IsDockedInsideChartArea(bool)
		}
		.property instance string MapAreaAttributes()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_MapAreaAttributes()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_MapAreaAttributes(string)
		}
		.property instance string Name()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_Name()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Name(string)
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' Position()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.ElementPosition' 'System.Web.UI.DataVisualization.Charting.Title'::get_Position()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Position(class 'System.Web.UI.DataVisualization.Charting.ElementPosition')
		}
		.property instance string PostBackValue()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_PostBackValue()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_PostBackValue(string)
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color ShadowColor()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(class [mscorlib]System.Type, string) = { type([System.Drawing]System.Drawing.Color) string('128, 0, 0, 0') }
			.get instance valuetype [System.Drawing]System.Drawing.Color 'System.Web.UI.DataVisualization.Charting.Title'::get_ShadowColor()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_ShadowColor(valuetype [System.Drawing]System.Drawing.Color)
		}
		.property instance int32 ShadowOffset()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(int32) = { int32(0) }
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Title'::get_ShadowOffset()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_ShadowOffset(int32)
		}
		.property instance string Text()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_Text()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Text(string)
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' TextOrientation()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 38 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 54 65 78 74 4F 72 69 65 6E 74 61 74 69 6F 6E 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation' 'System.Web.UI.DataVisualization.Charting.Title'::get_TextOrientation()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_TextOrientation(valuetype 'System.Web.UI.DataVisualization.Charting.TextOrientation')
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' TextStyle()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 32 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 54 65 78 74 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle' 'System.Web.UI.DataVisualization.Charting.Title'::get_TextStyle()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_TextStyle(valuetype 'System.Web.UI.DataVisualization.Charting.TextStyle')
		}
		.property instance string ToolTip()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_ToolTip()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_ToolTip(string)
		}
		.property instance string Url()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(string) = { string('') }
			.get instance string 'System.Web.UI.DataVisualization.Charting.Title'::get_Url()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Url(string)
		}
		.property instance bool Visible()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Title'::get_Visible()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Title'::set_Visible(bool)
		}
	}
	.class public TitleCollection
		extends class 'System.Web.UI.DataVisualization.Charting.ChartNamedElementCollection`1'<class 'System.Web.UI.DataVisualization.Charting.Title'>
	{
		.method assembly hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.IChartElement' parent)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Title' Add(string name)
		{
			ret
		}
		.method assembly static hidebysig 
			void CalcOutsideTitlePosition(class 'System.Web.UI.DataVisualization.Charting.ChartPicture' chartPicture, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, valuetype [System.Drawing]System.Drawing.RectangleF& chartAreasRectangle, float32 elementSpacing)
		{
			ret
		}
		.method assembly static hidebysig 
			void CalcInsideTitlePosition(class 'System.Web.UI.DataVisualization.Charting.ChartPicture' chartPicture, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' chartGraph, float32 elementSpacing)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ChartAreaNameReferenceChanged(object sender, class 'System.Web.UI.DataVisualization.Charting.NameReferenceChangedEventArgs' e)
		{
			ret
		}
	}
	.class public VerticalLineAnnotation
		extends 'System.Web.UI.DataVisualization.Charting.LineAnnotation'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_AnnotationType()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void AdjustLineCoordinates(valuetype [System.Drawing]System.Drawing.PointF& point1, valuetype [System.Drawing]System.Drawing.PointF& point2, valuetype [System.Drawing]System.Drawing.RectangleF& selectionRect)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetContentPosition()
		{
			ret
		}
		.property instance string AnnotationType()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.BrowsableAttribute::.ctor(bool) = { bool(false) }
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance string 'System.Web.UI.DataVisualization.Charting.VerticalLineAnnotation'::get_AnnotationType()
		}
	}
	.class public ZTestResult
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesMean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_FirstSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_SecondSeriesVariance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ZValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ProbabilityZOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ZCriticalValueOneTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ProbabilityZTwoTail()
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_ZCriticalValueTwoTail()
		{
			ret
		}
		.field assembly float64 firstSeriesMean
		.field assembly float64 firstSeriesVariance
		.field assembly float64 probabilityZOneTail
		.field assembly float64 probabilityZTwoTail
		.field assembly float64 secondSeriesMean
		.field assembly float64 secondSeriesVariance
		.field assembly float64 zCriticalValueOneTail
		.field assembly float64 zCriticalValueTwoTail
		.field assembly float64 zValue
		.property instance float64 FirstSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_FirstSeriesMean()
		}
		.property instance float64 FirstSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_FirstSeriesVariance()
		}
		.property instance float64 ProbabilityZOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_ProbabilityZOneTail()
		}
		.property instance float64 ProbabilityZTwoTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_ProbabilityZTwoTail()
		}
		.property instance float64 SecondSeriesMean()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_SecondSeriesMean()
		}
		.property instance float64 SecondSeriesVariance()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_SecondSeriesVariance()
		}
		.property instance float64 ZCriticalValueOneTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_ZCriticalValueOneTail()
		}
		.property instance float64 ZCriticalValueTwoTail()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_ZCriticalValueTwoTail()
		}
		.property instance float64 ZValue()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ZTestResult'::get_ZValue()
		}
	}
}
.namespace 'System.Web.UI.DataVisualization.Charting.Borders3D'
{
	.class private BorderTypeRegistry
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public hidebysig 
			instance void Register(string name, class [mscorlib]System.Type borderType)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Borders3D.IBorderType' GetBorderType(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Resources.ResourceManager get_ResourceManager()
		{
			ret
		}
		.field assembly class [mscorlib]System.Collections.Hashtable registeredBorderTypes
		.property instance class [mscorlib]System.Resources.ResourceManager ResourceManager()
		{
			.get instance class [mscorlib]System.Resources.ResourceManager 'System.Web.UI.DataVisualization.Charting.Borders3D.BorderTypeRegistry'::get_ResourceManager()
		}
	}
	.class private EmbossBorder
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.Borders3D.IBorderType'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void AdjustAreasPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.RectangleF& areasRect)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void DrawBorder(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
			ret
		}
		.field assembly float32[] cornerRadius
		.field public float32 defaultRadiusSize
		.field public float32 resolution
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.EmbossBorder'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.EmbossBorder'::set_Resolution(float32)
		}
	}
	.class private FrameThin1Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.RaisedBorder'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void DrawBorder(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
			ret
		}
		.field assembly float32[] innerCorners
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'::set_Resolution(float32)
		}
	}
	.class private FrameThin2Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin2Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin2Border'::set_Resolution(float32)
		}
	}
	.class private FrameThin3Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin3Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin3Border'::set_Resolution(float32)
		}
	}
	.class private FrameThin4Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin4Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin4Border'::set_Resolution(float32)
		}
	}
	.class private FrameThin5Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin5Border'::get_Name()
		}
	}
	.class private FrameThin6Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin6Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin6Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle1Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle1Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle1Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle2Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin2Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle2Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle2Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle3Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin3Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle3Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle3Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle4Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin4Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle4Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle4Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle5Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin5Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle5Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle5Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle6Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameThin6Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle6Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle6Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle7Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle7Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle7Border'::set_Resolution(float32)
		}
	}
	.class private FrameTitle8Border
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle1Border'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle8Border'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.FrameTitle8Border'::set_Resolution(float32)
		}
	}
	.class private interface abstract IBorderType
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Resolution(float32 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DrawBorder(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AdjustAreasPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.RectangleF& areasRect)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.IBorderType'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.IBorderType'::set_Resolution(float32)
		}
	}
	.class private RaisedBorder
		extends 'System.Web.UI.DataVisualization.Charting.Borders3D.SunkenBorder'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.RaisedBorder'::get_Name()
		}
	}
	.class private SunkenBorder
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.Borders3D.IBorderType'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Resolution(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.RectangleF GetTitlePositionInBorder()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void AdjustAreasPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.RectangleF& areasRect)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void DrawBorder(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.BorderSkin' borderSkin, valuetype [System.Drawing]System.Drawing.RectangleF rect, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartHatchStyle' backHatchStyle, string backImage, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageWrapMode' backImageWrapMode, valuetype [System.Drawing]System.Drawing.Color backImageTransparentColor, valuetype 'System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle' backImageAlign, valuetype 'System.Web.UI.DataVisualization.Charting.GradientStyle' backGradientStyle, valuetype [System.Drawing]System.Drawing.Color backSecondaryColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, valuetype 'System.Web.UI.DataVisualization.Charting.ChartDashStyle' borderDashStyle)
		{
			ret
		}
		.field assembly float32[] cornerRadius
		.field assembly float32 defaultRadiusSize
		.field assembly bool drawBottomShadow
		.field assembly bool drawOutsideTopLeftShadow
		.field assembly bool drawScrews
		.field assembly float32 outsideShadowRate
		.field assembly float32 resolution
		.field assembly valuetype [System.Drawing]System.Drawing.SizeF sizeLeftTop
		.field assembly valuetype [System.Drawing]System.Drawing.SizeF sizeRightBottom
		.field assembly bool sunken
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Borders3D.SunkenBorder'::get_Name()
		}
		.property instance float32 Resolution()
		{
			.set instance void 'System.Web.UI.DataVisualization.Charting.Borders3D.SunkenBorder'::set_Resolution(float32)
		}
	}
}
.namespace 'System.Web.UI.DataVisualization.Charting.ChartTypes'
{
	.class private AreaChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.SplineChart'
	{
		.method family hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Series' get_Series()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void set_Series(class 'System.Web.UI.DataVisualization.Charting.Series' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 pointIndex, float32 tension)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool reversed, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' surfaceSegmentType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment, bool clipOnTop, bool clipOnBottom)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetTopSurfaceVisibility(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool upSideDown, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames'& visibleSurfaces)
		{
			ret
		}
		.method assembly hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' GetAxisIntersection(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, float32 axisPosition)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetBottomPointsPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 axisPosition, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& secondPoint, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, [out] valuetype [System.Drawing]System.Drawing.PointF& thirdPoint, [out] valuetype [System.Drawing]System.Drawing.PointF& fourthPoint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance int32 GetPointLoopNumber(bool selection, class [mscorlib]System.Collections.ArrayList pointsArray)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field family class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath areaPath
		.field family valuetype [System.Drawing]System.Drawing.PointF axisPos
		.field family bool gradientFill
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'::get_Name()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Series' Series()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Series' 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'::get_Series()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'::set_Series(class 'System.Web.UI.DataVisualization.Charting.Series')
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'::get_ZeroCrossing()
		}
	}
	.class private BarChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetEmptyPointValue(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field family valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarValueLabelDrawingStyle' defLabelDrawingStyle
		.field family bool drawSeriesSideBySide
		.field family bool pointLabelsMarkersPresent
		.field family bool useTwoValues
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'::get_ZeroCrossing()
		}
	}
	.class private BarPointsDrawingOrderComparer
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IComparer
	{
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, bool selection, valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' coord)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(object o1, object o2)
		{
			ret
		}
	}
	.class private sealed BarValueLabelDrawingStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarValueLabelDrawingStyle' Center = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarValueLabelDrawingStyle' Left = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarValueLabelDrawingStyle' Outside = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarValueLabelDrawingStyle' Right = int32(0x00000003)
	}
	.class private BoxPlotChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawBoxPlotMarks(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetMarkerSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 markerSize, string markerImage)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawLabel(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, valuetype [System.Drawing]System.Drawing.PointF position, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType3D(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawBoxPlotMarks3D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width, float32 zPosition, float32 depth)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly static hidebysig 
			void CalculateBoxPlotFromLinkedSeries(class 'System.Web.UI.DataVisualization.Charting.Series' boxPlotSeries)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field family class 'System.Web.UI.DataVisualization.Charting.Axis' hAxis
		.field family bool showSideBySide
		.field family class 'System.Web.UI.DataVisualization.Charting.Axis' vAxis
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BoxPlotChart'::get_ZeroCrossing()
		}
	}
	.class private BubbleChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance int32 GetMarkerBorderSize(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' point)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetMarkerSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 markerSize, string markerImage)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 AxisScaleBubbleSize(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float64 'value', bool yValue)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 GetBubbleMaxSize(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.BubbleChart'::get_Name()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.BubbleChart'::get_SecondYScale()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.BubbleChart'::get_YValuesPerPoint()
		}
	}
	.class private CandleStickChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.CandleStickChart'::get_Name()
		}
	}
	.class private abstract sealed ChartTypeNames
		extends [mscorlib]System.Object
	{
		.field static assembly literal string Area = "Area"
		.field static assembly literal string Bar = "Bar"
		.field static assembly literal string BoxPlot = "BoxPlot"
		.field static assembly literal string Bubble = "Bubble"
		.field static assembly literal string Candlestick = "Candlestick"
		.field static assembly literal string Column = "Column"
		.field static assembly literal string Doughnut = "Doughnut"
		.field static assembly literal string ErrorBar = "ErrorBar"
		.field static assembly literal string FastLine = "FastLine"
		.field static assembly literal string FastPoint = "FastPoint"
		.field static assembly literal string Funnel = "Funnel"
		.field static assembly literal string Kagi = "Kagi"
		.field static assembly literal string Line = "Line"
		.field static assembly literal string OneHundredPercentStackedArea = "100%StackedArea"
		.field static assembly literal string OneHundredPercentStackedBar = "100%StackedBar"
		.field static assembly literal string OneHundredPercentStackedColumn = "100%StackedColumn"
		.field static assembly literal string Pie = "Pie"
		.field static assembly literal string Point = "Point"
		.field static assembly literal string PointAndFigure = "PointAndFigure"
		.field static assembly literal string Polar = "Polar"
		.field static assembly literal string Pyramid = "Pyramid"
		.field static assembly literal string Radar = "Radar"
		.field static assembly literal string Range = "Range"
		.field static assembly literal string RangeBar = "RangeBar"
		.field static assembly literal string RangeColumn = "RangeColumn"
		.field static assembly literal string Renko = "Renko"
		.field static assembly literal string Spline = "Spline"
		.field static assembly literal string SplineArea = "SplineArea"
		.field static assembly literal string SplineRange = "SplineRange"
		.field static assembly literal string StackedArea = "StackedArea"
		.field static assembly literal string StackedBar = "StackedBar"
		.field static assembly literal string StackedColumn = "StackedColumn"
		.field static assembly literal string StepLine = "StepLine"
		.field static assembly literal string Stock = "Stock"
		.field static assembly literal string ThreeLineBreak = "ThreeLineBreak"
	}
	.class private ChartTypeRegistry
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider, [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public hidebysig 
			instance void Register(string name, class [mscorlib]System.Type chartType)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType' GetChartType(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' chartType)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType' GetChartType(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Resources.ResourceManager get_ResourceManager()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly class [mscorlib]System.Collections.Hashtable registeredChartTypes
		.property instance class [mscorlib]System.Resources.ResourceManager ResourceManager()
		{
			.get instance class [mscorlib]System.Resources.ResourceManager 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry'::get_ResourceManager()
		}
	}
	.class private ColumnChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance float64 get_ShiftedX()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ShiftedX(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ShiftedSerName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ShiftedSerName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawColumn2D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Axis' vAxis, valuetype [System.Drawing]System.Drawing.RectangleF rectSize, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' ser)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' GetAutoLabelPosition(class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool ShouldDrawMarkerOnViewEdgeX()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawLabel(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, valuetype [System.Drawing]System.Drawing.RectangleF columnPosition, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' ser, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessSinglePoint3D(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' pointEx, bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, valuetype [System.Drawing]System.Drawing.RectangleF columnPosition, int32 pointIndex)
		{
			ret
		}
		.field family valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' coordinates
		.field family bool drawSeriesSideBySide
		.field family bool useTwoValues
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_RequireAxes()
		}
		.property instance string ShiftedSerName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_ShiftedSerName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::set_ShiftedSerName(string)
		}
		.property instance float64 ShiftedX()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_ShiftedX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::set_ShiftedX(float64)
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_SideBySideSeries()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'::get_ZeroCrossing()
		}
	}
	.class private DoughnutChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Doughnut()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_DataPointsInLegend()
		}
		.property instance bool Doughnut()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_Doughnut()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_RequireAxes()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_SideBySideSeries()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.DoughnutChart'::get_ZeroCrossing()
		}
	}
	.class private ErrorBarChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawErrorBarMarks(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarStyle' barStyle, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetMarkerSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 markerSize, string markerImage)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawLabel(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, valuetype [System.Drawing]System.Drawing.PointF position, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType3D(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawErrorBarMarks3D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarStyle' barStyle, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width, float32 zPosition, float32 depth)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly static hidebysig 
			void CalculateErrorAmount(class 'System.Web.UI.DataVisualization.Charting.Series' errorBarSeries)
		{
			ret
		}
		.method assembly static hidebysig 
			float64 DefaultErrorBarTypeValue(valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarType' errorBarType)
		{
			ret
		}
		.method assembly static hidebysig 
			void GetDataFromLinkedSeries(class 'System.Web.UI.DataVisualization.Charting.Series' errorBarSeries)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field family class 'System.Web.UI.DataVisualization.Charting.Axis' hAxis
		.field family class 'System.Web.UI.DataVisualization.Charting.Axis' vAxis
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarChart'::get_ZeroCrossing()
		}
	}
	.class private sealed ErrorBarStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarStyle' Both = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarStyle' LowerError = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarStyle' UpperError = int32(0x00000001)
	}
	.class private sealed ErrorBarType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarType' FixedValue = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarType' Percentage = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarType' StandardDeviation = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.ErrorBarType' StandardError = int32(0x00000003)
	}
	.class private FastLineChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_Graph()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.DataPoint' pointMin, class 'System.Web.UI.DataVisualization.Charting.DataPoint' pointMax, int32 pointIndex, class [System.Drawing]System.Drawing.Pen pen, float32 firstPointX, float32 firstPointY, float32 secondPointX, float32 secondPointY)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly bool chartArea3DEnabled
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix3D
		.field assembly float32 seriesZCoordinate
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_CircularChartArea()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' Graph()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_Graph()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics')
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastLineChart'::get_ZeroCrossing()
		}
	}
	.class private FastPointChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_Graph()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawMarker(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, valuetype [System.Drawing]System.Drawing.PointF location, valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle, int32 markerSize, class [System.Drawing]System.Drawing.Brush brush, class [System.Drawing]System.Drawing.Pen borderPen)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly bool chartArea3DEnabled
		.field assembly class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix3D
		.field assembly float32 seriesZCoordinate
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_CircularChartArea()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' Graph()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_Graph()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics')
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FastPointChart'::get_ZeroCrossing()
		}
	}
	.class private sealed Funnel3DDrawingStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.Funnel3DDrawingStyle' CircularBase = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.Funnel3DDrawingStyle' SquareBase = int32(0x00000001)
	}
	.class private FunnelChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' get_Graph()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' get_Area()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.RectangleF get_PlotAreaPosition()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_PlotAreaPosition(valuetype [System.Drawing]System.Drawing.RectangleF 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetPointWidthAndHeight(class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex, float32 location, [out] float32& height, [out] float32& startWidth, [out] float32& endWidth)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool ShouldDrawFirstPoint()
		{
			ret
		}
		.method family hidebysig 
			instance float32 CheckMinHeight(float32 height)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetXValue(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly string funnel3DDrawingStyleAttributeName
		.field assembly string funnelInsideLabelAlignmentAttributeName
		.field assembly string funnelLabelStyleAttributeName
		.field family string funnelOutsideLabelPlacementAttributeName
		.field assembly string funnelPointGapAttributeName
		.field family string funnelPointMinHeight
		.field assembly string funnelRotationAngleAttributeName
		.field assembly float32 funnelSegmentGap
		.field assembly bool isPyramid
		.field assembly class [mscorlib]System.Collections.ArrayList labelInfoList
		.field assembly valuetype [System.Drawing]System.Drawing.RectangleF plotAreaSpacing
		.field assembly int32 pointNumber
		.field assembly bool round3DShape
		.field assembly class [mscorlib]System.Collections.ArrayList segmentList
		.field assembly float64 yValueTotal
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' Area()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_Area()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea')
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_CircularChartArea()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' Graph()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_Graph()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::set_Graph(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics')
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_Name()
		}
		.property instance valuetype [System.Drawing]System.Drawing.RectangleF PlotAreaPosition()
		{
			.get instance valuetype [System.Drawing]System.Drawing.RectangleF 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_PlotAreaPosition()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::set_PlotAreaPosition(valuetype [System.Drawing]System.Drawing.RectangleF)
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'::get_ZeroCrossing()
		}
	}
	.class private sealed FunnelLabelPlacement
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelPlacement' Left = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelPlacement' Right = int32(0x00000000)
	}
	.class private sealed FunnelLabelStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelStyle' Disabled = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelStyle' Inside = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelStyle' Outside = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelStyle' OutsideInColumn = int32(0x00000002)
	}
	.class private sealed FunnelLabelVerticalAlignment
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelVerticalAlignment' Bottom = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelVerticalAlignment' Center = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelVerticalAlignment' Top = int32(0x00000001)
	}
	.class private FunnelPointLabelInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field public valuetype [System.Drawing]System.Drawing.PointF CalloutPoint1
		.field public valuetype [System.Drawing]System.Drawing.PointF CalloutPoint2
		.field public valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelPlacement' OutsidePlacement
		.field public class 'System.Web.UI.DataVisualization.Charting.DataPoint' Point
		.field public int32 PointIndex
		.field public valuetype [System.Drawing]System.Drawing.RectangleF Position
		.field public valuetype [System.Drawing]System.Drawing.SizeF Size
		.field public valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelStyle' Style
		.field public string Text
		.field public valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelLabelVerticalAlignment' VerticalAlignment
	}
	.class private FunnelSegmentInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field public float32 EndWidth
		.field public float32 Height
		.field public float32 Location
		.field public bool NothingOnBottom
		.field public bool NothingOnTop
		.field public class 'System.Web.UI.DataVisualization.Charting.DataPoint' Point
		.field public int32 PointIndex
		.field public float32 StartWidth
	}
	.class private sealed FunnelStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelStyle' YIsHeight = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelStyle' YIsWidth = int32(0x00000001)
	}
	.class private HundredPercentStackedAreaChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedAreaChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedAreaChart'::get_HundredPercent()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedAreaChart'::get_Name()
		}
	}
	.class private HundredPercentStackedBarChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedBarChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedBarChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedBarChart'::get_Name()
		}
	}
	.class private HundredPercentStackedColumnChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedColumnChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedColumnChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.HundredPercentStackedColumnChart'::get_Name()
		}
	}
	.class private interface abstract IChartType
		implements [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_Stacked()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportStackedGroups()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_StackSign()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_RequireAxes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_CircularChartArea()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportLogarithmicAxes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SwitchValueAxes()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SideBySideSeries()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_DataPointsInLegend()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ZeroCrossing()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_YValuesPerPoint()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SecondYScale()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HundredPercent()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HundredPercentSupportNegative()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
		}
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType'::get_ZeroCrossing()
		}
	}
	.class private interface abstract ICircularChartType
	{
		.method public virtual hidebysig newslot abstract 
			instance bool RequireClosedFigure()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool XAxisCrossingSupported()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool XAxisLabelsSupported()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool RadialGridLinesSupported()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetNumerOfSectors(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' seriesCollection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance float32[] GetYAxisLocations(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
		}
	}
	.class private KagiChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.StepLineChart'
	{
		.method assembly static hidebysig 
			void PrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool UnPrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 pointIndex, float32 tension)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF[] GetPointsPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' series, bool indexedSeries)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly int32 currentKagiDirection
		.field assembly valuetype [System.Drawing]System.Drawing.Color kagiUpColor
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.KagiChart'::get_Name()
		}
	}
	.class private LineChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 pointIndex, float32 tension)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.PointF GetIntersectionY(valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, float32 pointY)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.PointF GetIntersectionX(valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint, float32 pointX)
		{
			ret
		}
		.method family hidebysig 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF firstPoint, valuetype [System.Drawing]System.Drawing.PointF secondPoint)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' GetAutoLabelPosition(class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.PointF[] GetPointsPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' series, bool indexedSeries)
		{
			ret
		}
		.method family hidebysig 
			instance void ProcessLineChartType3D(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.method family hidebysig 
			instance int32 GetCenterPointIndex(class [mscorlib]System.Collections.ArrayList points)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance int32 GetPointLoopNumber(bool selection, class [mscorlib]System.Collections.ArrayList pointsArray)
		{
			ret
		}
		.method family hidebysig 
			instance bool ClipTopPoints(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath resultPath, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& secondPoint, bool reversed, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' surfaceSegmentType, float32 topDarkening, float32 bottomDarkening)
		{
			ret
		}
		.method family hidebysig 
			instance bool ClipBottomPoints(class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath resultPath, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& secondPoint, valuetype [System.Drawing]System.Drawing.PointF& thirdPoint, valuetype [System.Drawing]System.Drawing.PointF& fourthPoint, bool reversed, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' surfaceSegmentType, float32 topDarkening, float32 bottomDarkening)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool reversed, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' surfaceSegmentType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment, bool clipOnTop, bool clipOnBottom)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field family valuetype 'System.Web.UI.DataVisualization.Charting.COPCoordinates' COPCoordinatesToCheck
		.field family int32 allPointsLoopsNumber
		.field family int32 centerPointIndex
		.field family bool clipRegionSet
		.field family bool disableShadow
		.field family bool drawOutsideLines
		.field family bool drawShadowOnly
		.field family float64 hAxisMax
		.field family float64 hAxisMin
		.field family float32 lineTension
		.field family bool multiSeries
		.field family bool showPointLines
		.field family bool useBorderColor
		.field family float64 vAxisMax
		.field family float64 vAxisMin
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_DataPointsInLegend()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_RequireAxes()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_SideBySideSeries()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'::get_ZeroCrossing()
		}
	}
	.class private PieChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.class nested assembly LabelColumn
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(valuetype [System.Drawing]System.Drawing.RectangleF position)
			{
				ret
			}
			.method assembly hidebysig 
				instance int32 GetLabelIndex(float32 y)
			{
				ret
			}
			.method assembly hidebysig 
				instance void Sort()
			{
				ret
			}
			.method assembly hidebysig 
				instance float32 GetLabelPosition(int32 index)
			{
				ret
			}
			.method assembly hidebysig 
				instance valuetype [System.Drawing]System.Drawing.PointF GetLabelPosition(class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint)
			{
				ret
			}
			.method assembly hidebysig 
				instance void InsertLabel(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 yCoordinate, int32 pointIndx)
			{
				ret
			}
			.method assembly hidebysig 
				instance void AdjustPositions()
			{
				ret
			}
			.method assembly hidebysig 
				instance void Initialize(valuetype [System.Drawing]System.Drawing.RectangleF rectangle, bool rightPosition, int32 maxNumOfRows, float32 labelLineSize)
			{
				ret
			}
			.field assembly float32 columnHeight
			.field assembly int32 numOfItems
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Doughnut()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method assembly static hidebysig 
			void PrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool UnPrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public hidebysig 
			instance void DrawLabels(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF middlePoint, valuetype [System.Drawing]System.Drawing.SizeF relativeSize, float32 startAngle, float32 sweepAngle, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 doughnutRadius, bool exploded, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, bool overlapTest, int32 pointIndex, valuetype [System.Drawing]System.Drawing.Color pieLineColor)
		{
			ret
		}
		.method public hidebysig 
			instance bool EstimateLabels(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF middlePoint, valuetype [System.Drawing]System.Drawing.SizeF relativeSize, float32 startAngle, float32 sweepAngle, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, bool exploded, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'/LabelColumn labelColumnLeft
		.field assembly class 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'/LabelColumn labelColumnRight
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_DataPointsInLegend()
		}
		.property instance bool Doughnut()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_Doughnut()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieChart'::get_ZeroCrossing()
		}
	}
	.class private sealed PieLabelStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieLabelStyle' Disabled = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieLabelStyle' Inside = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.PieLabelStyle' Outside = int32(0x00000001)
	}
	.class private PointAndFigureChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeColumnChart'
	{
		.method assembly static hidebysig 
			void PrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool UnPrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawColumn2D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Axis' vAxis, valuetype [System.Drawing]System.Drawing.RectangleF rectSize, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' ser)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointAndFigureChart'::get_Name()
		}
	}
	.class private PointChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.class nested assembly Label3DInfo
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field assembly valuetype [System.Drawing]System.Drawing.PointF MarkerPosition
			.field assembly valuetype [System.Drawing]System.Drawing.SizeF MarkerSize
			.field assembly class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' PointEx
		}
		.method assembly hidebysig specialname 
			instance int32 get_YValueIndex()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_YValueIndex(int32 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_VAxis()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_VAxis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_HAxis()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HAxis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' get_Area()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool alwaysDrawMarkers)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawPointMarker(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' dataPoint, valuetype [System.Drawing]System.Drawing.PointF point, valuetype 'System.Web.UI.DataVisualization.Charting.MarkerStyle' markerStyle, int32 markerSize, valuetype [System.Drawing]System.Drawing.Color markerColor, valuetype [System.Drawing]System.Drawing.Color markerBorderColor, int32 markerBorderSize, string markerImage, valuetype [System.Drawing]System.Drawing.Color markerImageTransparentColor, int32 shadowSize, valuetype [System.Drawing]System.Drawing.Color shadowColor, valuetype [System.Drawing]System.Drawing.RectangleF imageScaleRect)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [System.Drawing]System.Drawing.RectangleF GetLabelPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, valuetype [System.Drawing]System.Drawing.PointF position, valuetype [System.Drawing]System.Drawing.SizeF size, class [System.Drawing]System.Drawing.StringFormat format, bool adjustForDrawing)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType3D(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ProcessSinglePoint3D(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' pointEx, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawAccumulated3DLabels(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool ShouldDrawMarkerOnViewEdgeX()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance int32 GetMarkerBorderSize(class 'System.Web.UI.DataVisualization.Charting.DataPointCustomProperties' point)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' GetAutoLabelPosition(class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetMarkerSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 markerSize, string markerImage)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance float64 get_ShiftedX()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ShiftedX(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ShiftedSerName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ShiftedSerName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetEmptyPointValue(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly bool alwaysDrawMarkers
		.field assembly bool autoLabelPosition
		.field assembly bool indexedSeries
		.field assembly class [mscorlib]System.Collections.ArrayList label3DInfoList
		.field assembly valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' labelPosition
		.field assembly int32 labelYValueIndex
		.field assembly bool middleMarker
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' Area()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_Area()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea')
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_CircularChartArea()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' HAxis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_HAxis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_HAxis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_SecondYScale()
		}
		.property instance string ShiftedSerName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_ShiftedSerName()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_ShiftedSerName(string)
		}
		.property instance float64 ShiftedX()
		{
			.get instance float64 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_ShiftedX()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_ShiftedX(float64)
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_SwitchValueAxes()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' VAxis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_VAxis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_VAxis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance int32 YValueIndex()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_YValueIndex()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::set_YValueIndex(int32)
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.PointChart'::get_ZeroCrossing()
		}
	}
	.class private PolarChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool RequireClosedFigure()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool XAxisCrossingSupported()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool XAxisLabelsSupported()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool RadialGridLinesSupported()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetNumerOfSectors(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' seriesCollection)
		{
			ret
		}
		.method public virtual hidebysig 
			instance float32[] GetYAxisLocations(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarDrawingStyle' GetDrawingStyle(class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF[] GetPointsPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PolarChart'::get_Name()
		}
	}
	.class private PyramidChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.FunnelChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void GetPointWidthAndHeight(class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex, float32 location, [out] float32& height, [out] float32& startWidth, [out] float32& endWidth)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.PyramidChart'::get_Name()
		}
	}
	.class private sealed PyramidValueType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.PyramidValueType' Linear = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.PyramidValueType' Surface = int32(0x00000001)
	}
	.class private RadarChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable, 'System.Web.UI.DataVisualization.Charting.ChartTypes.ICircularChartType'
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' get_Common()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' get_Area()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool RequireClosedFigure()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool XAxisCrossingSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool XAxisLabelsSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool RadialGridLinesSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance int32 GetNumerOfSectors(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' seriesCollection)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float32[] GetYAxisLocations(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AddSelectionPath(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath selectionPath, valuetype [System.Drawing]System.Drawing.PointF[] dataPointPos, int32 firstPointIndex, int32 secondPointIndex, valuetype [System.Drawing]System.Drawing.PointF centerPoint, int32 borderWidth)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.SizeF GetMarkerSize(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 markerSize, string markerImage)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype [System.Drawing]System.Drawing.PointF[] GetPointsPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLabels(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, valuetype [System.Drawing]System.Drawing.PointF markerPosition, int32 markerSize, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' ser, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles' GetAutoLabelPosition(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarDrawingStyle' GetDrawingStyle(class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetEmptyPointValue(class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' Area()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.ChartArea' 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_Area()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::set_Area(class 'System.Web.UI.DataVisualization.Charting.ChartArea')
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_CircularChartArea()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' Common()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.CommonElements' 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_Common()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::set_Common(class 'System.Web.UI.DataVisualization.Charting.CommonElements')
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarChart'::get_ZeroCrossing()
		}
	}
	.class private sealed RadarDrawingStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarDrawingStyle' Area = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarDrawingStyle' Line = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.RadarDrawingStyle' Marker = int32(0x00000002)
	}
	.class private RangeBarChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.BarChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeBarChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeBarChart'::get_Name()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeBarChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeBarChart'::get_ZeroCrossing()
		}
	}
	.class private RangeChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.SplineChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 pointIndex, float32 tension)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool reversed, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' surfaceSegmentType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment, bool clipOnTop, bool clipOnBottom)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetTopSurfaceVisibility(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool upSideDown, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames'& visibleSurfaces)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetBottomPointsPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 axisPosition, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& secondPoint, [out] valuetype [System.Drawing]System.Drawing.PointF& thirdPoint, [out] valuetype [System.Drawing]System.Drawing.PointF& fourthPoint)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSplinePolygon(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 positionZ, valuetype [System.Drawing]System.Drawing.Color backColor, valuetype [System.Drawing]System.Drawing.Color borderColor, int32 borderWidth, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' thirdPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' fourthPoint, class [mscorlib]System.Collections.ArrayList points, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, valuetype 'System.Web.UI.DataVisualization.Charting.LineSegmentType' lineSegmentType, bool forceThinBorder)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath areaBottomPath
		.field family class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath areaPath
		.field assembly bool gradientFill
		.field assembly bool indexedBasedX
		.field assembly valuetype [System.Drawing]System.Drawing.PointF[] lowPoints
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeChart'::get_Name()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeChart'::get_YValuesPerPoint()
		}
	}
	.class private RangeColumnChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.ColumnChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawLabel(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, valuetype [System.Drawing]System.Drawing.RectangleF columnPosition, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessSinglePoint3D(class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' pointEx, bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, valuetype [System.Drawing]System.Drawing.RectangleF columnPosition, int32 pointIndex)
		{
			ret
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeColumnChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeColumnChart'::get_Name()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeColumnChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeColumnChart'::get_ZeroCrossing()
		}
	}
	.class private RenkoChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly static hidebysig 
			void PrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool UnPrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.RenkoChart'::get_ZeroCrossing()
		}
	}
	.class private SplineAreaChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.SplineAreaChart'::get_Name()
		}
	}
	.class private SplineChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [System.Drawing]System.Drawing.PointF[] GetPointsPosition(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' series, bool indexedSeries)
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.SplineChart'::get_Name()
		}
	}
	.class private SplineRangeChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.RangeChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsLineTensionSupported()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.SplineRangeChart'::get_Name()
		}
	}
	.class private StackedAreaChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.AreaChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance float32 GetDefaultTension()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void GetTopSurfaceVisibility(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' secondPoint, bool upSideDown, float32 positionZ, float32 depth, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.SurfaceNames'& visibleSurfaces)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void GetBottomPointsPosition(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, float32 axisPosition, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& firstPoint, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D'& secondPoint, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, [out] valuetype [System.Drawing]System.Drawing.PointF& thirdPoint, [out] valuetype [System.Drawing]System.Drawing.PointF& fourthPoint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance int32 GetPointLoopNumber(bool selection, class [mscorlib]System.Collections.ArrayList pointsArray)
		{
			ret
		}
		.method public virtual hidebysig 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field family class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath areaBottomPath
		.field family bool hundredPercentStacked
		.field family float64 prevNegY
		.field family float64 prevPosY
		.field family float64 prevPositionX
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedAreaChart'::get_Name()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedAreaChart'::get_Stacked()
		}
	}
	.class private StackedBarChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public hidebysig 
			instance void DrawLabels(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.RectangleF rectangle)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field assembly string currentStackGroup
		.field family bool hundredPercentStacked
		.field family float64 prevNegY
		.field family float64 prevPosY
		.field assembly bool stackGroupNameUsed
		.field assembly class [mscorlib]System.Collections.ArrayList stackGroupNames
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedBarChart'::get_ZeroCrossing()
		}
	}
	.class private StackedColumnChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method assembly static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.Series'[] GetSeriesByStackedGroupName(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, string groupName, string chartTypeName, string chartAreaName)
		{
			ret
		}
		.method assembly static hidebysig 
			string GetSeriesStackGroupName(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool IsSeriesStackGroupNameSupported(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public hidebysig 
			instance void DrawLabels(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.RectangleF rectangle)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method assembly hidebysig 
			instance void DrawLabels3D(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' pointEx, int32 pointIndex, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.RectangleF rectangle)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field assembly string currentStackGroup
		.field family bool hundredPercentStacked
		.field family float64 prevNegY
		.field family float64 prevPosY
		.field assembly bool stackGroupNameUsed
		.field assembly class [mscorlib]System.Collections.ArrayList stackGroupNames
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StackedColumnChart'::get_ZeroCrossing()
		}
	}
	.class private StepLineChart
		extends 'System.Web.UI.DataVisualization.Charting.ChartTypes.LineChart'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DrawLine(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype [System.Drawing]System.Drawing.PointF[] points, int32 pointIndex, float32 tension)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Drawing]System.Drawing.Drawing2D.GraphicsPath Draw3DSurface(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Matrix3D' matrix, valuetype 'System.Web.UI.DataVisualization.Charting.LightStyle' lightStyle, class 'System.Web.UI.DataVisualization.Charting.DataPoint3D' prevDataPointEx, float32 positionZ, float32 depth, class [mscorlib]System.Collections.ArrayList points, int32 pointIndex, int32 pointLoopIndex, float32 tension, valuetype 'System.Web.UI.DataVisualization.Charting.DrawingOperationTypes' operationType, float32 topDarkening, float32 bottomDarkening, valuetype [System.Drawing]System.Drawing.PointF thirdPointPosition, valuetype [System.Drawing]System.Drawing.PointF fourthPointPosition, bool clippedSegment)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.StepLineChart'::get_Name()
		}
	}
	.class private StockChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_VAxis()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_VAxis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Axis' get_HAxis()
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_HAxis(class 'System.Web.UI.DataVisualization.Charting.Axis' 'value')
		{
			.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockOpenCloseMarkStyle' style)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawOpenCloseMarks(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawLabel(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, valuetype [System.Drawing]System.Drawing.PointF position, int32 pointIndex)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ProcessChartType3D(bool selection, class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void DrawOpenCloseMarks3D(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' ser, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, float32 xPosition, float32 width, float32 zPosition, float32 depth)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field family bool forceCandleStick
		.field family valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockOpenCloseMarkStyle' openCloseStyle
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' HAxis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_HAxis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::set_HAxis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_SwitchValueAxes()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Axis' VAxis()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Axis' 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_VAxis()
			.set instance void 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::set_VAxis(class 'System.Web.UI.DataVisualization.Charting.Axis')
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockChart'::get_ZeroCrossing()
		}
	}
	.class private sealed StockOpenCloseMarkStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockOpenCloseMarkStyle' Candlestick = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockOpenCloseMarkStyle' Line = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.ChartTypes.StockOpenCloseMarkStyle' Triangle = int32(0x00000001)
	}
	.class private ThreeLineBreakChart
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.ChartTypes.IChartType', [mscorlib]System.IDisposable
	{
		.method assembly static hidebysig 
			void PrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method assembly static hidebysig 
			bool UnPrepareData(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Paint(class 'System.Web.UI.DataVisualization.Charting.ChartGraphics' graph, class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' seriesToDraw)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Stacked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportStackedGroups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_StackSign()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_RequireAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SecondYScale()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CircularChartArea()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportLogarithmicAxes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SwitchValueAxes()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_SideBySideSeries()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataPointsInLegend()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ZeroCrossing()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ApplyPaletteColorsToPoints()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_ExtraYValuesConnectedToYAxis()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercent()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_HundredPercentSupportNegative()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.LegendImageStyle' GetLegendImageStyle(class 'System.Web.UI.DataVisualization.Charting.Series' series)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_YValuesPerPoint()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Drawing]System.Drawing.Image GetImage(class 'System.Web.UI.DataVisualization.Charting.ChartTypes.ChartTypeRegistry' registry)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance float64 GetYValue(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class 'System.Web.UI.DataVisualization.Charting.DataPoint' point, int32 pointIndex, int32 yValueIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddSmartLabelMarkerPositions(class 'System.Web.UI.DataVisualization.Charting.CommonElements' common, class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, class 'System.Web.UI.DataVisualization.Charting.Series' series, class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool ApplyPaletteColorsToPoints()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_ApplyPaletteColorsToPoints()
		}
		.property instance bool CircularChartArea()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_CircularChartArea()
		}
		.property instance bool DataPointsInLegend()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_DataPointsInLegend()
		}
		.property instance bool ExtraYValuesConnectedToYAxis()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_ExtraYValuesConnectedToYAxis()
		}
		.property instance bool HundredPercent()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_HundredPercent()
		}
		.property instance bool HundredPercentSupportNegative()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_HundredPercentSupportNegative()
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_Name()
		}
		.property instance bool RequireAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_RequireAxes()
		}
		.property instance bool SecondYScale()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_SecondYScale()
		}
		.property instance bool SideBySideSeries()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_SideBySideSeries()
		}
		.property instance bool StackSign()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_StackSign()
		}
		.property instance bool Stacked()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_Stacked()
		}
		.property instance bool SupportLogarithmicAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_SupportLogarithmicAxes()
		}
		.property instance bool SupportStackedGroups()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_SupportStackedGroups()
		}
		.property instance bool SwitchValueAxes()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_SwitchValueAxes()
		}
		.property instance int32 YValuesPerPoint()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_YValuesPerPoint()
		}
		.property instance bool ZeroCrossing()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.ChartTypes.ThreeLineBreakChart'::get_ZeroCrossing()
		}
	}
}
.namespace 'System.Web.UI.DataVisualization.Charting.Data'
{
	.class private DataManager
		extends 'System.Web.UI.DataVisualization.Charting.ChartElement'
		implements [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method assembly hidebysig 
			instance void Initialize()
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Invalidate()
		{
			ret
		}
		.method assembly hidebysig 
			instance void ApplyPaletteColors()
		{
			ret
		}
		.method assembly hidebysig 
			instance void PrepareData(bool pointsApplyPaletteColors, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance int32 GetNumberOfPoints(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxYWithRadiusValue(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxXWithRadiusValue(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinXWithRadiusValue(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxYValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxXValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void GetMinMaxXValue([out] float64& min, [out] float64& max, string[] series)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void GetMinMaxYValue(int32 valueIndex, [out] float64& min, [out] float64& max, string[] series)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void GetMinMaxYValue([out] float64& min, [out] float64& max, string[] series)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance void GetMinMaxYValue(class [mscorlib]System.Collections.ArrayList seriesList, [out] float64& min, [out] float64& max)
		{
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxStackedYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxUnsignedStackedYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxStackedXValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinYWithRadiusValue(class 'System.Web.UI.DataVisualization.Charting.ChartArea' area, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinYValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinXValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinStackedYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinUnsignedStackedYValue(int32 valueIndex, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinStackedXValue(string[] series)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMaxHundredPercentStackedYValue(bool supportNegative, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly hidebysig 
			instance float64 GetMinHundredPercentStackedYValue(bool supportNegative, string[] series)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' get_Series()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' get_Palette()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PaletteCustomColors(valuetype [System.Drawing]System.Drawing.Color[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Drawing]System.Drawing.Color[] get_PaletteCustomColors()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.field assembly class [System]System.ComponentModel.Design.IServiceContainer serviceContainer
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' Palette()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 3A 53 79 73 74 65 6D 2E 57 65 62 2E 55 49 2E 44 61 74 61 56 69 73 75 61 6C 69 7A 61 74 69 6F 6E 2E 43 68 61 72 74 69 6E 67 2E 43 68 61 72 74 43 6F 6C 6F 72 50 61 6C 65 74 74 65 0C 00 00 00 00 00)
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' 'System.Web.UI.DataVisualization.Charting.Data.DataManager'::get_Palette()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Data.DataManager'::set_Palette(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette')
		}
		.property instance valuetype [System.Drawing]System.Drawing.Color[] PaletteCustomColors()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance valuetype [System.Drawing]System.Drawing.Color[] 'System.Web.UI.DataVisualization.Charting.Data.DataManager'::get_PaletteCustomColors()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Data.DataManager'::set_PaletteCustomColors(valuetype [System.Drawing]System.Drawing.Color[])
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' Series()
		{
			.custom instance void [System]System.ComponentModel.BindableAttribute::.ctor(bool) = { bool(true) }
			.get instance class 'System.Web.UI.DataVisualization.Charting.SeriesCollection' 'System.Web.UI.DataVisualization.Charting.Data.DataManager'::get_Series()
		}
	}
}
.namespace 'System.Web.UI.DataVisualization.Charting.Formulas'
{
	.class private AccumulationDistributionFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private AverageTrueRangeFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private BollingerBandsFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, float64 deviation, bool startFromFirst)
		{
			ret
		}
	}
	.class private ChaikinOscillatorFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 shortPeriod, int32 longPeriod, bool startFromFirst)
		{
			ret
		}
	}
	.class private CommodityChannelIndexFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private sealed DataField
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Average = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Bottom = int32(0x00000012)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Bubble = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' BubbleSize = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Center = int32(0x0000000E)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Close = int32(0x0000000D)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' High = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Low = int32(0x0000000B)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' LowerBox = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' LowerError = int32(0x0000000F)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' LowerWisker = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Median = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Open = int32(0x0000000C)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Top = int32(0x00000011)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' UpperBox = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' UpperError = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' UpperWisker = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' X = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' Y = int32(0x00000001)
	}
	.class private DetrendedPriceOscillatorFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private EaseOfMovementFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private EnvelopesFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, float64 shiftPercentage, bool startFromFirst)
		{
			ret
		}
	}
	.class private ExponentialMovingAverageFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private ForecastingFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'/RegressionType regressionType, int32 polynomialDegree, int32 forecastingPeriod, bool returnApproximationError, bool returnForecastingError)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void LoadParametersFromString(string parameters)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void CheckParameterString(string parameters)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance string SaveParametersToString()
		{
			ret
		}
	}
	.class private abstract sealed FormulaHelper
		extends [mscorlib]System.Object
	{
		.method assembly static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo' GetFormulaInfo(valuetype 'System.Web.UI.DataVisualization.Charting.FinancialFormula' formula)
		{
			ret
		}
		.method assembly static hidebysig 
			class [mscorlib]'System.Collections.Generic.IList`1'<valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'> GetDataFields(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' chartType)
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' GetDefaultChartType(valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' 'field')
		{
			ret
		}
		.method assembly static hidebysig 
			valuetype [mscorlib]'System.Nullable`1'<valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'> MapFormulaDataField(valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType' chartType, valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' formulaField)
		{
			ret
		}
	}
	.class private abstract FormulaInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] get_InputFields()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] get_OutputFields()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object[] get_Parameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] inputFields, valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] outputFields, object[] defaultParams)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance string SaveParametersToString()
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void LoadParametersFromString(string parameters)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance object ParseParameter(int32 index, string newParamValue)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void CheckParameterString(string parameters)
		{
			ret
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] InputFields()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'::get_InputFields()
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] OutputFields()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'[] 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'::get_OutputFields()
		}
		.property instance object[] Parameters()
		{
			.get instance object[] 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'::get_Parameters()
		}
	}
	.class private FormulaRegistry
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Register(string name, class [mscorlib]System.Type moduleType)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public hidebysig 
			instance class 'System.Web.UI.DataVisualization.Charting.Formulas.IFormula' GetFormulaModule(string name)
		{
			ret
		}
		.method public hidebysig 
			instance string GetModuleName(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.field assembly class [mscorlib]System.Collections.Hashtable registeredModules
		.property instance int32 Count()
		{
			.get instance int32 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaRegistry'::get_Count()
		}
	}
	.class private GeneralFormulas
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.PriceIndicators'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.GeneralFormulas'::get_Name()
		}
	}
	.class private GeneralTechnicalIndicators
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.PriceIndicators'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.GeneralTechnicalIndicators'::get_Name()
		}
	}
	.class private interface abstract IFormula
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.IFormula'::get_Name()
		}
	}
	.class private MassIndexFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, int32 averagePeriod)
		{
			ret
		}
	}
	.class private MedianPriceFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private MoneyFlowFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private MovingAverageConvergenceDivergenceFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 shortPeriod, int32 longPeriod)
		{
			ret
		}
	}
	.class private MovingAverageFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private NegativeVolumeIndexFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 startValue)
		{
			ret
		}
	}
	.class private OnBalanceVolumeFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private Oscillators
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.PriceIndicators'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method assembly hidebysig 
			instance void StochasticIndicator(float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList)
		{
			ret
		}
		.method assembly hidebysig 
			instance void WilliamsR(float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.Oscillators'::get_Name()
		}
	}
	.class private PerformanceFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private PositiveVolumeIndexFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 startValue)
		{
			ret
		}
	}
	.class private PriceIndicators
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.Formulas.IFormula'
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method assembly hidebysig 
			instance void MovingAverage(float64[] inputValues, [out] float64[]& outputValues, int32 period, bool FromFirst)
		{
			ret
		}
		.method assembly hidebysig 
			instance void ExponentialMovingAverage(float64[] inputValues, [out] float64[]& outputValues, int32 period, bool startFromFirst)
		{
			ret
		}
		.method assembly hidebysig 
			instance void StandardDeviation(float64[] inputValues, [out] float64[]& outputValues, int32 period, bool startFromFirst)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void CheckNumOfValues(float64[][] inputValues, int32 numOfYValues)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.PriceIndicators'::get_Name()
		}
	}
	.class private PriceVolumeTrendFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private RateOfChangeFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private RelativeStrengthIndexFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private SeriesFieldInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class 'System.Web.UI.DataVisualization.Charting.Series' get_Series()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SeriesName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' get_DataField()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'System.Web.UI.DataVisualization.Charting.Series' series, valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' dataField)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string seriesName, valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' dataField)
		{
			ret
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' DataField()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField' 'System.Web.UI.DataVisualization.Charting.Formulas.SeriesFieldInfo'::get_DataField()
		}
		.property instance class 'System.Web.UI.DataVisualization.Charting.Series' Series()
		{
			.get instance class 'System.Web.UI.DataVisualization.Charting.Series' 'System.Web.UI.DataVisualization.Charting.Formulas.SeriesFieldInfo'::get_Series()
		}
		.property instance string SeriesName()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.SeriesFieldInfo'::get_SeriesName()
		}
	}
	.class private SeriesFieldList
		extends class [mscorlib]'System.Collections.Generic.List`1'<class 'System.Web.UI.DataVisualization.Charting.Formulas.SeriesFieldInfo'>
	{
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public static hidebysig 
			class 'System.Web.UI.DataVisualization.Charting.Formulas.SeriesFieldList' FromString(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, string seriesFields, class [mscorlib]'System.Collections.Generic.IList`1'<valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.DataField'> formulaFields)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private StandardDeviationFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private StatisticalAnalysis
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.Formulas.IFormula'
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.StatisticalAnalysis'::get_Name()
		}
	}
	.class private StochasticIndicatorFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 periodD, int32 periodK)
		{
			ret
		}
	}
	.class private TimeSeriesAndForecasting
		extends [mscorlib]System.Object
		implements 'System.Web.UI.DataVisualization.Charting.Formulas.IFormula'
	{
		.class nested assembly sealed RegressionType
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'/RegressionType Exponential = int32(0x00000003)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'/RegressionType Logarithmic = int32(0x00000001)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'/RegressionType Polynomial = int32(0x00000000)
			.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'/RegressionType Power = int32(0x00000002)
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.TimeSeriesAndForecasting'::get_Name()
		}
	}
	.class private TriangularMovingAverageFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private TripleExponentialMovingAverageFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
	.class private TypicalPriceFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private VolatilityChaikinsFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, int32 signalPeriod)
		{
			ret
		}
	}
	.class private VolumeIndicators
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.PriceIndicators'
	{
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Formula(string formulaName, float64[][] inputValues, [out] float64[][]& outputValues, string[] parameterList, string[] extraParameterList, [out] string[][]& outLabels)
		{
			ret
		}
		.method assembly hidebysig 
			instance void AccumulationDistribution(float64[][] inputValues, [out] float64[][]& outputValues)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Formulas.VolumeIndicators'::get_Name()
		}
	}
	.class private VolumeOscillatorFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 shortPeriod, int32 longPeriod, bool percentage)
		{
			ret
		}
	}
	.class private WeightedCloseFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private WeightedMovingAverageFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period, bool startFromFirst)
		{
			ret
		}
	}
	.class private WilliamsRFormulaInfo
		extends 'System.Web.UI.DataVisualization.Charting.Formulas.FormulaInfo'
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 period)
		{
			ret
		}
	}
}
.namespace 'System.Web.UI.DataVisualization.Charting.Utilities'
{
	.class private BinaryFormatSerializer
		extends 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'
	{
		.method assembly virtual hidebysig strict 
			instance void Serialize(object objectToSerialize, object destination)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, string fileName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, class [mscorlib]'System.IO.BinaryWriter' writer)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void SerializeObject(object objectToSerialize, object parent, string elementName, class [mscorlib]'System.IO.BinaryWriter' writer)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void SerializeCollection(object objectToSerialize, string elementName, class [mscorlib]'System.IO.BinaryWriter' writer)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void SerializeProperty(object objectToSerialize, object parent, string elementName, class [mscorlib]'System.IO.BinaryWriter' writer)
		{
			ret
		}
		.method assembly hidebysig 
			instance void WritePropertyValue(object obj, string elementName, class [mscorlib]'System.IO.BinaryWriter' writer)
		{
			ret
		}
		.method assembly hidebysig 
			instance void CheckPropertiesID(class [mscorlib]System.Collections.ArrayList propNames)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Deserialize(object objectToDeserialize, object source)
		{
			ret
		}
		.method public hidebysig 
			instance void Deserialize(object objectToDeserialize, string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void Deserialize(object objectToDeserialize, class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig 
			instance void Deserialize(object objectToDeserialize, class [mscorlib]'System.IO.BinaryReader' reader)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance int32 DeserializeObject(object objectToDeserialize, object parent, string elementName, class [mscorlib]'System.IO.BinaryReader' reader, bool skipElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class private abstract sealed ChartPaletteColors
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [System.Drawing]System.Drawing.Color[] GetPaletteColors(valuetype 'System.Web.UI.DataVisualization.Charting.ChartColorPalette' palette)
		{
			ret
		}
	}
	.class private sealed CircularAreaDrawingStyles
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.CircularAreaDrawingStyles' Circle = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.CircularAreaDrawingStyles' Polygon = int32(0x00000000)
	}
	.class private CustomPropertyInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type valueType, object defaultValue, string description, valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType'[] appliesToChartType, bool appliesToSeries, bool appliesToDataPoint)
		{
			ret
		}
		.field public bool AppliesTo2D
		.field public bool AppliesTo3D
		.field public valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType'[] AppliesToChartType
		.field public bool AppliesToDataPoint
		.field public bool AppliesToSeries
		.field public object DefaultValue
		.field public string Description
		.field public object MaxValue
		.field public object MinValue
		.field public string Name
		.field public class [mscorlib]System.Type ValueType
	}
	.class private abstract sealed CustomPropertyName
		extends [mscorlib]System.Object
	{
		.field static assembly literal string AreaDrawingStyle = "AreaDrawingStyle"
		.field static assembly literal string BarLabelStyle = "BarLabelStyle"
		.field static assembly literal string BoxPlotPercentile = "BoxPlotPercentile"
		.field static assembly literal string BoxPlotSeries = "BoxPlotSeries"
		.field static assembly literal string BoxPlotShowAverage = "BoxPlotShowAverage"
		.field static assembly literal string BoxPlotShowMedian = "BoxPlotShowMedian"
		.field static assembly literal string BoxPlotShowUnusualValues = "BoxPlotShowUnusualValues"
		.field static assembly literal string BoxPlotWhiskerPercentile = "BoxPlotWhiskerPercentile"
		.field static assembly literal string BoxSize = "BoxSize"
		.field static assembly literal string BubbleMaxSize = "BubbleMaxSize"
		.field static assembly literal string BubbleMinSize = "BubbleMinSize"
		.field static assembly literal string BubbleScaleMax = "BubbleScaleMax"
		.field static assembly literal string BubbleScaleMin = "BubbleScaleMin"
		.field static assembly literal string BubbleUseSizeForLabel = "BubbleUseSizeForLabel"
		.field static assembly literal string CalloutLineColor = "CalloutLineColor"
		.field static assembly literal string CircularLabelsStyle = "CircularLabelsStyle"
		.field static assembly literal string CollectedChartShowLabels = "CollectedChartShowLabels"
		.field static assembly literal string CollectedChartShowLegend = "CollectedChartShowLegend"
		.field static assembly literal string CollectedColor = "CollectedColor"
		.field static assembly literal string CollectedLabel = "CollectedLabel"
		.field static assembly literal string CollectedLegendText = "CollectedLegendText"
		.field static assembly literal string CollectedSliceExploded = "CollectedSliceExploded"
		.field static assembly literal string CollectedStyle = "CollectedStyle"
		.field static assembly literal string CollectedThreshold = "CollectedThreshold"
		.field static assembly literal string CollectedThresholdUsePercent = "CollectedThresholdUsePercent"
		.field static assembly literal string CollectedToolTip = "CollectedToolTip"
		.field static assembly literal string DoughnutRadius = "DoughnutRadius"
		.field static assembly literal string DrawSideBySide = "DrawSideBySide"
		.field static assembly literal string DrawingStyle = "DrawingStyle"
		.field static assembly literal string EmptyPointValue = "EmptyPointValue"
		.field static assembly literal string ErrorBarCenterMarkerStyle = "ErrorBarCenterMarkerStyle"
		.field static assembly literal string ErrorBarSeries = "ErrorBarSeries"
		.field static assembly literal string ErrorBarStyle = "ErrorBarStyle"
		.field static assembly literal string ErrorBarType = "ErrorBarType"
		.field static assembly literal string Exploded = "Exploded"
		.field static assembly literal string Funnel3DDrawingStyle = "Funnel3DDrawingStyle"
		.field static assembly literal string Funnel3DRotationAngle = "Funnel3DRotationAngle"
		.field static assembly literal string FunnelInsideLabelAlignment = "FunnelInsideLabelAlignment"
		.field static assembly literal string FunnelLabelStyle = "FunnelLabelStyle"
		.field static assembly literal string FunnelMinPointHeight = "FunnelMinPointHeight"
		.field static assembly literal string FunnelNeckHeight = "FunnelNeckHeight"
		.field static assembly literal string FunnelNeckWidth = "FunnelNeckWidth"
		.field static assembly literal string FunnelOutsideLabelPlacement = "FunnelOutsideLabelPlacement"
		.field static assembly literal string FunnelPointGap = "FunnelPointGap"
		.field static assembly literal string FunnelStyle = "FunnelStyle"
		.field static assembly literal string IsXAxisQuantitative = "IsXAxisQuantitative"
		.field static assembly literal string LabelStyle = "LabelStyle"
		.field static assembly literal string LabelValueType = "LabelValueType"
		.field static assembly literal string LabelsHorizontalLineSize = "LabelsHorizontalLineSize"
		.field static assembly literal string LabelsRadialLineSize = "LabelsRadialLineSize"
		.field static assembly literal string LineTension = "LineTension"
		.field static assembly literal string MaxPixelPointWidth = "MaxPixelPointWidth"
		.field static assembly literal string MinPixelPointWidth = "MinPixelPointWidth"
		.field static assembly literal string MinimumRelativePieSize = "MinimumRelativePieSize"
		.field static assembly literal string NumberOfLinesInBreak = "NumberOfLinesInBreak"
		.field static assembly literal string OpenCloseStyle = "OpenCloseStyle"
		.field static assembly literal string PermittedPixelError = "PermittedPixelError"
		.field static assembly literal string PieAutoAxisLabels = "AutoAxisLabels"
		.field static assembly literal string PieDrawingStyle = "PieDrawingStyle"
		.field static assembly literal string PieLabelStyle = "PieLabelStyle"
		.field static assembly literal string PieLineColor = "PieLineColor"
		.field static assembly literal string PieStartAngle = "PieStartAngle"
		.field static assembly literal string PixelPointDepth = "PixelPointDepth"
		.field static assembly literal string PixelPointGapDepth = "PixelPointGapDepth"
		.field static assembly literal string PixelPointWidth = "PixelPointWidth"
		.field static assembly literal string PointWidth = "PointWidth"
		.field static assembly literal string PolarDrawingStyle = "PolarDrawingStyle"
		.field static assembly literal string PriceDownColor = "PriceDownColor"
		.field static assembly literal string PriceUpColor = "PriceUpColor"
		.field static assembly literal string ProportionalSymbols = "ProportionalSymbols"
		.field static assembly literal string Pyramid3DDrawingStyle = "Pyramid3DDrawingStyle"
		.field static assembly literal string Pyramid3DRotationAngle = "Pyramid3DRotationAngle"
		.field static assembly literal string PyramidInsideLabelAlignment = "PyramidInsideLabelAlignment"
		.field static assembly literal string PyramidLabelStyle = "PyramidLabelStyle"
		.field static assembly literal string PyramidMinPointHeight = "PyramidMinPointHeight"
		.field static assembly literal string PyramidOutsideLabelPlacement = "PyramidOutsideLabelPlacement"
		.field static assembly literal string PyramidPointGap = "PyramidPointGap"
		.field static assembly literal string PyramidValueType = "PyramidValueType"
		.field static assembly literal string RadarDrawingStyle = "RadarDrawingStyle"
		.field static assembly literal string ReversalAmount = "ReversalAmount"
		.field static assembly literal string ShowMarkerLines = "ShowMarkerLines"
		.field static assembly literal string ShowOpenClose = "ShowOpenClose"
		.field static assembly literal string StackedGroupName = "StackedGroupName"
		.field static assembly literal string UsedYValue = "UsedYValue"
		.field static assembly literal string UsedYValueHigh = "UsedYValueHigh"
		.field static assembly literal string UsedYValueLow = "UsedYValueLow"
		.field static assembly literal string _3DLabelLineSize = "3DLabelLineSize"
	}
	.class private CustomPropertyRegistry
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public hidebysig 
			instance void Register(class 'System.Web.UI.DataVisualization.Charting.Utilities.CustomPropertyInfo' customPropertyInfo)
		{
			ret
		}
		.field static assembly class [mscorlib]'System.Collections.Generic.List`1'<valuetype 'System.Web.UI.DataVisualization.Charting.SeriesChartType'> IsXAxisQuantitativeChartTypes
		.field static assembly int32 MaxValueOfPixelAttribute
		.field assembly class [mscorlib]System.Collections.ArrayList registeredCustomProperties
	}
	.class private sealed EmptyPointTypes
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.EmptyPointTypes' Average = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.EmptyPointTypes' Zero = int32(0x00000001)
	}
	.class private sealed ErrorBarMarkerStyles
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Circle = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Cross = int32(0x00000005)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Diamond = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Line = int32(0x0000000A)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Square = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Star10 = int32(0x00000009)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Star4 = int32(0x00000006)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Star5 = int32(0x00000007)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Star6 = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.ErrorBarMarkerStyles' Triangle = int32(0x00000004)
	}
	.class private ImageLoader
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable, [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System]System.ComponentModel.Design.IServiceContainer container)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Image LoadImage(string imageURL)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Drawing]System.Drawing.Image LoadImage(string imageURL, bool saveImage)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool GetAdjustedImageSize(string name, class [System.Drawing]System.Drawing.Graphics graphics, valuetype [System.Drawing]System.Drawing.SizeF& size)
		{
			ret
		}
		.method assembly static hidebysig 
			void GetAdjustedImageSize(class [System.Drawing]System.Drawing.Image image, class [System.Drawing]System.Drawing.Graphics graphics, valuetype [System.Drawing]System.Drawing.SizeF& size)
		{
			ret
		}
		.method assembly static hidebysig 
			bool DoDpisMatch(class [System.Drawing]System.Drawing.Image image, class [System.Drawing]System.Drawing.Graphics graphics)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Drawing]System.Drawing.Image GetScaledImage(class [System.Drawing]System.Drawing.Image image, class [System.Drawing]System.Drawing.Graphics graphics)
		{
			ret
		}
	}
	.class private KeywordInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, string keyword, string keywordAliases, string description, string appliesToTypes, string appliesToProperties, bool supportsFormatting, bool supportsValueIndex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetKeywords()
		{
			ret
		}
		.field public string AppliesToProperties
		.field public string AppliesToTypes
		.field public string Description
		.field public string Keyword
		.field public string KeywordAliases
		.field public string Name
		.field public bool SupportsFormatting
		.field public bool SupportsValueIndex
	}
	.class private abstract sealed KeywordName
		extends [mscorlib]System.Object
	{
		.field static assembly literal string Avg = "#AVG"
		.field static assembly literal string AxisLabel = "#AXISLABEL"
		.field static assembly literal string CustomProperty = "#CUSTOMPROPERTY"
		.field static assembly literal string First = "#FIRST"
		.field static assembly literal string Index = "#INDEX"
		.field static assembly literal string Label = "#LABEL"
		.field static assembly literal string Last = "#LAST"
		.field static assembly literal string LegendText = "#LEGENDTEXT"
		.field static assembly literal string Max = "#MAX"
		.field static assembly literal string Min = "#MIN"
		.field static assembly literal string Percent = "#PERCENT"
		.field static assembly literal string Ser = "#SER"
		.field static assembly literal string SeriesName = "#SERIESNAME"
		.field static assembly literal string Total = "#TOTAL"
		.field static assembly literal string Val = "#VAL"
		.field static assembly literal string ValX = "#VALX"
		.field static assembly literal string ValY = "#VALY"
	}
	.class private KeywordsRegistry
		extends [mscorlib]System.Object
		implements [mscorlib]System.IServiceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.IServiceProvider.GetService(class [mscorlib]System.Type serviceType)
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.override [mscorlib]System.IServiceProvider::GetService
			ret
		}
		.method public hidebysig 
			instance void Register(string name, string keyword, string keywordAliases, string description, string appliesToTypes, string appliesToProperties, bool supportsFormatting, bool supportsValueIndex)
		{
			ret
		}
		.field assembly class [mscorlib]System.Collections.ArrayList registeredKeywords
	}
	.class private sealed LabelAlignments
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Auto = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Bottom = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' BottomLeft = int32(0x00000040)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' BottomRight = int32(0x00000080)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Center = int32(0x00000100)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Left = int32(0x00000008)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Right = int32(0x00000004)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' Top = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' TopLeft = int32(0x00000010)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.LabelAlignments' TopRight = int32(0x00000020)
	}
	.class private sealed PolarDrawingStyles
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.PolarDrawingStyles' Line = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.PolarDrawingStyles' Marker = int32(0x00000001)
	}
	.class private sealed SerializationStatus
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationStatus' Loading = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationStatus' None = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationStatus' Resetting = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationStatus' Saving = int32(0x00000002)
	}
	.class private sealed SerializationVisibility
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' Attribute = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' Element = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' Hidden = int32(0x00000000)
	}
	.class private sealed SerializationVisibilityAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(32767) }
		.method assembly hidebysig specialname 
			instance void .ctor(valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' visibility)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' get_Visibility()
		{
			ret
		}
		.property instance valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' Visibility()
		{
			.get instance valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibility' 'System.Web.UI.DataVisualization.Charting.Utilities.SerializationVisibilityAttribute'::get_Visibility()
		}
	}
	.class private abstract SerializerBase
		extends [mscorlib]System.Object
	{
		.method assembly hidebysig specialname 
			instance bool get_IsUnknownAttributeIgnored()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsUnknownAttributeIgnored(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsTemplateMode()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsTemplateMode(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance bool get_IsResetWhenLoading()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_IsResetWhenLoading(bool 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_SerializableContent()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_SerializableContent(string 'value')
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance string get_NonSerializableContent()
		{
			ret
		}
		.method assembly hidebysig specialname 
			instance void set_NonSerializableContent(string 'value')
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void ResetObjectProperties(object objectToReset)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance void ResetObjectProperties(object objectToReset, object parent, string elementName)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void Serialize(object objectToSerialize, object destination)
		{
		}
		.method assembly virtual hidebysig newslot strict abstract 
			instance void Deserialize(object objectToDeserialize, object source)
		{
		}
		.method assembly static hidebysig 
			string FontToString(class [System.Drawing]System.Drawing.Font font)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Drawing]System.Drawing.Font FontFromString(string fontString)
		{
			ret
		}
		.method assembly static hidebysig 
			int16 GetStringHashCode(string str)
		{
			ret
		}
		.method assembly hidebysig 
			instance int16 ReadHashID(class [mscorlib]'System.IO.BinaryReader' reader)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsChartBaseProperty(object objectToSerialize, object parent, class [mscorlib]System.Reflection.PropertyInfo pi)
		{
			ret
		}
		.method assembly static hidebysig 
			string ImageToString(class [System.Drawing]System.Drawing.Image image)
		{
			ret
		}
		.method assembly static hidebysig 
			class [System.Drawing]System.Drawing.Image ImageFromString(string data)
		{
			ret
		}
		.method assembly hidebysig 
			instance string GetObjectName(object obj)
		{
			ret
		}
		.method assembly hidebysig 
			instance object GetListNewItem(class [mscorlib]System.Collections.IList list, string itemTypeName, string& itemName, bool& reusedObject)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool ShouldSerializeAsAttribute(class [mscorlib]System.Reflection.PropertyInfo pi, object parent)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool SerializeICollAsAtribute(class [mscorlib]System.Reflection.PropertyInfo pi, object objectToSerialize)
		{
			ret
		}
		.method assembly hidebysig 
			instance bool IsSerializableContent(string propertyName, object parent)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System]System.ComponentModel.TypeConverter FindConverter(class [System]System.ComponentModel.PropertyDescriptor pd)
		{
			ret
		}
		.method assembly hidebysig 
			instance class [System]System.ComponentModel.TypeConverter FindConverterByType(class [System]System.ComponentModel.TypeConverterAttribute attr)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static assembly class [System.Drawing]System.Drawing.ColorConverter colorConverter
		.field static assembly class [System.Drawing]System.Drawing.FontConverter fontConverter
		.field static family class [mscorlib]System.StringComparer hashCodeProvider
		.property instance bool IsResetWhenLoading()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::get_IsResetWhenLoading()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::set_IsResetWhenLoading(bool)
		}
		.property instance bool IsTemplateMode()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::get_IsTemplateMode()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::set_IsTemplateMode(bool)
		}
		.property instance bool IsUnknownAttributeIgnored()
		{
			.get instance bool 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::get_IsUnknownAttributeIgnored()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::set_IsUnknownAttributeIgnored(bool)
		}
		.property instance string NonSerializableContent()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::get_NonSerializableContent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::set_NonSerializableContent(string)
		}
		.property instance string SerializableContent()
		{
			.get instance string 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::get_SerializableContent()
			.set instance void 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'::set_SerializableContent(string)
		}
	}
	.class private sealed StockLabelValueTypes
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockLabelValueTypes' Close = int32(0x00000003)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockLabelValueTypes' High = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockLabelValueTypes' Low = int32(0x00000001)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockLabelValueTypes' Open = int32(0x00000002)
	}
	.class private sealed StockShowOpenCloseTypes
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockShowOpenCloseTypes' Both = int32(0x00000000)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockShowOpenCloseTypes' Close = int32(0x00000002)
		.field static public literal valuetype 'System.Web.UI.DataVisualization.Charting.Utilities.StockShowOpenCloseTypes' Open = int32(0x00000001)
	}
	.class private abstract sealed ValueConverter
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string FormatValue(class 'System.Web.UI.DataVisualization.Charting.Chart' chart, object obj, object objTag, float64 'value', string format, valuetype 'System.Web.UI.DataVisualization.Charting.ChartValueType' valueType, valuetype 'System.Web.UI.DataVisualization.Charting.ChartElementType' elementType)
		{
			ret
		}
	}
	.class private XmlFormatSerializer
		extends 'System.Web.UI.DataVisualization.Charting.Utilities.SerializerBase'
	{
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, class [System.Xml]System.Xml.XmlWriter xmlWriter)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, class [mscorlib]'System.IO.TextWriter' textWriter)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Serialize(object objectToSerialize, string fileName)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Serialize(object objectToSerialize, object writer)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SerializeObject(object objectToSerialize, object parent, string elementName, class [System.Xml]System.Xml.XmlNode xmlParentNode, class [System.Xml]System.Xml.XmlDocument xmlDocument)
		{
			ret
		}
		.method assembly hidebysig 
			instance void SerializeDataPoint(object objectToSerialize, class [System.Xml]System.Xml.XmlNode xmlParentNode, class [System.Xml]System.Xml.XmlDocument xmlDocument)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SerializeCollection(object objectToSerialize, string elementName, class [System.Xml]System.Xml.XmlNode xmlParentNode, class [System.Xml]System.Xml.XmlDocument xmlDocument)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SerializeProperty(object objectToSerialize, object parent, string elementName, class [System.Xml]System.Xml.XmlNode xmlParentNode, class [System.Xml]System.Xml.XmlDocument xmlDocument)
		{
			ret
		}
		.method family hidebysig 
			instance string GetXmlValue(object obj, object parent, string elementName)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Deserialize(object objectToDeserialize, class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method assembly hidebysig 
			instance void Deserialize(object objectToDeserialize, class [System.Xml]System.Xml.XmlReader xmlReader)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Deserialize(object objectToDeserialize, class [mscorlib]'System.IO.TextReader' textReader)
		{
			ret
		}
		.method assembly hidebysig 
			instance void Deserialize(object objectToDeserialize, string fileName)
		{
			ret
		}
		.method assembly virtual hidebysig strict 
			instance void Deserialize(object objectToDeserialize, object reader)
		{
			ret
		}
		.method assembly virtual hidebysig newslot strict 
			instance int32 DeserializeObject(object objectToDeserialize, object parent, string elementName, class [System.Xml]System.Xml.XmlNode xmlParentNode, class [System.Xml]System.Xml.XmlDocument xmlDocument)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}

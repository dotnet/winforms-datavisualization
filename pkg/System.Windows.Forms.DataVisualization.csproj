<Project Sdk="Microsoft.NET.Sdk" InitialTargets="SetOutputItemType">
  <!-- 
    This pkgproj is used to create a nuget package.
    The ArcadeSDK uses vanilla 'dotnet pack', but creates one package per csproj, which is not what we want.

    There are two main ways to work around this: 
    
    1. A pull model where a single project pulls in everything that the package needs.
        a. This is the model we're using because it's less work and we only have a few more binaries coming in the future.
        b. An example of the pull model is at https://github.com/nuget/home/issues/3891#issuecomment-377319939, with official docs
        at https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#targetsfortfmspecificbuildoutput

    2. A push model where projects control what they contribute to the package.
        a. An example of the push model is at https://github.com/dotnet/machinelearning/blob/master/pkg/Directory.Build.props. 
  -->

  <PropertyGroup>
    <!-- Don't include this project in the build output -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <PublishWindowsPdb>false</PublishWindowsPdb>

    <IncludeSymbols>false</IncludeSymbols>

    <TargetFramework>net5.0-windows</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>
    <IsPackable>true</IsPackable>
    <NoWarn>$(NoWarn);NU5125</NoWarn>

    <!-- Disable a VS-specific target that is failing when building this csproj -->
    <GenerateDependencyFile>false</GenerateDependencyFile>

  </PropertyGroup>

  <!-- nuspec properties -->
  <PropertyGroup>
    <PackageId>System.Windows.Forms.DataVisualization </PackageId>
    <Description>This package contains the charting controls for Windows Forms for .NET Core.</Description>
    <Authors>Microsoft</Authors>
    <RepositoryUrl>https://github.com/dotnet/winforms-datavisualization</RepositoryUrl>
    <PackageTags>WinForms Windows Forms DataVisualization DataVisualisation Data Visualization Visualisation</PackageTags>
  </PropertyGroup>

  <!-- Force project references to avoid packaging their dependencies -->
  <ItemDefinitionGroup>
    <ProjectReference>
      <PrivateAssets>All</PrivateAssets>
    </ProjectReference>
  </ItemDefinitionGroup>

  <!-- Any projects referenced here will have their outputs automatically put into the package -->
  <!-- If you add a new csproj, and you want the outputs in the package, you must add it here -->

  <PropertyGroup>
    <!-- Supress creation of contentFiles directory -->
    <ContentTargetFolders>.\</ContentTargetFolders>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="..\LICENSE.TXT;..\THIRD-PARTY-NOTICES.TXT" />
    <ProjectReference Include="..\src\System.Windows.Forms.DataVisualization\ChartWin.csproj" />
    <Content Update="@(Content)">
      <!-- Supress creation of content directory -->
      <PackagePath>.\</PackagePath>
    </Content>
  </ItemGroup>

  <!-- Force the output item type for all project references to "TfmSpecificPackageFile", which makes them get packed -->
  <Target Name="SetOutputItemType">
    <ItemGroup>
      <ProjectReference>
        <OutputItemType>TfmSpecificPackageFile</OutputItemType>
        <Targets>GetPackageContent</Targets>
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      </ProjectReference>
    </ItemGroup>
  </Target>

  <!-- Call custom targets (defined below) when creating the package -->
  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificBuildOutput);ResolveReferences</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

</Project>
